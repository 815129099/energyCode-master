{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue","mtime":1563757932601},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport API from '@/api';\nexport default {\n  data: function data() {\n    return {\n      totalCount: 0,\n      //分页组件--数据总条数\n      list: [],\n      //表格的数据\n      listLoading: false,\n      //数据加载等待动画\n      listQuery: {\n        pageNum: 1,\n        //页码\n        pageRow: 50 //每页条数\n\n      },\n      roles: [],\n      //角色列表\n      dialogStatus: 'create',\n      dialogFormVisible: false,\n      textMap: {\n        update: '编辑',\n        create: '新建用户'\n      },\n      tempUser: {\n        username: '',\n        password: '',\n        nickname: '',\n        roleId: '',\n        userId: '',\n        phone: '',\n        email: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请填写工号',\n          trigger: 'blur'\n        }, {\n          min: 7,\n          max: 7,\n          message: '请填写7个字符的工号',\n          trigger: 'blur'\n        }],\n        nickname: [{\n          required: true,\n          message: '请填写姓名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 4,\n          message: '请填写2-4个字符的姓名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请填写密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 10,\n          message: '请填写6-10个字符的密码',\n          trigger: 'blur'\n        }],\n        roleId: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: function validator(rule, value, callback) {\n            var vdt = API.validate.VDATA(value, {\n              \"required\": {\n                msg: \"请输入手机号\"\n              },\n              \"mphone\": {\n                msg: \"请输入有效的手机号\"\n              }\n            });\n\n            if (!vdt.result) {\n              callback(new Error(vdt.msg));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: function validator(rule, value, callback) {\n            var vdt = API.validate.VDATA(value, {\n              \"required\": {\n                msg: \"请输入邮箱\"\n              },\n              \"email\": {\n                msg: \"请输入有效的邮箱\"\n              }\n            });\n\n            if (!vdt.result) {\n              callback(new Error(vdt.msg));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n\n    if (this.hasPerm('user:add') || this.hasPerm('user:update')) {\n      this.getAllRoles();\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['userId'])),\n  methods: {\n    getAllRoles: function getAllRoles() {\n      var _this = this;\n\n      this.api({\n        url: \"/api/user/getAllRoles\",\n        method: \"get\"\n      }).then(function (data) {\n        _this.roles = data.list;\n      });\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      //查询列表\n      this.listLoading = true;\n      this.api({\n        url: \"/api/user/list\",\n        method: \"get\",\n        params: this.listQuery\n      }).then(function (data) {\n        _this2.listLoading = false;\n        _this2.list = data.list;\n        _this2.totalCount = data.totalCount;\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      //改变每页数量\n      this.listQuery.pageRow = val;\n      this.handleFilter();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      //改变页码\n      this.listQuery.pageNum = val;\n      this.getList();\n    },\n    handleFilter: function handleFilter() {\n      //查询事件\n      this.listQuery.pageNum = 1;\n      this.getList();\n    },\n    getIndex: function getIndex($index) {\n      //表格序号\n      return (this.listQuery.pageNum - 1) * this.listQuery.pageRow + $index + 1;\n    },\n    showCreate: function showCreate() {\n      //显示新增对话框\n      this.tempUser.username = \"\";\n      this.tempUser.password = \"\";\n      this.tempUser.nickname = \"\";\n      this.tempUser.roleId = \"\";\n      this.tempUser.userId = \"\";\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    showUpdate: function showUpdate($index) {\n      var user = this.list[$index];\n      this.tempUser.username = user.username;\n      this.tempUser.nickname = user.nickname;\n      this.tempUser.roleId = user.roleId;\n      this.tempUser.userId = user.userId;\n      this.tempUser.deleteStatus = '1';\n      this.tempUser.password = '';\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n    },\n    createUser: function createUser(tempUser) {\n      var _this3 = this;\n\n      this.$refs[tempUser].validate(function (valid) {\n        if (valid) {\n          //添加新用户\n          _this3.api({\n            url: \"/api/user/addUser\",\n            method: \"post\",\n            data: _this3.tempUser\n          }).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    updateUser: function updateUser() {\n      var _this4 = this;\n\n      //修改用户信息\n      var _vue = this;\n\n      this.api({\n        url: \"/api/user/updateUser\",\n        method: \"post\",\n        data: this.tempUser\n      }).then(function () {\n        var msg = \"修改成功\";\n        _this4.dialogFormVisible = false;\n\n        if (_this4.userId === _this4.tempUser.userId) {\n          msg = '修改成功,部分信息重新登录后生效';\n        }\n\n        _this4.$message({\n          message: msg,\n          type: 'success',\n          duration: 1 * 1000,\n          onClose: function onClose() {\n            _vue.getList();\n          }\n        });\n      });\n    },\n    removeUser: function removeUser($index) {\n      var _vue = this;\n\n      this.$confirm('确定删除此用户?', '提示', {\n        confirmButtonText: '确定',\n        showCancelButton: false,\n        type: 'warning'\n      }).then(function () {\n        var user = _vue.list[$index];\n        user.deleteStatus = '2';\n\n        _vue.api({\n          url: \"/api/user/updateUser\",\n          method: \"post\",\n          data: user\n        }).then(function () {\n          _vue.getList();\n        }).catch(function () {\n          _vue.$message.error(\"删除失败\");\n        });\n      });\n    }\n  }\n};",null]}