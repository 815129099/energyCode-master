{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\energyCode-master\\src\\api\\utils\\request.js","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\api\\utils\\request.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606188053867},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\code\\\\energyCode-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '../../store'; // 创建axios实例\n\nvar service = axios.create({\n  //baseURL: process.env.BASE_API, // api的base_url\n  timeout: 1000 * 30,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  //config.headers['Authorization'] = Vue.cookie.get('token');\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n}); // response拦截器\n\nservice.interceptors.response.use(function (response) {\n  console.log(response);\n\n  if (response.data && response.data.status == \"20011\") {\n    // -1, token失效 401 没有token\n    //Vue.cookie.delete('token');\n    // Vue.router.push({name: 'login'});\n    //this.$message(\"登录过期，请重新登录！\");\n    //Vue.router.push({name: 'login'});\n    // this.$router.push({path: 'login'});\n    Message({\n      showClose: true,\n      message: response.data.msg,\n      type: 'error',\n      duration: 500,\n      onClose: function onClose() {\n        store.dispatch('FedLogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      }\n    });\n    return _Promise.reject(\"未登录\");\n  } else if (response.data && response.data.status != '0') {\n    Message({\n      message: response.data.msg,\n      type: 'error',\n      duration: 2 * 1000\n    });\n    return _Promise.reject(response.data);\n  }\n\n  return response;\n}, function (error) {\n  return _Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["D:\\code\\energyCode-master\\src\\api\\utils\\request.js"],"names":["Vue","axios","Message","MessageBox","store","service","create","timeout","withCredentials","headers","interceptors","request","use","config","error","reject","response","console","log","data","status","showClose","message","msg","type","duration","onClose","dispatch","then","location","reload"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,YAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,OAAO,EAFS;AAGzBC,EAAAA,eAAe,EAAE,IAHQ;AAIzBC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAJgB,CAAb,CAAhB,C,CASA;;AACAJ,OAAO,CAACK,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvC;AACA,SAAOA,MAAP;AACH,CAHD,EAGG,UAAAC,KAAK,EAAI;AACR,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,CALD,E,CAOA;;AACAT,OAAO,CAACK,YAAR,CAAqBM,QAArB,CAA8BJ,GAA9B,CAAkC,UAAAI,QAAQ,EAAI;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACC,MAAGA,QAAQ,CAACG,IAAT,IAAiBH,QAAQ,CAACG,IAAT,CAAcC,MAAd,IAAuB,OAA3C,EAAoD;AAAE;AACnD;AACD;AACA;AACA;AACD;AACAlB,IAAAA,OAAO,CAAC;AACNmB,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,OAAO,EAAEN,QAAQ,CAACG,IAAT,CAAcI,GAFjB;AAGNC,MAAAA,IAAI,EAAE,OAHA;AAINC,MAAAA,QAAQ,EAAE,GAJJ;AAKNC,MAAAA,OAAO,EAAE,mBAAM;AACbtB,QAAAA,KAAK,CAACuB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCC,UAAAA,QAAQ,CAACC,MAAT,GADqC,CACpB;AAClB,SAFD;AAGD;AATK,KAAD,CAAP;AAWA,WAAO,SAAQf,MAAR,CAAe,KAAf,CAAP;AACD,GAlBA,MAkBK,IAAGC,QAAQ,CAACG,IAAT,IAAiBH,QAAQ,CAACG,IAAT,CAAcC,MAAd,IAAuB,GAA3C,EAA+C;AACjDlB,IAAAA,OAAO,CAAC;AACJoB,MAAAA,OAAO,EAAEN,QAAQ,CAACG,IAAT,CAAcI,GADnB;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP;AAKJ,WAAO,SAAQV,MAAR,CAAeC,QAAQ,CAACG,IAAxB,CAAP;AACC;;AACD,SAAOH,QAAP;AACH,CA7BD,EA6BG,UAAAF,KAAK,EAAI;AACR,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,CA/BD;AAiCA,eAAeT,OAAf","sourcesContent":["import Vue from 'vue';\nimport axios from 'axios';\nimport {Message, MessageBox} from 'element-ui'\nimport store from '../../store'\n// 创建axios实例\nconst service = axios.create({\n    //baseURL: process.env.BASE_API, // api的base_url\n    timeout: 1000 * 30,\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n    }\n});\n\n// request拦截器\nservice.interceptors.request.use(config => {\n    //config.headers['Authorization'] = Vue.cookie.get('token');\n    return config;\n}, error => {\n    return Promise.reject(error);\n});\n\n// response拦截器\nservice.interceptors.response.use(response => {\n    console.log(response);\n     if(response.data && response.data.status ==\"20011\") { // -1, token失效 401 没有token\n        //Vue.cookie.delete('token');\n       // Vue.router.push({name: 'login'});\n       //this.$message(\"登录过期，请重新登录！\");\n       //Vue.router.push({name: 'login'});\n      // this.$router.push({path: 'login'});\n      Message({\n        showClose: true,\n        message: response.data.msg,\n        type: 'error',\n        duration: 500,\n        onClose: () => {\n          store.dispatch('FedLogOut').then(() => {\n            location.reload()// 为了重新实例化vue-router对象 避免bug\n          })\n        }\n      });\n      return Promise.reject(\"未登录\")\n    }else if(response.data && response.data.status !='0'){\n        Message({\n            message: response.data.msg,\n            type: 'error',\n            duration: 2 * 1000\n          })\n    return Promise.reject(response.data)\n    }\n    return response;\n}, error => {\n    return Promise.reject(error);\n});\n\nexport default service;\n"]}]}