{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Charge.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Charge.vue","mtime":1559119599905},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Date$now from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/date/now\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport API from \"@/api\";\nimport Vue from \"vue\";\nexport default {\n  data: function data() {\n    return {\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //搜索条件\n      criteria: \"\",\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 10,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 1000,\n      addUserForm: {\n        PeakTimes: [{\n          value: \"\"\n        }],\n        FlatTimes: [{\n          value: \"\"\n        }],\n        RavineTimes: [{\n          value: \"\"\n        }],\n        jPeakCharge: '',\n        tPeakCharge: '',\n        hPeakCharge: '',\n        jFlatCharge: '',\n        tFlatCharge: '',\n        hFlatCharge: '',\n        hRavineCharge: '',\n        jRavineCharge: '',\n        tRavineCharge: '',\n        status: \"0\"\n      },\n      dialogFormVisible: false,\n      addFormVisible: false,\n      formLabelWidth: \"120px\"\n    };\n  },\n  created: function created() {\n    this.loadData(this.criteria, this.currentPage, this.pagesize);\n  },\n  methods: {\n    //从服务器读取数据\n    loadData: function loadData(criteria, pageNum, pageSize) {\n      var _this = this;\n\n      var params = {\n        parameter: criteria,\n        pageNum: pageNum,\n        pageSize: pageSize\n      };\n      API.chargeUtil.ChargeList(params).then(function (_ref) {\n        var data = _ref.data;\n        console.log(data);\n\n        if (data.status == 0) {\n          _this.tableData = data.data.userData;\n          _this.totalCount = data.data.number;\n        } else {\n          //this.$Message.error(data.msg);\n          _this.$message(\"请求失败！\");\n        }\n      }).catch(function (data) {\n        _this.$message(\"请求失败ww！\");\n\n        console.log(data);\n      });\n    },\n    //添加\n    addSubmitForm: function addSubmitForm(addUserForm) {\n      var _this2 = this;\n\n      var peakTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.PeakTimes.length; i++) {\n        peakTime += API.userUtil.formatTimeToStr(this.addUserForm.PeakTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.PeakTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(peakTime);\n      var flatTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.FlatTimes.length; i++) {\n        flatTime += API.userUtil.formatTimeToStr(this.addUserForm.FlatTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.FlatTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(flatTime);\n      var ravineTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.RavineTimes.length; i++) {\n        ravineTime += API.userUtil.formatTimeToStr(this.addUserForm.RavineTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.RavineTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(ravineTime);\n      var params = {\n        peakTime: peakTime,\n        flatTime: flatTime,\n        ravineTime: ravineTime,\n        jPeakCharge: this.addUserForm.jPeakCharge,\n        tPeakCharge: this.addUserForm.tPeakCharge,\n        hPeakCharge: this.addUserForm.hPeakCharge,\n        jFlatCharge: this.addUserForm.jFlatCharge,\n        tFlatCharge: this.addUserForm.tFlatCharge,\n        hFlatCharge: this.addUserForm.hFlatCharge,\n        hRavineCharge: this.addUserForm.hRavineCharge,\n        jRavineCharge: this.addUserForm.jRavineCharge,\n        tRavineCharge: this.addUserForm.tRavineCharge,\n        status: this.addUserForm.status\n      };\n      this.$refs[addUserForm].validate(function (valid) {\n        console.log(_this2.addUserForm.status);\n\n        if (valid) {\n          API.chargeUtil.addCharge(params).then(function (_ref2) {\n            var data = _ref2.data;\n\n            if (data.data == true) {\n              _this2.addFormVisible = false;\n\n              _this2.$message(\"添加成功!\");\n\n              _this2.loadData(_this2.criteria, _this2.currentPage, _this2.pagesize);\n            } else {\n              _this2.$message(\"请求失败！\");\n            }\n          }).catch(function (data) {\n            _this2.$message(\"请求失败！\");\n\n            console.log(data);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //添加峰时刻\n    addPeak: function addPeak() {\n      this.addUserForm.PeakTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removePeak: function removePeak(item) {\n      var index = this.addUserForm.PeakTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.PeakTimes.splice(index, 1);\n      }\n    },\n    //添加平时刻\n    addFlat: function addFlat() {\n      this.addUserForm.FlatTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removeFlat: function removeFlat(item) {\n      var index = this.addUserForm.FlatTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.FlatTimes.splice(index, 1);\n      }\n    },\n    //添加谷时刻\n    addRavine: function addRavine() {\n      this.addUserForm.RavineTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removeRavine: function removeRavine(item) {\n      var index = this.addUserForm.RavineTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.RavineTimes.splice(index, 1);\n      }\n    },\n    //多选响应\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //点击行响应\n    handleclick: function handleclick(row, event, column) {\n      this.highlightId = row.id;\n    },\n    //编辑\n    handleEdit: function handleEdit(index, row) {\n      var _this3 = this;\n\n      var params = {\n        id: row.id\n      };\n      this.$confirm(\"是否将本条设为默认?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        API.chargeUtil.editCharge(params).then(function (_ref3) {\n          var data = _ref3.data;\n\n          if (data.data == true) {\n            _this3.$message({\n              type: \"success\",\n              message: \"修改成功!\"\n            });\n\n            _this3.loadData(_this3.criteria, _this3.currentPage, _this3.pagesize);\n          } else {\n            _this3.$message({\n              type: \"info\",\n              message: \"修改失败\"\n            });\n          }\n        }).catch(function (data) {\n          _this3.$message(\"修改失败！\");\n        });\n\n        _this3.$message({\n          type: \"success\",\n          message: \"修改成功!\"\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: \"info\",\n          message: \"已取消修改\"\n        });\n      });\n    },\n    //修改\n    editSubmitForm: function editSubmitForm(editUserForm) {\n      var _this4 = this;\n\n      var params = {\n        geNumber: this.editUserForm.geNumber,\n        userState: this.editUserForm.userState\n      };\n      this.$refs[editUserForm].validate(function (valid) {\n        if (valid) {\n          API.userUtil.updateUser(params).then(function (_ref4) {\n            var data = _ref4.data;\n\n            if (data.data == true) {\n              _this4.dialogFormVisible = false;\n\n              _this4.loadData(_this4.criteria, _this4.currentPage, _this4.pagesize);\n            } else {\n              _this4.$message(\"请求失败！\");\n            }\n          }).catch(function (data) {\n            _this4.$message(\"请求失败！\");\n\n            console.log(data);\n          });\n        } else {\n          _this4.$message.error(\"请求失败！\");\n\n          return false;\n        }\n      });\n    },\n    //单行删除\n    handleDelete: function handleDelete(index, row) {\n      var _this5 = this;\n\n      var params = {\n        id: row.id\n      };\n      this.$confirm(\"此操作将永久删除“\" + row.id + \"”, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        API.chargeUtil.deleteCharge(params).then(function (_ref5) {\n          var data = _ref5.data;\n\n          if (data.data == true) {\n            _this5.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n\n            _this5.loadData(_this5.criteria, _this5.currentPage, _this5.pagesize);\n          } else {\n            _this5.$message({\n              type: \"info\",\n              message: \"删除失败\"\n            });\n          }\n        }).catch(function (data) {\n          _this5.$message(\"请求失败！\");\n        });\n\n        _this5.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //搜索\n    search: function search() {\n      console.log(this.select);\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    add: function add() {\n      this.addFormVisible = true;\n    },\n    exportUser: function exportUser() {\n      window.location.href = \"http://localhost:8088/api/exportUser.do\";\n    },\n\n    /*\r\n          //多项删除\r\n          deletenames: function(){\r\n          \tif(this.multipleSelection.length==0)\r\n          \t\treturn;\r\n          \tvar array = [];\r\n          \tthis.multipleSelection.forEach((item) = > {\r\n          \t\tarray.push(item.id);\r\n           })\r\n    \tthis.$http.post('../delete',{\"array\":array},{emulateJSON: true}).then(function(res){\r\n    \t\tthis.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              },function(){\r\n                  console.log('failed');\r\n              });\r\n          },\r\n        */\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function tableRowClassName(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n    //每页显示数据量变更\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagesize = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    //页码变更\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    }\n  }\n};",null]}