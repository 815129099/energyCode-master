{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\utils\\api.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\utils\\api.js","mtime":1563871982248},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui'; //import {getToken} from '@/api/utils/auth'\n\nimport store from '../../store'; // 创建axios实例\n\nvar service = axios.create({\n  //baseURL: process.env.BASE_URL, // api的base_url\n  timeout: 15000 // 请求超时时间2\n\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.error(error); // for debug\n\n  _Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n  console.log(res);\n\n  if (res.status == '1000') {\n    return res;\n  }\n\n  if (res.status == '0') {\n    return res.info;\n  } else if (res.status == \"20011\") {\n    Message({\n      showClose: true,\n      message: res.msg,\n      type: 'error',\n      duration: 500,\n      onClose: function onClose() {\n        store.dispatch('FedLogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      }\n    });\n    return _Promise.reject(\"未登录\");\n  } else {\n    Message({\n      message: res.msg,\n      type: 'error',\n      duration: 3 * 1000\n    });\n    return _Promise.reject(res);\n  }\n}, function (error) {\n  console.error('err' + error); // for debug\n\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 3 * 1000\n  });\n  return _Promise.reject(error);\n});\nexport default service;",null]}