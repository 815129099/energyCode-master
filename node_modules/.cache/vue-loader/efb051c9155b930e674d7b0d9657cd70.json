{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\energyCode-master\\src\\components\\power\\InstantPowerAnalyze.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\components\\power\\InstantPowerAnalyze.vue","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport API from \"@/api\";\nimport Vue from \"vue\";\nimport \"v-charts/lib/style.css\";\nimport 'echarts/lib/component/dataZoom';\nexport default {\n  data() {\n    this.dataZoom = [\n        {\n          type: 'slider',\n          start: 0,\n          end: 100\n        }\n      ]\n    this.markLine = {\n      data: [\n        {\n          name: \"平均线\",\n          type: \"average\"\n        }\n      ]\n    };\n    this.markPoint = {\n      data: [\n        {\n          name: \"最大值\",\n          type: \"max\"\n        },\n        {\n          name: \"最小值\",\n          type: \"min\"\n        }\n      ]\n    };\n    this.toolbox = {\n      feature: {\n        magicType: { type: [\"line\", \"bar\"] },\n        saveAsImage: {}\n      }\n    };\n    return {\n      beginTime: \"\",\n      dataType: \"I\",\n      chartData: {\n        columns: [],\n        rows: []\n      },\n      dataEmpty: true,\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 1100,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 0,\n      chartDataI: null,\n      chartDataU: null,\n      formLabelWidth: \"120px\",\n      //树状图列表\n      list: \"\",\n      //间隔时间类型\n      dateType: \"day\",\n      //图形类型\n      chartType: \"bar\",\n      //所选电表\n      key: \"\",\n      height: 20,\n      Title: \"Title\",\n      EStationName:\"\"\n    };\n  },\n  components: {},\n  created() {\n    this.loadMenu();\n  },\n  methods: {\n    //从服务器读取数据\n    selectMenu: function(key, keyPath, name) {\n      this.EStationName = keyPath[1].split(\"/\")[1];\n      console.log(keyPath.length);\n      if(keyPath.length<=2){\n        this.key = \"\";\n      }else{\n        this.key = keyPath[2].split(\"/\")[1];\n      }\n    },\n\n    //加载树状图\n    loadMenu: function() {\n      API.powerUtil\n        .getMenu()\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            this.list = data.data;\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    increaseHeight() {\n      this.height += 10;\n    },\n\n    fillData(data) {\n      this.chartDataI = {\n        columns: [\"Time\", \"Ia\", \"Ib\", \"Ic\"],\n        rows: data\n      };\n      this.chartDataU = {\n        columns: [\"Time\", \"Ua\", \"Ub\", \"Uc\"],\n        rows: data\n      };\n       if (data.length==0) {\n        this.dataEmpty = true;\n      }else{\n        this.dataEmpty = false;\n      }\n    },\n\n    getPowerData: function() {\n      if (this.key == null || this.key == \"\") {\n        this.$message(\"请选择电表！\");\n      } else if (this.beginTime == \"\") {\n        this.$message(\"请选择开始时间！\");\n      } else if (this.dataType == \"\") {\n        this.$message(\"请选择电流电压类型！\");\n      } else if (this.dateType == \"\") {\n        this.$message(\"请选择曲线类型\");\n      } else {\n        if (this.dateType == \"day\") {\n          this.Title = this.key + \"：日曲线\";\n        } else if (this.dateType == \"week\") {\n          this.Title = this.key + \"：周曲线\";\n        }\n        let params = {\n          estationName:this.EStationName,\n          emeterName: this.key,\n          beginTime: this.beginTime,\n          dateType: this.dateType,\n          pageNum: this.currentPage,\n          pageSize: this.pagesize\n        };\n        API.powerUtil\n          .getInstantPowerAnalyze(params)\n          .then(({ data }) => {\n            if (data.status == 0) {\n              this.tableData = data.data.page.list;\n              this.totalCount = data.data.page.total;\n              this.fillData(data.data.page.list);\n            } else {\n              this.$message(\"请求失败！\");\n            }\n          })\n          .catch(data => {\n            this.$message(\"请求失败ww！\");\n            console.log(data);\n          });\n      }\n    },\n\n    //多选响应\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function(row, event, column) {\n      this.highlightId = row.id;\n    },\n    exportData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      this.$message(\"待开发\");\n    },\n    callData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      //this.$message(\"待开发\");\n      API.userUtil\n        .getAllData()\n        .then(({ data }) => {\n          if (data.status == 0) {\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function(val) {\n      this.pagesize = val;\n      this.getPowerData();\n    },\n\n    //页码变更\n    handleCurrentChange: function(val) {\n      this.currentPage = val;\n      this.getPowerData();\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: `${this.height}px`,\n        position: \"relative\"\n      };\n    }\n  }\n};\n",{"version":3,"sources":["InstantPowerAnalyze.vue"],"names":[],"mappingsfile":"InstantPowerAnalyze.vue","sourceRoot":"src\\components\\power","sourcesContent":["<template>\n  <el-container style=\"height: 100%; border: 1px solid #eee\">\n    <!--左侧菜单开始-->\n    <el-aside width=\"220px\" style=\"background-color: rgb(179, 192, 209)\">\n      <el-menu\n        default-active=\"1\"\n        background-color=\"#B3C0D1\"\n        text-color=\"#333\"\n        active-text-color=\"#ffffff\"\n        @select=\"selectMenu\"\n      >\n        <!-- 一级菜单 -->\n        <template v-for=\"item in list\">\n          <el-submenu\n            v-if=\"item.children && item.children.length\"\n            :index=\"item.path\"\n            :key=\"item.path\"\n          >\n            <template slot=\"title\">\n              <i :class=\"item.icon\"></i>\n              <span>{{item.name}}</span>\n            </template>\n\n            <!-- 二级菜单 -->\n            <template v-for=\"itemChild in item.children\">\n              <el-submenu\n                v-if=\"itemChild.children && itemChild.children.length\"\n                :index=\"itemChild.path\"\n                :key=\"itemChild.path\"\n              >\n                <template slot=\"title\">\n                  <i :class=\"itemChild.icon\"></i>\n                  <span>{{itemChild.name}}</span>\n                </template>\n\n                <!-- 三级菜单 -->\n                <el-menu-item\n                  v-for=\"itemChild_Child in itemChild.children\"\n                  :index=\"itemChild_Child .path\"\n                  :key=\"itemChild_Child.path\"\n                >\n                  <i :class=\"itemChild_Child.icon\"></i>\n                  <span slot=\"title\">{{itemChild_Child.name}}</span>\n                </el-menu-item>\n              </el-submenu>\n\n              <el-menu-item v-else :index=\"itemChild.path\" :key=\"itemChild.path\">\n                <i :class=\"itemChild.icon\"></i>\n                <span slot=\"title\">{{itemChild.name}}</span>\n              </el-menu-item>\n            </template>\n          </el-submenu>\n\n          <el-menu-item v-else :index=\"item.path\" :key=\"item.path\">\n            <i :class=\"item.icon\"></i>\n            <span slot=\"title\">{{item.name}}</span>\n          </el-menu-item>\n        </template>\n      </el-menu>\n    </el-aside>\n    <!--左侧菜单结束-->\n\n    <el-container>\n      <!--表头开始-->\n      <el-header style=\"font-size: 12px\">\n        <el-row :gutter=\"0\">\n          <el-col :span=\"5\">\n            <div class=\"block\">\n              <span class=\"demonstration\"></span>\n              <el-date-picker v-model=\"beginTime\" type=\"date\" placeholder=\"开始日期时间\"></el-date-picker>\n            </div>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-select v-model=\"dataType\" placeholder=\"类型\">\n              <el-option value=\"I\" label=\"电流\"></el-option>\n              <el-option value=\"U\" label=\"电压\"></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-select v-model=\"dateType\" placeholder=\"曲线类型\">\n              <el-option value=\"day\" label=\"日曲线\"></el-option>\n              <el-option value=\"week\" label=\"周曲线\"></el-option>\n            </el-select>\n          </el-col>\n\n          <el-col :span=\"6\">\n         <el-button type=\"info\" icon=\"el-icon-search\" plain @click=\"getPowerData\">查询</el-button>\n         <el-button type=\"warning\" icon=\"el-icon-upload2\" v-if=\"hasPerm('instantPowerAnalyze:export')\" @click=\"exportData\" plain>导出</el-button> \n        <el-button type=\"danger\" icon=\"el-icon-yunduanxiazai\" style=\"float:right;margin-top:13px;\"  v-if=\"hasPerm('instantPowerAnalyze:exportAll')\" @click=\"callData\" plain>召唤</el-button>\n          </el-col>\n        </el-row>\n      </el-header>\n      <!--表头结束-->\n\n      <!--表格开始-->\n      <el-main>\n        <el-card>\n          <!--图表-->\n          <div class=\"Chart\">\n            <h1 style=\"text-align:center;\">{{Title}}</h1>\n            <div v-if=\"dataType==='I'\">\n              <ve-line\n                :data=\"chartDataI\"\n                :data-empty=\"dataEmpty\"\n                :toolbox=\"toolbox\"\n                :mark-line=\"markLine\"\n                :mark-point=\"markPoint\"\n                :data-zoom=\"dataZoom\"\n              ></ve-line>\n            </div>\n            <div v-else>\n              <ve-line\n                :data=\"chartDataU\"\n                :data-empty=\"dataEmpty\"\n                :toolbox=\"toolbox\"\n                :mark-line=\"markLine\"\n                :mark-point=\"markPoint\"\n                :data-zoom=\"dataZoom\"\n              ></ve-line>\n            </div>\n          </div>\n        </el-card>\n\n        <div style=\"margin-top:5px\">\n          <el-table\n            ref=\"testTable\"\n            :data=\"tableData\"\n            style=\"width:100%\"\n            border\n            :default-sort=\"{prop: 'id', order: 'ascending'}\"\n            @selection-change=\"handleSelectionChange\"\n            @row-click=\"handleclick\"\n            :row-class-name=\"tableRowClassName\"\n          >\n            <el-table-column prop=\"Time\" label=\"时间\" sortable align=\"center\" show-overflow-tooltip></el-table-column>\n            <el-table-column prop=\"Ia\" label=\"Ia\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"Ib\" label=\"Ib\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"Ic\" label=\"Ic\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"Ua\" label=\"Ua\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"Ub\" label=\"Ub\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"Uc\" label=\"Uc\" align=\"center\" sortable></el-table-column>\n          </el-table>\n\n          <div align=\"center\">\n            <el-pagination\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"currentPage\"\n              :page-sizes=\"[145,290,435,580,725,870,1015]\"\n              :page-size=\"pagesize\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"totalCount\"\n            ></el-pagination>\n          </div>\n        </div>\n      </el-main>\n      <!--表头结束-->\n    </el-container>\n  </el-container>\n</template>\n<style>\n.el-header {\n  background-color: rgb(179, 192, 209);\n  color: #333;\n  line-height: 60px;\n}\n\n.el-aside {\n  color: #333;\n  background-color: #b3c0d1;\n}\n</style>\n\n<script>\nimport API from \"@/api\";\nimport Vue from \"vue\";\nimport \"v-charts/lib/style.css\";\nimport 'echarts/lib/component/dataZoom';\nexport default {\n  data() {\n    this.dataZoom = [\n        {\n          type: 'slider',\n          start: 0,\n          end: 100\n        }\n      ]\n    this.markLine = {\n      data: [\n        {\n          name: \"平均线\",\n          type: \"average\"\n        }\n      ]\n    };\n    this.markPoint = {\n      data: [\n        {\n          name: \"最大值\",\n          type: \"max\"\n        },\n        {\n          name: \"最小值\",\n          type: \"min\"\n        }\n      ]\n    };\n    this.toolbox = {\n      feature: {\n        magicType: { type: [\"line\", \"bar\"] },\n        saveAsImage: {}\n      }\n    };\n    return {\n      beginTime: \"\",\n      dataType: \"I\",\n      chartData: {\n        columns: [],\n        rows: []\n      },\n      dataEmpty: true,\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 1100,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 0,\n      chartDataI: null,\n      chartDataU: null,\n      formLabelWidth: \"120px\",\n      //树状图列表\n      list: \"\",\n      //间隔时间类型\n      dateType: \"day\",\n      //图形类型\n      chartType: \"bar\",\n      //所选电表\n      key: \"\",\n      height: 20,\n      Title: \"Title\",\n      EStationName:\"\"\n    };\n  },\n  components: {},\n  created() {\n    this.loadMenu();\n  },\n  methods: {\n    //从服务器读取数据\n    selectMenu: function(key, keyPath, name) {\n      this.EStationName = keyPath[1].split(\"/\")[1];\n      console.log(keyPath.length);\n      if(keyPath.length<=2){\n        this.key = \"\";\n      }else{\n        this.key = keyPath[2].split(\"/\")[1];\n      }\n    },\n\n    //加载树状图\n    loadMenu: function() {\n      API.powerUtil\n        .getMenu()\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            this.list = data.data;\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    increaseHeight() {\n      this.height += 10;\n    },\n\n    fillData(data) {\n      this.chartDataI = {\n        columns: [\"Time\", \"Ia\", \"Ib\", \"Ic\"],\n        rows: data\n      };\n      this.chartDataU = {\n        columns: [\"Time\", \"Ua\", \"Ub\", \"Uc\"],\n        rows: data\n      };\n       if (data.length==0) {\n        this.dataEmpty = true;\n      }else{\n        this.dataEmpty = false;\n      }\n    },\n\n    getPowerData: function() {\n      if (this.key == null || this.key == \"\") {\n        this.$message(\"请选择电表！\");\n      } else if (this.beginTime == \"\") {\n        this.$message(\"请选择开始时间！\");\n      } else if (this.dataType == \"\") {\n        this.$message(\"请选择电流电压类型！\");\n      } else if (this.dateType == \"\") {\n        this.$message(\"请选择曲线类型\");\n      } else {\n        if (this.dateType == \"day\") {\n          this.Title = this.key + \"：日曲线\";\n        } else if (this.dateType == \"week\") {\n          this.Title = this.key + \"：周曲线\";\n        }\n        let params = {\n          estationName:this.EStationName,\n          emeterName: this.key,\n          beginTime: this.beginTime,\n          dateType: this.dateType,\n          pageNum: this.currentPage,\n          pageSize: this.pagesize\n        };\n        API.powerUtil\n          .getInstantPowerAnalyze(params)\n          .then(({ data }) => {\n            if (data.status == 0) {\n              this.tableData = data.data.page.list;\n              this.totalCount = data.data.page.total;\n              this.fillData(data.data.page.list);\n            } else {\n              this.$message(\"请求失败！\");\n            }\n          })\n          .catch(data => {\n            this.$message(\"请求失败ww！\");\n            console.log(data);\n          });\n      }\n    },\n\n    //多选响应\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function(row, event, column) {\n      this.highlightId = row.id;\n    },\n    exportData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      this.$message(\"待开发\");\n    },\n    callData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      //this.$message(\"待开发\");\n      API.userUtil\n        .getAllData()\n        .then(({ data }) => {\n          if (data.status == 0) {\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function(val) {\n      this.pagesize = val;\n      this.getPowerData();\n    },\n\n    //页码变更\n    handleCurrentChange: function(val) {\n      this.currentPage = val;\n      this.getPowerData();\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: `${this.height}px`,\n        position: \"relative\"\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.el-select .el-input {\n  width: 110px;\n}\n\n.el-table .info-row {\n  background: #c9e5f5;\n}\n\n#top {\n  background: #20a0ff;\n  padding: 5px;\n  overflow: hidden;\n}\n</style>\n"]}]}