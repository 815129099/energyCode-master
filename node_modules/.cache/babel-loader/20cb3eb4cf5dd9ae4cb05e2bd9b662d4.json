{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\common\\chart\\LineExample.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\common\\chart\\LineExample.js","mtime":1557475244065},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { Line } from './BaseCharts';\nimport { reactiveProp } from './mixins';\nexport default {\n  extends: Line,\n  mixins: [reactiveProp],\n  data: function data() {\n    return {\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        hover: {\n          animationDuration: 0 // 防止鼠标移上去，数字闪烁\n\n        },\n        animation: {\n          duration: 1,\n          onComplete: function onComplete() {\n            var chartInstance = this.chart,\n                ctx = chartInstance.ctx;\n            ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'bottom';\n            ctx.fillStyle = 'gray';\n            this.data.datasets.forEach(function (dataset, i) {\n              var meta = chartInstance.controller.getDatasetMeta(i);\n              meta.data.forEach(function (arc, index) {\n                var data = dataset.data[index];\n                var ct = Math.round(arc._model.width * 0.35);\n\n                if (ct < 12) {\n                  ct = 12;\n                }\n\n                ctx.font = ct + 'px Arial';\n                ctx.fillText(data, arc._model.x, data >= 0 ? arc._model.y : arc._model.y + 15);\n              });\n            });\n          }\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n};",null]}