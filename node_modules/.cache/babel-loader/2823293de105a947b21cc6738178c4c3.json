{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\energyCode-master\\src\\components\\common\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\components\\common\\Home.vue","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606188053867},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606188053867},{"path":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport vHead from './Header.vue';\nimport vSidebar from './Sidebar.vue';\nimport vTags from './Tags.vue';\nimport bus from './bus';\nexport default {\n  data: function data() {\n    return {\n      tagsList: [],\n      collapse: false\n    };\n  },\n  components: {\n    vHead: vHead,\n    vSidebar: vSidebar,\n    vTags: vTags\n  },\n  created: function created() {\n    var _this = this;\n\n    bus.$on('collapse', function (msg) {\n      _this.collapse = msg;\n    }); // 只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了。\n\n    bus.$on('tags', function (msg) {\n      var arr = [];\n\n      for (var i = 0, len = msg.length; i < len; i++) {\n        msg[i].name && arr.push(msg[i].name);\n      }\n\n      _this.tagsList = arr;\n    });\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,cAAA;AACA,OAAA,QAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AACA,IAAA,QAAA,EAAA,QADA;AACA,IAAA,KAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,UAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA,KAFA,EADA,CAKA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA;;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA,KANA;AAOA;AAvBA,CAAA","sourcesContent":["<template>\n    <div class=\"wrapper\">\n        <v-head></v-head>\n        <v-sidebar></v-sidebar>\n        <div class=\"content-box\" :class=\"{'content-collapse':collapse}\">\n            <v-tags></v-tags>\n            <div class=\"content\">\n                <transition name=\"move\" mode=\"out-in\">\n                    <keep-alive :include=\"tagsList\">\n                        <router-view></router-view>\n                    </keep-alive>\n                </transition>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import vHead from './Header.vue';\n    import vSidebar from './Sidebar.vue';\n    import vTags from './Tags.vue';\n    import bus from './bus';\n    export default {\n        data(){\n            return {\n                tagsList: [],\n                collapse: false\n            }\n        },\n        components:{\n            vHead, vSidebar, vTags\n        },\n        created(){\n            bus.$on('collapse', msg => {\n                this.collapse = msg;\n            })\n\n            // 只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了。\n            bus.$on('tags', msg => {\n                let arr = [];\n                for(let i = 0, len = msg.length; i < len; i ++){\n                    msg[i].name && arr.push(msg[i].name);\n                }\n                this.tagsList = arr;\n            })\n        }\n    }\n</script>\n"],"sourceRoot":"src\\components\\common"}]}