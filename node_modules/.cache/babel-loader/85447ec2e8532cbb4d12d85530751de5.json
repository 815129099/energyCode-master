{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\energyCode-master\\src\\main.js","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\main.js","mtime":1606186532548},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606188053867},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\code\\\\energyCode-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'; // 默认主题\n// import '../static/css/theme-green/index.css';       // 浅绿色主题\n//import './assets/css/icon.css';\n\nimport './assets/icon/iconfont.css';\nimport './components/common/directives';\nimport \"babel-polyfill\";\nimport VueCookie from 'vue-cookie';\nimport store from './store';\nimport VCharts from 'v-charts';\nimport { hasPermission } from \"@/api/utils/hasPermission\";\nimport { default as api } from './api/utils/api';\nimport dataV from '@jiaminghi/data-view';\nVue.use(dataV); // 按需引入vue-awesome图标\n\nimport Icon from 'vue-awesome/components/Icon';\nimport 'vue-awesome/icons/chart-bar.js';\nimport 'vue-awesome/icons/chart-area.js';\nimport 'vue-awesome/icons/chart-pie.js';\nimport 'vue-awesome/icons/chart-line.js';\nimport 'vue-awesome/icons/align-left.js'; // 全局注册图标\n\nVue.component('icon', Icon);\nvar whiteList = ['/login', '/404']; //白名单,不需要登录的路由\n\n/*\nimport VeeValidate from 'vee-validate';\nimport zh_CN from 'vee-validate/dist/locale/zh_CN';\nimport VueI18n from 'vue-i18n';\nVue.use(VueI18n)\nconst i18n = new VueI18n({\n       locale: 'zh_CN',\n});\nconst config = {\n    errorBagName: 'errorBags', // change if property conflicts.\n    fieldsBagName: 'fieldBags',\n    delay: 0,    //多少ms之后进行校验\n    locale: 'zh_CN',\n    messages: null,   //代表自定义校验信息\n    strict: true,    //代表没有设置规则的表单不进行校验\n    i18n,\n       i18nRootKey: 'validation',\n       dictionary: {\n          zh_CN\n       }\n};\nVue.use(VeeValidate, config);*/\n// 适配flex\n\nimport '@/common/flexible.js'; // 引入全局css\n\nimport './assets/scss/style.scss'; //引入echart\n\nimport echarts from 'echarts';\nVue.prototype.$echarts = echarts;\nVue.config.productionTip = false;\nVue.use(VueCookie);\nVue.use(VCharts);\nVue.config.productionTip = false;\nVue.use(ElementUI, {\n  size: 'small'\n});\nVue.prototype.$axios = axios; //全局的常量\n\nVue.prototype.hasPerm = hasPermission;\nVue.prototype.api = api;\nVue.prototype.localStorage = Window.localStorage; //使用钩子函数对路由进行权限跳转\n\n/*\nrouter.beforeEach((to, from, next) => {\n    //const role = localStorage.getItem('ms_username');\n    const role = Vue.cookie.get('role');\n\n    if(role){\n        console.log(router);\n        store.dispatch('GenerateRoutes',role).then(() => { // 生成可访问的路由表\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\n             //next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n          \n          if(to.meta.role){\n              next();\n          }else if(!to.meta.role && to.path !== '/403'){\n              next('/403');\n          }else{\n              next();\n          }\n    }else if(!role && to.path !== '/login'){\n        console.log(\"跳转到login\");\n            next('/login');\n    }\n   \n    if (!role && to.path !== '/login') {\n        console.log(\"跳转到login\");\n        next('/login');\n    } else if (to.meta.role){\n        console.log(\"this is a role\");\n        // 如果是管理员权限则可进入，这里只是简单的模拟管理员权限而已\n        role === 'admin' ? next() : next('/403');\n    }else {\n        console.log(\"直接跳过\");\n        // 简单的判断IE10及以下不进入富文本编辑器，该组件不兼容\n        if (navigator.userAgent.indexOf('MSIE') > -1 && to.path === '/editor') {\n            Vue.prototype.$alert('vue-quill-editor组件不兼容IE10及以下浏览器，请使用更高版本的浏览器查看', '浏览器不兼容通知', {\n                confirmButtonText: '确定'\n            });\n        } else {\n            next();\n        }\n    }\n})\n*/\n\nrouter.beforeEach(function (to, from, next) {\n  if (localStorage.getItem(\"username\")) {\n    //如果已经登录\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n    } else if (!store.getters.role) {\n      store.dispatch('GetInfo').then(function () {\n        next(_objectSpread({}, to));\n      });\n    } else {\n      next();\n    }\n  } else if (whiteList.indexOf(to.path) !== -1) {\n    //如果前往的路径是白名单内的,就可以直接前往\n    next();\n  } else {\n    //如果路径不是白名单内的,而且又没有登录,就跳转登录页面\n    //this.$store.commit('xxx') 提交 mutation\n    store.commit('RESET_USER');\n    next('/login');\n  }\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["D:\\code\\energyCode-master\\src\\main.js"],"names":["Vue","App","router","axios","ElementUI","VueCookie","store","VCharts","hasPermission","default","api","dataV","use","Icon","component","whiteList","echarts","prototype","$echarts","config","productionTip","size","$axios","hasPerm","localStorage","Window","beforeEach","to","from","next","getItem","path","getters","role","dispatch","then","indexOf","commit","render","h","$mount"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'; // 默认主题\n// import '../static/css/theme-green/index.css';       // 浅绿色主题\n//import './assets/css/icon.css';\nimport './assets/icon/iconfont.css';\nimport './components/common/directives';\nimport \"babel-polyfill\";\nimport VueCookie from 'vue-cookie';\nimport store from './store';\nimport VCharts from 'v-charts';\nimport {hasPermission} from \"@/api/utils/hasPermission\";\nimport {default as api} from './api/utils/api'\n\nimport dataV from '@jiaminghi/data-view';\nVue.use(dataV);\n\n// 按需引入vue-awesome图标\nimport Icon from 'vue-awesome/components/Icon';\nimport 'vue-awesome/icons/chart-bar.js';\nimport 'vue-awesome/icons/chart-area.js';\nimport 'vue-awesome/icons/chart-pie.js';\nimport 'vue-awesome/icons/chart-line.js';\nimport 'vue-awesome/icons/align-left.js';\n// 全局注册图标\nVue.component('icon', Icon);\nconst whiteList = ['/login', '/404'] //白名单,不需要登录的路由\n/*\nimport VeeValidate from 'vee-validate';\nimport zh_CN from 'vee-validate/dist/locale/zh_CN';\nimport VueI18n from 'vue-i18n';\nVue.use(VueI18n)\nconst i18n = new VueI18n({\n       locale: 'zh_CN',\n});\nconst config = {\n    errorBagName: 'errorBags', // change if property conflicts.\n    fieldsBagName: 'fieldBags',\n    delay: 0,    //多少ms之后进行校验\n    locale: 'zh_CN',\n    messages: null,   //代表自定义校验信息\n    strict: true,    //代表没有设置规则的表单不进行校验\n    i18n,\n       i18nRootKey: 'validation',\n       dictionary: {\n          zh_CN\n       }\n};\nVue.use(VeeValidate, config);*/\n// 适配flex\nimport '@/common/flexible.js';\n\n// 引入全局css\nimport './assets/scss/style.scss';\n//引入echart\nimport echarts from 'echarts'\nVue.prototype.$echarts = echarts\nVue.config.productionTip = false;\n\nVue.use(VueCookie);\nVue.use(VCharts);\nVue.config.productionTip = false\nVue.use(ElementUI, {\n    size: 'small'\n});\nVue.prototype.$axios = axios;\n//全局的常量\nVue.prototype.hasPerm = hasPermission\nVue.prototype.api = api\nVue.prototype.localStorage = Window.localStorage; \n//使用钩子函数对路由进行权限跳转\n/*\nrouter.beforeEach((to, from, next) => {\n    //const role = localStorage.getItem('ms_username');\n    const role = Vue.cookie.get('role');\n\n    if(role){\n        console.log(router);\n        store.dispatch('GenerateRoutes',role).then(() => { // 生成可访问的路由表\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\n             //next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n          \n          if(to.meta.role){\n              next();\n          }else if(!to.meta.role && to.path !== '/403'){\n              next('/403');\n          }else{\n              next();\n          }\n    }else if(!role && to.path !== '/login'){\n        console.log(\"跳转到login\");\n            next('/login');\n    }\n   \n    if (!role && to.path !== '/login') {\n        console.log(\"跳转到login\");\n        next('/login');\n    } else if (to.meta.role){\n        console.log(\"this is a role\");\n        // 如果是管理员权限则可进入，这里只是简单的模拟管理员权限而已\n        role === 'admin' ? next() : next('/403');\n    }else {\n        console.log(\"直接跳过\");\n        // 简单的判断IE10及以下不进入富文本编辑器，该组件不兼容\n        if (navigator.userAgent.indexOf('MSIE') > -1 && to.path === '/editor') {\n            Vue.prototype.$alert('vue-quill-editor组件不兼容IE10及以下浏览器，请使用更高版本的浏览器查看', '浏览器不兼容通知', {\n                confirmButtonText: '确定'\n            });\n        } else {\n            next();\n        }\n    }\n})\n*/\n\nrouter.beforeEach((to, from, next) => {\n    if (localStorage.getItem(\"username\")) {\n      //如果已经登录\n      if (to.path === '/login') {\n        next({path: '/'})\n      } else if (!store.getters.role) {\n          store.dispatch('GetInfo').then(() => {\n          next({...to})\n        })\n      } else {\n        next()\n      }\n    } else if (whiteList.indexOf(to.path) !== -1) {\n      //如果前往的路径是白名单内的,就可以直接前往\n      next()\n    } \n    else {\n      //如果路径不是白名单内的,而且又没有登录,就跳转登录页面\n      //this.$store.commit('xxx') 提交 mutation\n      store.commit('RESET_USER')\n      next('/login')\n    }\n\n\n  })\n\n\n  \n\nnew Vue({\n    router,\n    store,\n    render: h => h(App)\n}).$mount('#app')"]}]}