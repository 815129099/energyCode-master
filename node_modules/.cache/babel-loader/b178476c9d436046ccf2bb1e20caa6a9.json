{"remainingRequest":"D:\\code\\big-screen-vue-datav\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\big-screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\big-screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\big-screen-vue-datav\\src\\components\\echart\\bottom\\bottomRightChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\big-screen-vue-datav\\src\\components\\echart\\bottom\\bottomRightChart\\index.vue","mtime":1605425856000},{"path":"D:\\code\\big-screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\big-screen-vue-datav\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\code\\big-screen-vue-datav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\big-screen-vue-datav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDaGFydCBmcm9tICcuL2NoYXJ0LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZHJhd1RpbWluZzogbnVsbCwKICAgICAgY2RhdGE6IHsKICAgICAgICB5ZWFyOiBudWxsLAogICAgICAgIHdlZWtDYXRlZ29yeTogW10sCiAgICAgICAgcmFkYXJEYXRhOiBbXSwKICAgICAgICByYWRhckRhdGFBdmc6IFtdLAogICAgICAgIG1heERhdGE6IDEyMDAwLAogICAgICAgIHdlZWtNYXhEYXRhOiBbXSwKICAgICAgICB3ZWVrTGluZURhdGE6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDaGFydDogQ2hhcnQKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmRyYXdUaW1pbmdGbigpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5kcmF3VGltaW5nKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXdUaW1pbmdGbjogZnVuY3Rpb24gZHJhd1RpbWluZ0ZuKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5zZXREYXRhKCk7CiAgICAgIHRoaXMuZHJhd1RpbWluZyA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zZXREYXRhKCk7CiAgICAgIH0sIDYwMDApOwogICAgfSwKICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoKSB7CiAgICAgIC8vIOa4heepuui9ruivouaVsOaNrgogICAgICB0aGlzLmNkYXRhLndlZWtDYXRlZ29yeSA9IFtdOwogICAgICB0aGlzLmNkYXRhLndlZWtNYXhEYXRhID0gW107CiAgICAgIHRoaXMuY2RhdGEud2Vla0xpbmVEYXRhID0gW107CiAgICAgIHRoaXMuY2RhdGEucmFkYXJEYXRhID0gW107CiAgICAgIHRoaXMuY2RhdGEucmFkYXJEYXRhQXZnID0gW107CiAgICAgIHZhciBkYXRlQmFzZSA9IG5ldyBEYXRlKCk7CiAgICAgIHRoaXMuY2RhdGEueWVhciA9IGRhdGVCYXNlLmdldEZ1bGxZZWFyKCk7IC8vIOWRqOaVsOaNrgoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA3OyBpKyspIHsKICAgICAgICAvLyDml6XmnJ8KICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgICAgdGhpcy5jZGF0YS53ZWVrQ2F0ZWdvcnkudW5zaGlmdChbZGF0ZS5nZXRNb250aCgpICsgMSwgZGF0ZS5nZXREYXRlKCkgLSBpXS5qb2luKCIvIikpOyAvLyDmipjnur/lm77mlbDmja4KCiAgICAgICAgdGhpcy5jZGF0YS53ZWVrTWF4RGF0YS5wdXNoKHRoaXMuY2RhdGEubWF4RGF0YSk7CiAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTEwMDAgKyA1MDApOwogICAgICAgIHRoaXMuY2RhdGEud2Vla0xpbmVEYXRhLnB1c2goZGlzdGFuY2UpOyAvLyDpm7fovr7lm77mlbDmja4KICAgICAgICAvLyDmiJHnmoTmjIfmoIcKCiAgICAgICAgdmFyIGF2ZXJhZ2VTcGVlZCA9ICsoTWF0aC5yYW5kb20oKSAqIDUgKyAzKS50b0ZpeGVkKDMpOwogICAgICAgIHZhciBtYXhTcGVlZCA9IGF2ZXJhZ2VTcGVlZCArICsoTWF0aC5yYW5kb20oKSAqIDMpLnRvRml4ZWQoMik7CiAgICAgICAgdmFyIGhvdXIgPSArKGRpc3RhbmNlIC8gMTAwMCAvIGF2ZXJhZ2VTcGVlZCkudG9GaXhlZCgxKTsKICAgICAgICB2YXIgcmFkYXJEYXlEYXRhID0gW2Rpc3RhbmNlLCBhdmVyYWdlU3BlZWQsIG1heFNwZWVkLCBob3VyXTsKICAgICAgICB0aGlzLmNkYXRhLnJhZGFyRGF0YS51bnNoaWZ0KHJhZGFyRGF5RGF0YSk7IC8vIOW5s+Wdh+aMh+aghwoKICAgICAgICB2YXIgZGlzdGFuY2VBdmcgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiA4MDAwICsgNDAwMCk7CiAgICAgICAgdmFyIGF2ZXJhZ2VTcGVlZEF2ZyA9ICsoTWF0aC5yYW5kb20oKSAqIDQgKyA0KS50b0ZpeGVkKDMpOwogICAgICAgIHZhciBtYXhTcGVlZEF2ZyA9IGF2ZXJhZ2VTcGVlZEF2ZyArICsoTWF0aC5yYW5kb20oKSAqIDIpLnRvRml4ZWQoMik7CiAgICAgICAgdmFyIGhvdXJBdmcgPSArKGRpc3RhbmNlIC8gMTAwMCAvIGF2ZXJhZ2VTcGVlZCkudG9GaXhlZCgxKTsKICAgICAgICB2YXIgcmFkYXJEYXlEYXRhQXZnID0gW2Rpc3RhbmNlQXZnLCBhdmVyYWdlU3BlZWRBdmcsIG1heFNwZWVkQXZnLCBob3VyQXZnXTsKICAgICAgICB0aGlzLmNkYXRhLnJhZGFyRGF0YUF2Zy51bnNoaWZ0KHJhZGFyRGF5RGF0YUF2Zyk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Chart :cdata=\"cdata\" />\n  </div>\n</template>\n\n<script>\nimport Chart from './chart.vue'\nexport default {\n  data () {\n    return {\n      drawTiming: null,\n      cdata: {\n        year: null,\n        weekCategory: [],\n        radarData: [],\n        radarDataAvg: [],\n        maxData: 12000,\n        weekMaxData: [],\n        weekLineData: []\n      }\n    }\n  },\n  components: {\n    Chart,\n  },\n  mounted () {\n    this.drawTimingFn();\n  },\n  beforeDestroy () {\n    clearInterval(this.drawTiming);\n  },\n  methods: {\n    drawTimingFn () {\n      this.setData();\n      this.drawTiming = setInterval(() => {\n        this.setData();\n      }, 6000);\n    },\n    setData () {\n      // 清空轮询数据\n      this.cdata.weekCategory = [];\n      this.cdata.weekMaxData = [];\n      this.cdata.weekLineData = [];\n      this.cdata.radarData = [];\n      this.cdata.radarDataAvg = [];\n\n      let dateBase = new Date();\n      this.cdata.year = dateBase.getFullYear();\n      // 周数据\n      for (let i = 0; i < 7; i++) {\n        // 日期\n        let date = new Date();\n        this.cdata.weekCategory.unshift([date.getMonth() + 1, date.getDate()-i].join(\"/\"));\n\n        // 折线图数据\n        this.cdata.weekMaxData.push(this.cdata.maxData);\n        let distance = Math.round(Math.random() * 11000 + 500);\n        this.cdata.weekLineData.push(distance);\n\n        // 雷达图数据\n        // 我的指标\n        let averageSpeed = +(Math.random() * 5 + 3).toFixed(3);\n        let maxSpeed = averageSpeed + +(Math.random() * 3).toFixed(2);\n        let hour = +(distance / 1000 / averageSpeed).toFixed(1);\n        let radarDayData = [distance, averageSpeed, maxSpeed, hour];\n        this.cdata.radarData.unshift(radarDayData);\n\n        // 平均指标\n        let distanceAvg = Math.round(Math.random() * 8000 + 4000);\n        let averageSpeedAvg = +(Math.random() * 4 + 4).toFixed(3);\n        let maxSpeedAvg = averageSpeedAvg + +(Math.random() * 2).toFixed(2);\n        let hourAvg = +(distance / 1000 / averageSpeed).toFixed(1);\n        let radarDayDataAvg = [\n          distanceAvg,\n          averageSpeedAvg,\n          maxSpeedAvg,\n          hourAvg\n        ];\n        this.cdata.radarDataAvg.unshift(radarDayDataAvg);\n      }\n\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"],"sourceRoot":"src/components/echart/bottom/bottomRightChart"}]}