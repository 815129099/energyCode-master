{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\power\\PowerAnalyze.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\power\\PowerAnalyze.vue","mtime":1564026358029},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport API from \"@/api\";\r\nimport Vue from \"vue\";\r\nimport \"v-charts/lib/style.css\";\r\nimport \"echarts/lib/component/markLine\";\r\nimport \"echarts/lib/component/markPoint\";\r\nimport 'echarts/lib/component/dataZoom';\r\nexport default {\r\n  data() {\r\n    this.dataZoom = [\r\n        {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100\r\n        }\r\n      ]\r\n    this.markLine = {\r\n      data: [\r\n        {\r\n          name: \"平均线\",\r\n          type: \"average\"\r\n        }\r\n      ]\r\n    };\r\n    this.markPoint = {\r\n      data: [\r\n        {\r\n          name: \"最大值\",\r\n          type: \"max\"\r\n        },\r\n        {\r\n          name: \"最小值\",\r\n          type: \"min\"\r\n        }\r\n      ]\r\n    };\r\n    this.toolbox = {\r\n      feature: {\r\n        magicType: { type: [\"line\", \"bar\"] },\r\n        saveAsImage: {}\r\n      }\r\n    };\r\n      this.chartSettings = {\r\n        labelMap: {\r\n          totalNumber: \"总电量(KWh)\"\r\n        }\r\n      };\r\n    return {\r\n      beginTime: \"\",\r\n      endTime: \"\",\r\n      powerType: \"ZxygZ\",\r\n      chartData: null,\r\n      dataEmpty: true,\r\n      dataSource: \"\",\r\n      //表格当前页数据\r\n      tableData: [],\r\n      //多选数组\r\n      multipleSelection: [],\r\n      //搜索条件\r\n      criteria: \"\",\r\n      //下拉菜单选项\r\n      select: \"\",\r\n      //默认每页数据量\r\n      pagesize: 40,\r\n      //默认高亮行数据id\r\n      highlightId: -1,\r\n      //当前页码\r\n      currentPage: 1,\r\n      //查询的页码\r\n      start: 1,\r\n      //默认数据总数\r\n      totalCount: 0,\r\n      formLabelWidth: \"120px\",\r\n      //树状图列表\r\n      list: \"\",\r\n      //电量数据\r\n      data: [],\r\n      //间隔时间类型\r\n      dateType: \"hour\",\r\n      //图形类型\r\n      chartType: \"bar\",\r\n      //所选电表\r\n      key: \"\",\r\n      height: 20,\r\n      Title: \"Title\",\r\n      EStationName:\"\"\r\n    };\r\n  },\r\n  components: {},\r\n  created() {\r\n    this.loadMenu();\r\n  },\r\n  methods: {\r\n    //从服务器读取数据\r\n\r\n    selectMenu: function(key, keyPath, name) {\r\n      this.EStationName = keyPath[1].split(\"/\")[1];\r\n      console.log(keyPath.length);\r\n      if(keyPath.length<=2){\r\n        this.key = \"\";\r\n      }else{\r\n        this.key = keyPath[2].split(\"/\")[1];\r\n      }\r\n    },\r\n\r\n    //加载树状图\r\n    loadMenu: function() {\r\n      API.powerUtil\r\n        .getMenu()\r\n        .then(({ data }) => {\r\n          console.log(data.data);\r\n          if (data.status == 0) {\r\n            this.list = data.data;\r\n          } else {\r\n            //this.$Message.error(data.msg);\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n    },\r\n\r\n    increaseHeight() {\r\n      this.height += 10;\r\n    },\r\n\r\n    //填充图表数据\r\n    fillData(data) {\r\n      this.chartData = {\r\n        columns: [\"Time\", \"totalNumber\"],\r\n        rows: data\r\n      };\r\n      if (data.length==0) {\r\n        this.dataEmpty = true;\r\n      }else{\r\n        this.dataEmpty = false;\r\n      }\r\n    },\r\n\r\n    getPowerData: function() {\r\n      if (this.key == null || this.key == \"\") {\r\n        this.$message(\"请选择电表！\");\r\n      } else if (this.beginTime == \"\") {\r\n        this.$message(\"请选择开始时间！\");\r\n      } else if (this.powerType == \"\") {\r\n        this.$message(\"请选择功率类型！\");\r\n      } else if (this.dateType == \"\") {\r\n        this.$message(\"请选择时间间隔\");\r\n      } else if (this.chartType == \"\") {\r\n        this.$message(\"请选择图形！\");\r\n      } else {\r\n        if (this.dateType == \"hour\") {\r\n          this.Title =\r\n            this.key + \"：24小时电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        } else if (this.dateType == \"day\") {\r\n          this.Title =\r\n            this.key + \"：30天电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        } else if (this.dateType == \"year\") {\r\n          this.Title =\r\n            this.key + \"：12月电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        }\r\n        let params = {\r\n          estationName:this.EStationName,\r\n          emeterName: this.key,\r\n          beginTime: this.beginTime,\r\n          dateType: this.dateType,\r\n          powerType: this.powerType,\r\n          pageNum: this.currentPage,\r\n          pageSize: this.pagesize\r\n        };\r\n        API.powerUtil\r\n          .getPowerAnalyze(params)\r\n          .then(({ data }) => {\r\n            if (data.status == 0) {\r\n              this.tableData = data.data.page.list;\r\n              this.totalCount = data.data.page.total;\r\n              this.fillData(data.data.page.list);\r\n            } else {\r\n              this.$message(\"请求失败！\");\r\n            }\r\n          })\r\n          .catch(data => {\r\n            this.$message(\"请求失败ww！\");\r\n            console.log(data);\r\n          });\r\n      }\r\n    },\r\n    //多选响应\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n\r\n    //点击行响应\r\n    handleclick: function(row, event, column) {\r\n      this.highlightId = row.id;\r\n    },\r\n    exportData() {\r\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\r\n      this.$message(\"待开发\");\r\n    },\r\n\r\n    //改变当前点击的行的class，高亮当前行\r\n    tableRowClassName: function(row, index) {\r\n      if (row.id == this.highlightId) {\r\n        return \"info-row\";\r\n      }\r\n    },\r\n\r\n    //每页显示数据量变更\r\n    handleSizeChange: function(val) {\r\n      this.pagesize = val;\r\n      this.getPowerData();\r\n    },\r\n\r\n    //页码变更\r\n    handleCurrentChange: function(val) {\r\n      this.currentPage = val;\r\n      this.getPowerData();\r\n    },\r\n    //时间格式化函数，此处仅针对yyyy-MM-dd hh:mm:ss 的格式进行格式化\r\n    dateFormat: function(time) {\r\n      var date = new Date(time);\r\n      var year = date.getFullYear();\r\n      /* 在日期格式中，月份是从0开始的，因此要加0\r\n       * 使用三元表达式在小于10的前面加0，以达到格式统一  如 09:11:05\r\n       * */\r\n      var month =\r\n        date.getMonth() + 1 < 10\r\n          ? \"0\" + (date.getMonth() + 1)\r\n          : date.getMonth() + 1;\r\n      var day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n      var hours =\r\n        date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\r\n      var minutes =\r\n        date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\r\n      var seconds =\r\n        date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\r\n      // 拼接\r\n      return year + \"-\" + month + \"-\" + day;\r\n    }\r\n  },\r\n  computed: {\r\n    myStyles() {\r\n      return {\r\n        height: `${this.height}px`,\r\n        position: \"relative\"\r\n      };\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["PowerAnalyze.vue"],"names":[],"mappingsfile":"PowerAnalyze.vue","sourceRoot":"src\\components\\power","sourcesContent":["<template>\r\n  <el-container style=\"height: 100%; border: 1px solid #eee\">\r\n    <!--左侧菜单开始-->\r\n    <el-aside width=\"220px\" style=\"background-color: rgb(179, 192, 209)\">\r\n      <el-menu\r\n        default-active=\"1\"\r\n        background-color=\"#B3C0D1\"\r\n        text-color=\"#333\"\r\n        active-text-color=\"#ffffff\"\r\n        @select=\"selectMenu\"\r\n      >\r\n        <!-- 一级菜单 -->\r\n        <template v-for=\"item in list\">\r\n          <el-submenu\r\n            v-if=\"item.children && item.children.length\"\r\n            :index=\"item.path\"\r\n            :key=\"item.path\"\r\n          >\r\n            <template slot=\"title\">\r\n              <i :class=\"item.icon\"></i>\r\n              <span>{{item.name}}</span>\r\n            </template>\r\n\r\n            <!-- 二级菜单 -->\r\n            <template v-for=\"itemChild in item.children\">\r\n              <el-submenu\r\n                v-if=\"itemChild.children && itemChild.children.length\"\r\n                :index=\"itemChild.path\"\r\n                :key=\"itemChild.path\"\r\n              >\r\n                <template slot=\"title\">\r\n                  <i :class=\"itemChild.icon\"></i>\r\n                  <span>{{itemChild.name}}</span>\r\n                </template>\r\n\r\n                <!-- 三级菜单 -->\r\n                <el-menu-item\r\n                  v-for=\"itemChild_Child in itemChild.children\"\r\n                  :index=\"itemChild_Child .path\"\r\n                  :key=\"itemChild_Child.path\"\r\n                >\r\n                  <i :class=\"itemChild_Child.icon\"></i>\r\n                  <span slot=\"title\">{{itemChild_Child.name}}</span>\r\n                </el-menu-item>\r\n              </el-submenu>\r\n\r\n              <el-menu-item v-else :index=\"itemChild.path\" :key=\"itemChild.path\">\r\n                <i :class=\"itemChild.icon\"></i>\r\n                <span slot=\"title\">{{itemChild.name}}</span>\r\n              </el-menu-item>\r\n            </template>\r\n          </el-submenu>\r\n\r\n          <el-menu-item v-else :index=\"item.path\" :key=\"item.path\">\r\n            <i :class=\"item.icon\"></i>\r\n            <span slot=\"title\">{{item.name}}</span>\r\n          </el-menu-item>\r\n        </template>\r\n      </el-menu>\r\n    </el-aside>\r\n    <!--左侧菜单结束-->\r\n\r\n    <el-container>\r\n      <!--表头开始-->\r\n      <el-header style=\"font-size: 12px\">\r\n        <el-row :gutter=\"0\">\r\n          <el-col :span=\"5\">\r\n            <div class=\"block\">\r\n              <span class=\"demonstration\"></span>\r\n              <el-date-picker v-model=\"beginTime\" type=\"date\" placeholder=\"开始日期时间\"></el-date-picker>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-select v-model=\"powerType\" placeholder=\"功率类型\">\r\n              <el-option value=\"ZxygZ\" label=\"正向有功总\"></el-option>\r\n              <el-option value=\"FxygZ\" label=\"反向有功总\"></el-option>\r\n              <el-option value=\"ZxwgZ\" label=\"正向无功总\"></el-option>\r\n              <el-option value=\"FxwgZ\" label=\"反向无功总\"></el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-select v-model=\"dateType\" placeholder=\"间隔时间\">\r\n              <el-option value=\"hour\" label=\"小时电量曲线\"></el-option>\r\n              <el-option value=\"day\" label=\"日电量曲线\"></el-option>\r\n              <el-option value=\"month\" label=\"月电量曲线\"></el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-select v-model=\"chartType\" placeholder=\"曲线类型\">\r\n              <el-option value=\"bar\" label=\"柱形图\"></el-option>\r\n              <el-option value=\"line\" label=\"曲线图\"></el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"4\">\r\n            <el-button type=\"info\" icon=\"el-icon-search\" plain @click=\"getPowerData\">查询</el-button>\r\n            <el-button type=\"info\" icon=\"el-icon-upload2\" v-if=\"hasPerm('powerAnalyze:export')\" @click=\"exportData\" plain>导出</el-button> \r\n          </el-col>\r\n        </el-row>\r\n      </el-header>\r\n      <!--表头结束-->\r\n\r\n      <!--表格开始-->\r\n      <el-main>\r\n        <el-card>\r\n          <!--图表-->\r\n          <div class=\"Chart\">\r\n            <h1 style=\"text-align:center;\">{{Title}}</h1>\r\n            <div v-if=\"chartType==='bar'\">\r\n              <ve-histogram\r\n                :data=\"chartData\"\r\n                :data-empty=\"dataEmpty\"\r\n                :toolbox=\"toolbox\"\r\n                :mark-line=\"markLine\"\r\n                :mark-point=\"markPoint\"\r\n                :data-zoom=\"dataZoom\"\r\n                :settings=\"chartSettings\"\r\n              ></ve-histogram>\r\n            </div>\r\n            <div v-else>\r\n              <ve-line\r\n                :data=\"chartData\"\r\n                :data-empty=\"dataEmpty\"\r\n                :toolbox=\"toolbox\"\r\n                :mark-line=\"markLine\"\r\n                :mark-point=\"markPoint\"\r\n                :data-zoom=\"dataZoom\"\r\n                :settings=\"chartSettings\"\r\n              ></ve-line>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n\r\n        <div style=\"margin-top:5px\">\r\n          <el-table\r\n            ref=\"testTable\"\r\n            :data=\"tableData\"\r\n            style=\"width:100%\"\r\n            border\r\n            :default-sort=\"{prop: 'id', order: 'ascending'}\"\r\n            @selection-change=\"handleSelectionChange\"\r\n            @row-click=\"handleclick\"\r\n            :row-class-name=\"tableRowClassName\"\r\n          >\r\n            <el-table-column prop=\"Time\" label=\"时间\" sortable align=\"center\" show-overflow-tooltip></el-table-column>\r\n            <el-table-column prop=\"num\" label=\"倍率\" align=\"center\" sortable></el-table-column>\r\n            <el-table-column label=\"抄表时间\" align=\"center\">\r\n              <el-table-column prop=\"beginTime\" label=\"起\" align=\"center\" sortable></el-table-column>\r\n              <el-table-column prop=\"endTime\" label=\"止\" align=\"center\" sortable></el-table-column>\r\n            </el-table-column>\r\n            <el-table-column label=\"底码读数（总）\" align=\"center\">\r\n              <el-table-column prop=\"totalNumber\" label=\"电量\" align=\"center\" sortable></el-table-column>\r\n              <el-table-column prop=\"beginNumber\" label=\"起\" align=\"center\" sortable></el-table-column>\r\n              <el-table-column prop=\"endNumber\" label=\"止\" align=\"center\" sortable></el-table-column>\r\n            </el-table-column>\r\n          </el-table>\r\n\r\n          <div align=\"center\">\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[5,10, 20, 30, 40]\"\r\n              :page-size=\"pagesize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"totalCount\"\r\n            ></el-pagination>\r\n          </div>\r\n        </div>\r\n      </el-main>\r\n      <!--表头结束-->\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport API from \"@/api\";\r\nimport Vue from \"vue\";\r\nimport \"v-charts/lib/style.css\";\r\nimport \"echarts/lib/component/markLine\";\r\nimport \"echarts/lib/component/markPoint\";\r\nimport 'echarts/lib/component/dataZoom';\r\nexport default {\r\n  data() {\r\n    this.dataZoom = [\r\n        {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 100\r\n        }\r\n      ]\r\n    this.markLine = {\r\n      data: [\r\n        {\r\n          name: \"平均线\",\r\n          type: \"average\"\r\n        }\r\n      ]\r\n    };\r\n    this.markPoint = {\r\n      data: [\r\n        {\r\n          name: \"最大值\",\r\n          type: \"max\"\r\n        },\r\n        {\r\n          name: \"最小值\",\r\n          type: \"min\"\r\n        }\r\n      ]\r\n    };\r\n    this.toolbox = {\r\n      feature: {\r\n        magicType: { type: [\"line\", \"bar\"] },\r\n        saveAsImage: {}\r\n      }\r\n    };\r\n      this.chartSettings = {\r\n        labelMap: {\r\n          totalNumber: \"总电量(KWh)\"\r\n        }\r\n      };\r\n    return {\r\n      beginTime: \"\",\r\n      endTime: \"\",\r\n      powerType: \"ZxygZ\",\r\n      chartData: null,\r\n      dataEmpty: true,\r\n      dataSource: \"\",\r\n      //表格当前页数据\r\n      tableData: [],\r\n      //多选数组\r\n      multipleSelection: [],\r\n      //搜索条件\r\n      criteria: \"\",\r\n      //下拉菜单选项\r\n      select: \"\",\r\n      //默认每页数据量\r\n      pagesize: 40,\r\n      //默认高亮行数据id\r\n      highlightId: -1,\r\n      //当前页码\r\n      currentPage: 1,\r\n      //查询的页码\r\n      start: 1,\r\n      //默认数据总数\r\n      totalCount: 0,\r\n      formLabelWidth: \"120px\",\r\n      //树状图列表\r\n      list: \"\",\r\n      //电量数据\r\n      data: [],\r\n      //间隔时间类型\r\n      dateType: \"hour\",\r\n      //图形类型\r\n      chartType: \"bar\",\r\n      //所选电表\r\n      key: \"\",\r\n      height: 20,\r\n      Title: \"Title\",\r\n      EStationName:\"\"\r\n    };\r\n  },\r\n  components: {},\r\n  created() {\r\n    this.loadMenu();\r\n  },\r\n  methods: {\r\n    //从服务器读取数据\r\n\r\n    selectMenu: function(key, keyPath, name) {\r\n      this.EStationName = keyPath[1].split(\"/\")[1];\r\n      console.log(keyPath.length);\r\n      if(keyPath.length<=2){\r\n        this.key = \"\";\r\n      }else{\r\n        this.key = keyPath[2].split(\"/\")[1];\r\n      }\r\n    },\r\n\r\n    //加载树状图\r\n    loadMenu: function() {\r\n      API.powerUtil\r\n        .getMenu()\r\n        .then(({ data }) => {\r\n          console.log(data.data);\r\n          if (data.status == 0) {\r\n            this.list = data.data;\r\n          } else {\r\n            //this.$Message.error(data.msg);\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n    },\r\n\r\n    increaseHeight() {\r\n      this.height += 10;\r\n    },\r\n\r\n    //填充图表数据\r\n    fillData(data) {\r\n      this.chartData = {\r\n        columns: [\"Time\", \"totalNumber\"],\r\n        rows: data\r\n      };\r\n      if (data.length==0) {\r\n        this.dataEmpty = true;\r\n      }else{\r\n        this.dataEmpty = false;\r\n      }\r\n    },\r\n\r\n    getPowerData: function() {\r\n      if (this.key == null || this.key == \"\") {\r\n        this.$message(\"请选择电表！\");\r\n      } else if (this.beginTime == \"\") {\r\n        this.$message(\"请选择开始时间！\");\r\n      } else if (this.powerType == \"\") {\r\n        this.$message(\"请选择功率类型！\");\r\n      } else if (this.dateType == \"\") {\r\n        this.$message(\"请选择时间间隔\");\r\n      } else if (this.chartType == \"\") {\r\n        this.$message(\"请选择图形！\");\r\n      } else {\r\n        if (this.dateType == \"hour\") {\r\n          this.Title =\r\n            this.key + \"：24小时电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        } else if (this.dateType == \"day\") {\r\n          this.Title =\r\n            this.key + \"：30天电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        } else if (this.dateType == \"year\") {\r\n          this.Title =\r\n            this.key + \"：12月电量(\" + this.dateFormat(this.beginTime) + \")\";\r\n        }\r\n        let params = {\r\n          estationName:this.EStationName,\r\n          emeterName: this.key,\r\n          beginTime: this.beginTime,\r\n          dateType: this.dateType,\r\n          powerType: this.powerType,\r\n          pageNum: this.currentPage,\r\n          pageSize: this.pagesize\r\n        };\r\n        API.powerUtil\r\n          .getPowerAnalyze(params)\r\n          .then(({ data }) => {\r\n            if (data.status == 0) {\r\n              this.tableData = data.data.page.list;\r\n              this.totalCount = data.data.page.total;\r\n              this.fillData(data.data.page.list);\r\n            } else {\r\n              this.$message(\"请求失败！\");\r\n            }\r\n          })\r\n          .catch(data => {\r\n            this.$message(\"请求失败ww！\");\r\n            console.log(data);\r\n          });\r\n      }\r\n    },\r\n    //多选响应\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n\r\n    //点击行响应\r\n    handleclick: function(row, event, column) {\r\n      this.highlightId = row.id;\r\n    },\r\n    exportData() {\r\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\r\n      this.$message(\"待开发\");\r\n    },\r\n\r\n    //改变当前点击的行的class，高亮当前行\r\n    tableRowClassName: function(row, index) {\r\n      if (row.id == this.highlightId) {\r\n        return \"info-row\";\r\n      }\r\n    },\r\n\r\n    //每页显示数据量变更\r\n    handleSizeChange: function(val) {\r\n      this.pagesize = val;\r\n      this.getPowerData();\r\n    },\r\n\r\n    //页码变更\r\n    handleCurrentChange: function(val) {\r\n      this.currentPage = val;\r\n      this.getPowerData();\r\n    },\r\n    //时间格式化函数，此处仅针对yyyy-MM-dd hh:mm:ss 的格式进行格式化\r\n    dateFormat: function(time) {\r\n      var date = new Date(time);\r\n      var year = date.getFullYear();\r\n      /* 在日期格式中，月份是从0开始的，因此要加0\r\n       * 使用三元表达式在小于10的前面加0，以达到格式统一  如 09:11:05\r\n       * */\r\n      var month =\r\n        date.getMonth() + 1 < 10\r\n          ? \"0\" + (date.getMonth() + 1)\r\n          : date.getMonth() + 1;\r\n      var day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n      var hours =\r\n        date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\r\n      var minutes =\r\n        date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\r\n      var seconds =\r\n        date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\r\n      // 拼接\r\n      return year + \"-\" + month + \"-\" + day;\r\n    }\r\n  },\r\n  computed: {\r\n    myStyles() {\r\n      return {\r\n        height: `${this.height}px`,\r\n        position: \"relative\"\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-select .el-input {\r\n  width: 110px;\r\n}\r\n\r\n.el-table .info-row {\r\n  background: #c9e5f5;\r\n}\r\n\r\n#top {\r\n  background: #20a0ff;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n}\r\n\r\n.el-header {\r\n  background-color: rgb(179, 192, 209);\r\n  color: #333;\r\n  line-height: 60px;\r\n}\r\n\r\n.el-aside {\r\n  color: #333;\r\n  background-color: #b3c0d1;\r\n}\r\n</style>\r\n"]}]}