{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\page\\Charge.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\page\\Charge.vue","mtime":1559119599905},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Date$now from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/date/now\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport API from \"@/api\";\nimport Vue from \"vue\";\nexport default {\n  data: function data() {\n    return {\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //搜索条件\n      criteria: \"\",\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 10,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 1000,\n      addUserForm: {\n        PeakTimes: [{\n          value: \"\"\n        }],\n        FlatTimes: [{\n          value: \"\"\n        }],\n        RavineTimes: [{\n          value: \"\"\n        }],\n        jPeakCharge: '',\n        tPeakCharge: '',\n        hPeakCharge: '',\n        jFlatCharge: '',\n        tFlatCharge: '',\n        hFlatCharge: '',\n        hRavineCharge: '',\n        jRavineCharge: '',\n        tRavineCharge: '',\n        status: \"0\"\n      },\n      dialogFormVisible: false,\n      addFormVisible: false,\n      formLabelWidth: \"120px\"\n    };\n  },\n  created: function created() {\n    this.loadData(this.criteria, this.currentPage, this.pagesize);\n  },\n  methods: {\n    //从服务器读取数据\n    loadData: function loadData(criteria, pageNum, pageSize) {\n      var _this = this;\n\n      var params = {\n        parameter: criteria,\n        pageNum: pageNum,\n        pageSize: pageSize\n      };\n      API.chargeUtil.ChargeList(params).then(function (_ref) {\n        var data = _ref.data;\n        console.log(data);\n\n        if (data.status == 0) {\n          _this.tableData = data.data.userData;\n          _this.totalCount = data.data.number;\n        } else {\n          //this.$Message.error(data.msg);\n          _this.$message(\"请求失败！\");\n        }\n      }).catch(function (data) {\n        _this.$message(\"请求失败ww！\");\n\n        console.log(data);\n      });\n    },\n    //添加\n    addSubmitForm: function addSubmitForm(addUserForm) {\n      var _this2 = this;\n\n      var peakTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.PeakTimes.length; i++) {\n        peakTime += API.userUtil.formatTimeToStr(this.addUserForm.PeakTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.PeakTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(peakTime);\n      var flatTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.FlatTimes.length; i++) {\n        flatTime += API.userUtil.formatTimeToStr(this.addUserForm.FlatTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.FlatTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(flatTime);\n      var ravineTime = \"\";\n\n      for (var i = 0; i < this.addUserForm.RavineTimes.length; i++) {\n        ravineTime += API.userUtil.formatTimeToStr(this.addUserForm.RavineTimes[i].value[0], \"hh:mm\") + \"-\" + API.userUtil.formatTimeToStr(this.addUserForm.RavineTimes[i].value[1], \"hh:mm\") + \",\";\n      }\n\n      console.log(ravineTime);\n      var params = {\n        peakTime: peakTime,\n        flatTime: flatTime,\n        ravineTime: ravineTime,\n        jPeakCharge: this.addUserForm.jPeakCharge,\n        tPeakCharge: this.addUserForm.tPeakCharge,\n        hPeakCharge: this.addUserForm.hPeakCharge,\n        jFlatCharge: this.addUserForm.jFlatCharge,\n        tFlatCharge: this.addUserForm.tFlatCharge,\n        hFlatCharge: this.addUserForm.hFlatCharge,\n        hRavineCharge: this.addUserForm.hRavineCharge,\n        jRavineCharge: this.addUserForm.jRavineCharge,\n        tRavineCharge: this.addUserForm.tRavineCharge,\n        status: this.addUserForm.status\n      };\n      this.$refs[addUserForm].validate(function (valid) {\n        console.log(_this2.addUserForm.status);\n\n        if (valid) {\n          API.chargeUtil.addCharge(params).then(function (_ref2) {\n            var data = _ref2.data;\n\n            if (data.data == true) {\n              _this2.addFormVisible = false;\n\n              _this2.$message(\"添加成功!\");\n\n              _this2.loadData(_this2.criteria, _this2.currentPage, _this2.pagesize);\n            } else {\n              _this2.$message(\"请求失败！\");\n            }\n          }).catch(function (data) {\n            _this2.$message(\"请求失败！\");\n\n            console.log(data);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //添加峰时刻\n    addPeak: function addPeak() {\n      this.addUserForm.PeakTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removePeak: function removePeak(item) {\n      var index = this.addUserForm.PeakTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.PeakTimes.splice(index, 1);\n      }\n    },\n    //添加平时刻\n    addFlat: function addFlat() {\n      this.addUserForm.FlatTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removeFlat: function removeFlat(item) {\n      var index = this.addUserForm.FlatTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.FlatTimes.splice(index, 1);\n      }\n    },\n    //添加谷时刻\n    addRavine: function addRavine() {\n      this.addUserForm.RavineTimes.push({\n        value: \"\",\n        key: _Date$now()\n      });\n    },\n    removeRavine: function removeRavine(item) {\n      var index = this.addUserForm.RavineTimes.indexOf(item);\n\n      if (index !== -1) {\n        this.addUserForm.RavineTimes.splice(index, 1);\n      }\n    },\n    //多选响应\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //点击行响应\n    handleclick: function handleclick(row, event, column) {\n      this.highlightId = row.id;\n    },\n    //编辑\n    handleEdit: function handleEdit(index, row) {\n      var _this3 = this;\n\n      var params = {\n        id: row.id\n      };\n      this.$confirm(\"是否将本条设为默认?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        API.chargeUtil.editCharge(params).then(function (_ref3) {\n          var data = _ref3.data;\n\n          if (data.data == true) {\n            _this3.$message({\n              type: \"success\",\n              message: \"修改成功!\"\n            });\n\n            _this3.loadData(_this3.criteria, _this3.currentPage, _this3.pagesize);\n          } else {\n            _this3.$message({\n              type: \"info\",\n              message: \"修改失败\"\n            });\n          }\n        }).catch(function (data) {\n          _this3.$message(\"修改失败！\");\n        });\n\n        _this3.$message({\n          type: \"success\",\n          message: \"修改成功!\"\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: \"info\",\n          message: \"已取消修改\"\n        });\n      });\n    },\n    //修改\n    editSubmitForm: function editSubmitForm(editUserForm) {\n      var _this4 = this;\n\n      var params = {\n        geNumber: this.editUserForm.geNumber,\n        userState: this.editUserForm.userState\n      };\n      this.$refs[editUserForm].validate(function (valid) {\n        if (valid) {\n          API.userUtil.updateUser(params).then(function (_ref4) {\n            var data = _ref4.data;\n\n            if (data.data == true) {\n              _this4.dialogFormVisible = false;\n\n              _this4.loadData(_this4.criteria, _this4.currentPage, _this4.pagesize);\n            } else {\n              _this4.$message(\"请求失败！\");\n            }\n          }).catch(function (data) {\n            _this4.$message(\"请求失败！\");\n\n            console.log(data);\n          });\n        } else {\n          _this4.$message.error(\"请求失败！\");\n\n          return false;\n        }\n      });\n    },\n    //单行删除\n    handleDelete: function handleDelete(index, row) {\n      var _this5 = this;\n\n      var params = {\n        id: row.id\n      };\n      this.$confirm(\"此操作将永久删除“\" + row.id + \"”, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        API.chargeUtil.deleteCharge(params).then(function (_ref5) {\n          var data = _ref5.data;\n\n          if (data.data == true) {\n            _this5.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n\n            _this5.loadData(_this5.criteria, _this5.currentPage, _this5.pagesize);\n          } else {\n            _this5.$message({\n              type: \"info\",\n              message: \"删除失败\"\n            });\n          }\n        }).catch(function (data) {\n          _this5.$message(\"请求失败！\");\n        });\n\n        _this5.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //搜索\n    search: function search() {\n      console.log(this.select);\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    add: function add() {\n      this.addFormVisible = true;\n    },\n    exportUser: function exportUser() {\n      window.location.href = \"http://localhost:8088/api/exportUser.do\";\n    },\n\n    /*\r\n          //多项删除\r\n          deletenames: function(){\r\n          \tif(this.multipleSelection.length==0)\r\n          \t\treturn;\r\n          \tvar array = [];\r\n          \tthis.multipleSelection.forEach((item) = > {\r\n          \t\tarray.push(item.id);\r\n           })\r\n    \tthis.$http.post('../delete',{\"array\":array},{emulateJSON: true}).then(function(res){\r\n    \t\tthis.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              },function(){\r\n                  console.log('failed');\r\n              });\r\n          },\r\n        */\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function tableRowClassName(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n    //每页显示数据量变更\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagesize = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    //页码变更\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    }\n  }\n};",{"version":3,"sources":["Charge.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n\t   <!--\r\n    <div id=\"top\">\r\n      <span>\r\n        <el-button type=\"text\" @click=\"dialogFormVisible = true\" style=\"color:white\">添加</el-button>\r\n       <el-button type=\"text\" @click=\"deletenames\" style=\"color:white\">批量删除</el-button>\r\n      </span>\r\n    </div>-->\r\n    <br>\r\n    <div style=\"margin-top:15px\">\r\n      <el-input placeholder=\"请输入内容\" v-model=\"criteria\" style=\"padding-bottom:10px;\">\r\n        <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\r\n          <!--<el-option label=\"id\" value=\"1\"></el-option>-->\r\n          <el-option label=\"工号\" value=\"1\"></el-option>\r\n          <el-option label=\"姓名\" value=\"2\"></el-option>\r\n          <el-option label=\"状态\" value=\"3\"></el-option>\r\n          <el-option label=\"电话\" value=\"4\"></el-option>\r\n        </el-select>\r\n        <el-button slot=\"append\" icon=\"el-icon-search\" v-on:click=\"search\">查询</el-button>\r\n        <el-button slot=\"append\" icon=\"el-icon-plus\" v-on:click=\"add\">添加</el-button>\r\n        <el-button slot=\"append\" icon=\"el-icon-upload2\" v-on:click=\"exportUser\">导出</el-button>\r\n      </el-input>\r\n\r\n      <el-table\r\n        ref=\"testTable\"\r\n        :data=\"tableData\"\r\n        style=\"width:100%\"\r\n        border\r\n        :default-sort=\"{prop: 'id', order: 'ascending'}\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        @row-click=\"handleclick\"\r\n        :row-class-name=\"tableRowClassName\"\r\n      >\r\n        <el-table-column type=\"selection\"></el-table-column>\r\n        <!--\r\n\t\t    <el-table-column\r\n\t\t      prop=\"id\"\r\n\t\t      label=\"Id\"\r\n\t\t      sortable\r\n\t\t      show-overflow-tooltip>\r\n        </el-table-column>-->\r\n        <el-table-column prop=\"peakTime\" width=\"90px\" label=\"峰时刻\" sortable></el-table-column>\r\n        <el-table-column prop=\"jPeakCharge\" width=\"90px\" label=\"集美(峰)\" sortable></el-table-column>\r\n        <el-table-column prop=\"tPeakCharge\" width=\"90px\" label=\"同安(峰)\" sortable></el-table-column>\r\n        <el-table-column prop=\"hPeakCharge\" width=\"90px\" label=\"湖里(峰)\" sortable></el-table-column>\r\n        <el-table-column prop=\"flatTime\" label=\"平时刻\" width=\"90px\" sortable></el-table-column>\r\n        <el-table-column prop=\"jFlatCharge\" width=\"90px\" label=\"集美(平)\" sortable></el-table-column>\r\n        <el-table-column prop=\"tFlatCharge\" width=\"90px\" label=\"同安(平)\" sortable></el-table-column>\r\n        <el-table-column prop=\"hFlatCharge\" width=\"90px\" label=\"湖里(平)\" sortable></el-table-column>\r\n        <el-table-column prop=\"ravineTime\" label=\"谷时刻\" width=\"90px\" sortable></el-table-column>\r\n        <el-table-column prop=\"jRavineCharge\" width=\"90px\" label=\"集美(谷)\" sortable></el-table-column>\r\n        <el-table-column prop=\"tRavineCharge\" width=\"90px\" label=\"同安(谷)\" sortable></el-table-column>\r\n        <el-table-column prop=\"hRavineCharge\" width=\"90px\" label=\"湖里(谷)\" sortable></el-table-column>\r\n        <el-table-column prop=\"status\" width=\"100px\" label=\"默认（1）\" sortable></el-table-column>\r\n        <el-table-column prop=\"createdDateTime\" label=\"创建时间\" sortable></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template scope=\"scope\">\r\n            <el-button size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\">设为默认</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-dialog title=\"添加新的峰平谷时刻\" :visible.sync=\"addFormVisible\">\r\n        <el-form :model=\"addUserForm\"  ref=\"addUserForm\">\r\n          <el-form-item\r\n            :label-width=\"formLabelWidth\"\r\n            v-for=\"(peak, index) in addUserForm.PeakTimes\"\r\n            :label=\"'峰时刻' + index\"\r\n            :key=\"peak.key\"\r\n            :prop=\"'PeakTimes.' + index + '.value'\"\r\n            :rules=\"{\r\n      required: true, message: '峰时刻不能为空'\r\n    }\"\r\n          >\r\n            <el-time-picker\r\n              is-range\r\n              v-model=\"peak.value\"\r\n              range-separator=\"-\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              placeholder=\"选择时间范围\"\r\n            ></el-time-picker>\r\n            <el-button style=\"float:right;\" @click.prevent=\"removePeak(peak)\">删除</el-button>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"峰时刻集美电费\" :label-width=\"formLabelWidth\" prop=\"jPeakCharge\"\r\n\t\t  :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input  v-model.number=\"addUserForm.jPeakCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item label=\"峰时刻同安电费\" :label-width=\"formLabelWidth\" prop=\"tPeakCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.tPeakCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"峰时刻湖里电费\" :label-width=\"formLabelWidth\" prop=\"hPeakCharge\"\r\n\t\t  :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.hPeakCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item\r\n            :label-width=\"formLabelWidth\"\r\n            v-for=\"(flat, index) in addUserForm.FlatTimes\"\r\n            :label=\"'平时刻' + index\"\r\n            :key=\"flat.key\"\r\n            :prop=\"'FlatTimes.' + index + '.value'\"\r\n            :rules=\"{\r\n      required: true, message: '平时刻不能为空'\r\n    }\"\r\n          >\r\n            <el-time-picker\r\n              is-range\r\n              v-model=\"flat.value\"\r\n              range-separator=\"-\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              placeholder=\"选择时间范围\"\r\n            ></el-time-picker>\r\n            <el-button style=\"float:right;\" @click.prevent=\"removeFlat(flat)\">删除</el-button>\r\n          </el-form-item>\r\n          <el-form-item label=\"平时刻集美电费\" :label-width=\"formLabelWidth\" prop=\"jFlatCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.jFlatCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"平时刻同安电费\" :label-width=\"formLabelWidth\" prop=\"tFlatCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.tFlatCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"平时刻湖里电费\" :label-width=\"formLabelWidth\" prop=\"hFlatCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.hFlatCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item\r\n            :label-width=\"formLabelWidth\"\r\n            v-for=\"(ravine, index) in addUserForm.RavineTimes\"\r\n            :label=\"'谷时刻' + index\"\r\n            :key=\"ravine.key\"\r\n            :prop=\"'RavineTimes.' + index + '.value'\"\r\n            :rules=\"{\r\n      required: true, message: '谷时刻不能为空'\r\n    }\"\r\n          >\r\n            <el-time-picker\r\n              is-range\r\n              v-model=\"ravine.value\"\r\n              range-separator=\"-\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              placeholder=\"选择时间范围\"\r\n            ></el-time-picker>\r\n            <el-button style=\"float:right;\" @click.prevent=\"removeRavine(ravine)\">删除</el-button>\r\n          </el-form-item>\r\n          <el-form-item label=\"谷时刻集美电费\" :label-width=\"formLabelWidth\" prop=\"jRavineCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.jRavineCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"谷时刻同安电费\" :label-width=\"formLabelWidth\" prop=\"tRavineCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.tRavineCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"谷时刻湖里电费\" :label-width=\"formLabelWidth\" prop=\"hRavineCharge\"\r\n\t\t    :rules=\"[\r\n      { required: true, message: '不能为空'},\r\n      { type: 'number', message: '必须为数字值'}\r\n    ]\">\r\n            <el-input type=\"number\" v-model.number=\"addUserForm.hRavineCharge\" auto-complete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" :label-width=\"formLabelWidth\" prop=\"status\">\r\n            <el-select v-model=\"addUserForm.status\" placeholder=\"状态\">\r\n              <el-option label=\"有效\" value=\"1\"></el-option>\r\n              <el-option label=\"无效\" value=\"0\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        \r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addFormVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addSubmitForm('addUserForm')\">确 定</el-button>\r\n          <el-button type=\"info\" @click=\"addPeak\">添加峰时刻</el-button>\r\n          <el-button type=\"info\" @click=\"addFlat\">添加平时刻</el-button>\r\n          <el-button type=\"info\" @click=\"addRavine\">添加谷时刻</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n      <div align=\"center\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[5,10, 20, 30, 40]\"\r\n          :page-size=\"pagesize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalCount\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport API from \"@/api\";\r\nimport Vue from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //表格当前页数据\r\n      tableData: [],\r\n      //多选数组\r\n      multipleSelection: [],\r\n      //搜索条件\r\n      criteria: \"\",\r\n      //下拉菜单选项\r\n      select: \"\",\r\n      //默认每页数据量\r\n      pagesize: 10,\r\n      //默认高亮行数据id\r\n      highlightId: -1,\r\n      //当前页码\r\n      currentPage: 1,\r\n      //查询的页码\r\n      start: 1,\r\n      //默认数据总数\r\n      totalCount: 1000,\r\n      addUserForm: {\r\n        PeakTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n        ],\r\n        FlatTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n        ],\r\n        RavineTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n\t\t],\r\n\t\tjPeakCharge:'',\r\n\t\ttPeakCharge:'',\r\n\t\thPeakCharge:'',\r\n\t\tjFlatCharge:'',\r\n\t\ttFlatCharge:'',\r\n\t\thFlatCharge:'',\r\n        hRavineCharge: '',\r\n        jRavineCharge: '',\r\n        tRavineCharge: '',\r\n        status: \"0\"\r\n      },\r\n      dialogFormVisible: false,\r\n      addFormVisible: false,\r\n      formLabelWidth: \"120px\"\r\n    };\r\n  },\r\n  created() {\r\n    this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n  },\r\n  methods: {\r\n    //从服务器读取数据\r\n    loadData: function(criteria, pageNum, pageSize) {\r\n      let params = {\r\n        parameter: criteria,\r\n        pageNum: pageNum,\r\n        pageSize: pageSize\r\n      };\r\n      API.chargeUtil\r\n        .ChargeList(params)\r\n        .then(({ data }) => {\r\n          console.log(data);\r\n          if (data.status == 0) {\r\n            this.tableData = data.data.userData;\r\n            this.totalCount = data.data.number;\r\n          } else {\r\n            //this.$Message.error(data.msg);\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n    },\r\n\r\n    //添加\r\n    addSubmitForm(addUserForm) {\r\n      var peakTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.PeakTimes.length; i++) {\r\n        peakTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.PeakTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.PeakTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(peakTime);\r\n      var flatTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.FlatTimes.length; i++) {\r\n        flatTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.FlatTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.FlatTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(flatTime);\r\n      var ravineTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.RavineTimes.length; i++) {\r\n        ravineTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.RavineTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.RavineTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(ravineTime);\r\n      let params = {\r\n        peakTime: peakTime,\r\n\t\tflatTime: flatTime,\r\n\t\travineTime: ravineTime,\r\n\t\tjPeakCharge: this.addUserForm.jPeakCharge,\r\n\t\ttPeakCharge:this.addUserForm.tPeakCharge,\r\n\t\thPeakCharge:this.addUserForm.hPeakCharge,\r\n\t\tjFlatCharge:this.addUserForm.jFlatCharge,\r\n\t\ttFlatCharge:this.addUserForm.tFlatCharge,\r\n\t\thFlatCharge:this.addUserForm.hFlatCharge,\r\n        hRavineCharge: this.addUserForm.hRavineCharge,\r\n        jRavineCharge: this.addUserForm.jRavineCharge,\r\n        tRavineCharge: this.addUserForm.tRavineCharge,\r\n        status : this.addUserForm.status\r\n      };\r\n      this.$refs[addUserForm].validate(valid => {\r\n\t\t  console.log(this.addUserForm.status);\r\n        if (valid) {\r\n          API.chargeUtil\r\n            .addCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.addFormVisible = false;\r\n                this.$message(\"添加成功!\");\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message(\"请求失败！\");\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n              console.log(data);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //添加峰时刻\r\n    addPeak() {\r\n      this.addUserForm.PeakTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removePeak(item) {\r\n      var index = this.addUserForm.PeakTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.PeakTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //添加平时刻\r\n    addFlat() {\r\n      this.addUserForm.FlatTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removeFlat(item) {\r\n      var index = this.addUserForm.FlatTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.FlatTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //添加谷时刻\r\n    addRavine() {\r\n      this.addUserForm.RavineTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removeRavine(item) {\r\n      var index = this.addUserForm.RavineTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.RavineTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //多选响应\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n\r\n    //点击行响应\r\n    handleclick: function(row, event, column) {\r\n      this.highlightId = row.id;\r\n    },\r\n\r\n    //编辑\r\n    handleEdit: function(index, row) {\r\n        let params = { id: row.id };\r\n      this.$confirm(\r\n        \"是否将本条设为默认?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }\r\n      )\r\n        .then(() => {\r\n          API.chargeUtil\r\n            .editCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.$message({ type: \"success\", message: \"修改成功!\" });\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message({ type: \"info\", message: \"修改失败\" });\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"修改失败！\");\r\n            });\r\n          this.$message({ type: \"success\", message: \"修改成功!\" });\r\n        })\r\n        .catch(() => {\r\n          this.$message({ type: \"info\", message: \"已取消修改\" });\r\n        });\r\n    },\r\n\r\n    //修改\r\n    editSubmitForm(editUserForm) {\r\n      let params = {\r\n        geNumber: this.editUserForm.geNumber,\r\n        userState: this.editUserForm.userState\r\n      };\r\n      this.$refs[editUserForm].validate(valid => {\r\n        if (valid) {\r\n          API.userUtil\r\n            .updateUser(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.dialogFormVisible = false;\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message(\"请求失败！\");\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n              console.log(data);\r\n            });\r\n        } else {\r\n          this.$message.error(\"请求失败！\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    //单行删除\r\n    handleDelete: function(index, row) {\r\n      let params = { id: row.id };\r\n      this.$confirm(\r\n        \"此操作将永久删除“\" + row.id + \"”, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }\r\n      )\r\n        .then(() => {\r\n          API.chargeUtil\r\n            .deleteCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.$message({ type: \"success\", message: \"删除成功!\" });\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message({ type: \"info\", message: \"删除失败\" });\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n            });\r\n          this.$message({ type: \"success\", message: \"删除成功!\" });\r\n        })\r\n        .catch(() => {\r\n          this.$message({ type: \"info\", message: \"已取消删除\" });\r\n        });\r\n    },\r\n\r\n    //搜索\r\n    search: function() {\r\n      console.log(this.select);\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n    add: function() {\r\n      this.addFormVisible = true;\r\n    },\r\n    exportUser() {\r\n      window.location.href = \"http://localhost:8088/api/exportUser.do\";\r\n    },\r\n    /*\r\n\t\t        //多项删除\r\n\t\t        deletenames: function(){\r\n\t\t        \tif(this.multipleSelection.length==0)\r\n\t\t        \t\treturn;\r\n\t\t        \tvar array = [];\r\n\t\t        \tthis.multipleSelection.forEach((item) = > {\r\n\t\t        \t\tarray.push(item.id);\r\n\t\t\t        })\r\n\t\t\t\t\tthis.$http.post('../delete',{\"array\":array},{emulateJSON: true}).then(function(res){\r\n\t\t\t\t\t\tthis.loadData(this.criteria, this.currentPage, this.pagesize);\r\n\t\t            },function(){\r\n\t\t                console.log('failed');\r\n\t\t            });\r\n\t\t        },\r\n\t\t      */\r\n    //改变当前点击的行的class，高亮当前行\r\n    tableRowClassName: function(row, index) {\r\n      if (row.id == this.highlightId) {\r\n        return \"info-row\";\r\n      }\r\n    },\r\n\r\n    //每页显示数据量变更\r\n    handleSizeChange: function(val) {\r\n      this.pagesize = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n\r\n    //页码变更\r\n    handleCurrentChange: function(val) {\r\n      this.currentPage = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-select .el-input {\r\n  width: 110px;\r\n}\r\n\r\n.el-table .info-row {\r\n  background: #c9e5f5;\r\n}\r\n\r\n#top {\r\n  background: #20a0ff;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components\\page"}]}