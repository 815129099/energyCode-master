{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Chart.vue","mtime":1557455843478},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BarExample from '../common/chart/BarExample';\nimport LineExample from '../common/chart/LineExample';\nimport DoughnutExample from '../common/chart/DoughnutExample';\nimport PieExample from '../common/chart/PieExample';\nimport RadarExample from '../common/chart/RadarExample';\nimport PolarAreaExample from '../common/chart/PolarAreaExample';\nimport BubbleExample from '../common/chart/BubbleExample';\nimport ReactiveExample from '../common/chart/ReactiveExample';\nimport ReactivePropExample from '../common/chart/ReactivePropExample';\nimport ScatterExample from '../common/chart/ScatterExample';\nimport HorizontalBarExample from '../common/chart/HorizontalBarExample';\nimport CustomLine from '../common/chart/CustomExample';\nexport default {\n  components: {\n    BarExample: BarExample,\n    LineExample: LineExample,\n    DoughnutExample: DoughnutExample,\n    CustomLine: CustomLine,\n    PieExample: PieExample,\n    RadarExample: RadarExample,\n    PolarAreaExample: PolarAreaExample,\n    BubbleExample: BubbleExample,\n    ReactiveExample: ReactiveExample,\n    ReactivePropExample: ReactivePropExample,\n    ScatterExample: ScatterExample,\n    HorizontalBarExample: HorizontalBarExample\n  },\n  data: function data() {\n    return {\n      dataPoints: null,\n      height: 20\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setInterval(function () {\n      _this.fillData();\n    }, 2000);\n  },\n  methods: {\n    increaseHeight: function increaseHeight() {\n      this.height += 10;\n    },\n    getRandomInt: function getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    },\n    fillData: function fillData() {\n      this.dataPoints = {\n        labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [{\n          label: 'Data One',\n          backgroundColor: '#f87979',\n          data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\n        }]\n      };\n    }\n  },\n  computed: {\n    myStyles: function myStyles() {\n      return {\n        height: \"\".concat(this.height, \"px\"),\n        position: 'relative'\n      };\n    }\n  }\n};",null]}