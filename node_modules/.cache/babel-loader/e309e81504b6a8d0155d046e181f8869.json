{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\energyCode-master\\src\\api\\login\\permission.js","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\api\\login\\permission.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\code\\\\energyCode-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n// store/permission.js\nimport { asyncRouterMap, constantRouterMap } from '@/router';\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.role) {\n    return roles.some(function (role) {\n      return route.meta.role.indexOf(role) >= 0;\n    });\n  } else {\n    return true;\n  }\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve) {\n        var roles = data;\n        var accessedRouters = asyncRouterMap.filter(function (v) {\n          if (roles.indexOf('admin') >= 0) return true;\n\n          if (hasPermission(roles, v)) {\n            if (v.children && v.children.length > 0) {\n              v.children = v.children.filter(function (child) {\n                if (hasPermission(roles, child)) {\n                  return child;\n                }\n\n                return false;\n              });\n              return v;\n            } else {\n              return v;\n            }\n          }\n\n          return false;\n        });\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",{"version":3,"sources":["D:\\code\\energyCode-master\\src\\api\\login\\permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","roles","route","meta","role","some","indexOf","permission","state","routers","addRouters","mutations","SET_ROUTERS","concat","actions","GenerateRoutes","data","commit","resolve","accessedRouters","filter","v","children","length","child"],"mappings":";AAAA;AAEA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,UAAlD;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWC,IAA7B,EAAmC;AACjC,WAAOH,KAAK,CAACI,IAAN,CAAW,UAAAD,IAAI;AAAA,aAAIF,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBE,OAAhB,CAAwBF,IAAxB,KAAiC,CAArC;AAAA,KAAf,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,IAAMG,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEV,iBADJ;AAELW,IAAAA,UAAU,EAAE;AAFP,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACJ,KAAD,EAAQC,OAAR,EAAoB;AAC/BD,MAAAA,KAAK,CAACE,UAAN,GAAmBD,OAAnB;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgBV,iBAAiB,CAACc,MAAlB,CAAyBJ,OAAzB,CAAhB;AACD;AAJQ,GALM;AAWjBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,gCACoBC,IADpB,EAC0B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAC/B,aAAO,aAAY,UAAAC,OAAO,EAAI;AAC5B,YAAOjB,KAAK,GAAIe,IAAhB;AACA,YAAMG,eAAe,GAAGrB,cAAc,CAACsB,MAAf,CAAsB,UAAAC,CAAC,EAAI;AACjD,cAAIpB,KAAK,CAACK,OAAN,CAAc,OAAd,KAA0B,CAA9B,EAAiC,OAAO,IAAP;;AACjC,cAAIN,aAAa,CAACC,KAAD,EAAQoB,CAAR,CAAjB,EAA6B;AAC3B,gBAAIA,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWC,MAAX,GAAoB,CAAtC,EAAyC;AACvCF,cAAAA,CAAC,CAACC,QAAF,GAAaD,CAAC,CAACC,QAAF,CAAWF,MAAX,CAAkB,UAAAI,KAAK,EAAI;AACtC,oBAAIxB,aAAa,CAACC,KAAD,EAAQuB,KAAR,CAAjB,EAAiC;AAC/B,yBAAOA,KAAP;AACD;;AACD,uBAAO,KAAP;AACD,eALY,CAAb;AAMA,qBAAOH,CAAP;AACD,aARD,MAQO;AACL,qBAAOA,CAAP;AACD;AACF;;AACD,iBAAO,KAAP;AACD,SAhBuB,CAAxB;AAiBAJ,QAAAA,MAAM,CAAC,aAAD,EAAgBE,eAAhB,CAAN;AACAD,QAAAA,OAAO;AACR,OArBM,CAAP;AAsBD;AAxBM;AAXQ,CAAnB;AAuCA,eAAeX,UAAf","sourcesContent":["// store/permission.js\n\nimport { asyncRouterMap, constantRouterMap } from '@/router';\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.role) {\n    return roles.some(role => route.meta.role.indexOf(role) >= 0)\n  } else {\n    return true\n  }\n}\n\nconst permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: (state, routers) => {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes({ commit }, data) {\n      return new Promise(resolve => {\n        const  roles  = data;\n        const accessedRouters = asyncRouterMap.filter(v => {\n          if (roles.indexOf('admin') >= 0) return true;\n          if (hasPermission(roles, v)) {\n            if (v.children && v.children.length > 0) {\n              v.children = v.children.filter(child => {\n                if (hasPermission(roles, child)) {\n                  return child\n                }\n                return false;\n              });\n              return v\n            } else {\n              return v\n            }\n          }\n          return false;\n        });\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      })\n    }\n  }\n};\n\nexport default permission;\n\n"]}]}