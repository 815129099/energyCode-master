{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\energyCode-master\\src\\components\\power\\InstantPowerAnalyze.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\components\\power\\InstantPowerAnalyze.vue","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport API from \"@/api\";\nimport Vue from \"vue\";\nimport \"v-charts/lib/style.css\";\nimport 'echarts/lib/component/dataZoom';\nexport default {\n  data() {\n    this.dataZoom = [\n        {\n          type: 'slider',\n          start: 0,\n          end: 100\n        }\n      ]\n    this.markLine = {\n      data: [\n        {\n          name: \"平均线\",\n          type: \"average\"\n        }\n      ]\n    };\n    this.markPoint = {\n      data: [\n        {\n          name: \"最大值\",\n          type: \"max\"\n        },\n        {\n          name: \"最小值\",\n          type: \"min\"\n        }\n      ]\n    };\n    this.toolbox = {\n      feature: {\n        magicType: { type: [\"line\", \"bar\"] },\n        saveAsImage: {}\n      }\n    };\n    return {\n      beginTime: \"\",\n      dataType: \"I\",\n      chartData: {\n        columns: [],\n        rows: []\n      },\n      dataEmpty: true,\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 1100,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 0,\n      chartDataI: null,\n      chartDataU: null,\n      formLabelWidth: \"120px\",\n      //树状图列表\n      list: \"\",\n      //间隔时间类型\n      dateType: \"day\",\n      //图形类型\n      chartType: \"bar\",\n      //所选电表\n      key: \"\",\n      height: 20,\n      Title: \"Title\",\n      EStationName:\"\"\n    };\n  },\n  components: {},\n  created() {\n    this.loadMenu();\n  },\n  methods: {\n    //从服务器读取数据\n    selectMenu: function(key, keyPath, name) {\n      this.EStationName = keyPath[1].split(\"/\")[1];\n      console.log(keyPath.length);\n      if(keyPath.length<=2){\n        this.key = \"\";\n      }else{\n        this.key = keyPath[2].split(\"/\")[1];\n      }\n    },\n\n    //加载树状图\n    loadMenu: function() {\n      API.powerUtil\n        .getMenu()\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            this.list = data.data;\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    increaseHeight() {\n      this.height += 10;\n    },\n\n    fillData(data) {\n      this.chartDataI = {\n        columns: [\"Time\", \"Ia\", \"Ib\", \"Ic\"],\n        rows: data\n      };\n      this.chartDataU = {\n        columns: [\"Time\", \"Ua\", \"Ub\", \"Uc\"],\n        rows: data\n      };\n       if (data.length==0) {\n        this.dataEmpty = true;\n      }else{\n        this.dataEmpty = false;\n      }\n    },\n\n    getPowerData: function() {\n      if (this.key == null || this.key == \"\") {\n        this.$message(\"请选择电表！\");\n      } else if (this.beginTime == \"\") {\n        this.$message(\"请选择开始时间！\");\n      } else if (this.dataType == \"\") {\n        this.$message(\"请选择电流电压类型！\");\n      } else if (this.dateType == \"\") {\n        this.$message(\"请选择曲线类型\");\n      } else {\n        if (this.dateType == \"day\") {\n          this.Title = this.key + \"：日曲线\";\n        } else if (this.dateType == \"week\") {\n          this.Title = this.key + \"：周曲线\";\n        }\n        let params = {\n          estationName:this.EStationName,\n          emeterName: this.key,\n          beginTime: this.beginTime,\n          dateType: this.dateType,\n          pageNum: this.currentPage,\n          pageSize: this.pagesize\n        };\n        API.powerUtil\n          .getInstantPowerAnalyze(params)\n          .then(({ data }) => {\n            if (data.status == 0) {\n              this.tableData = data.data.page.list;\n              this.totalCount = data.data.page.total;\n              this.fillData(data.data.page.list);\n            } else {\n              this.$message(\"请求失败！\");\n            }\n          })\n          .catch(data => {\n            this.$message(\"请求失败ww！\");\n            console.log(data);\n          });\n      }\n    },\n\n    //多选响应\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function(row, event, column) {\n      this.highlightId = row.id;\n    },\n    exportData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      this.$message(\"待开发\");\n    },\n    callData() {\n      //window.location.href = \"http://localhost:8088/api/exportUser.do\";\n      //this.$message(\"待开发\");\n      API.userUtil\n        .getAllData()\n        .then(({ data }) => {\n          if (data.status == 0) {\n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function(val) {\n      this.pagesize = val;\n      this.getPowerData();\n    },\n\n    //页码变更\n    handleCurrentChange: function(val) {\n      this.currentPage = val;\n      this.getPowerData();\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: `${this.height}px`,\n        position: \"relative\"\n      };\n    }\n  }\n};\n",null]}