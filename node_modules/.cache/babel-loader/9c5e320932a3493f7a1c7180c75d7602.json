{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\user\\userUtil.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\user\\userUtil.js","mtime":1563867332339},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _JSON$stringify from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport request from '../utils/request';\nimport requestURL from '../utils/requestUrl';\nimport requestParam from '../utils/requestParam'; //get 查 、post 增加、delete删除、put修改\n// 获取用户列表\n\nexport function getData(params) {\n  return request({\n    method: 'post',\n    url: '/api/user/UserList.do',\n    //url:'http://10.30.100.110:8088/api/user/UserList.do',\n    // data: requestParam(params, 'post', false, 'json')\n    data: _JSON$stringify(params)\n  });\n} //修改用户\n\nexport function updateUser(params) {\n  return request({\n    method: 'put',\n    url: '/api/user/User.do',\n    //url:'http://10.30.100.110:8088/api/user/User.do',\n    // data: requestParam(params, 'post', false, 'json')\n    data: _JSON$stringify(params)\n  });\n} //删除用户\n\nexport function deleteUser(params) {\n  return request({\n    method: 'delete',\n    url: '/api/user/User.do',\n    // url:'http://10.30.100.110:8088/api/user/User.do',\n    // data: requestParam(params, 'post', false, 'json')\n    data: _JSON$stringify(params)\n  });\n} //增加用户\n\nexport function addUser(params) {\n  return request({\n    method: 'post',\n    url: '/api/user/User.do',\n    //url:'http://10.30.100.110:8088/api/user/User.do',\n    // data: requestParam(params, 'post', false, 'json')\n    data: _JSON$stringify(params)\n  });\n} // 获取用户列表\n\nexport function getRecord(params) {\n  return request({\n    method: 'post',\n    url: '/api/util/RecordList.do',\n    //url:'http://10.30.100.110:8088/api/util/RecordList.do',\n    data: _JSON$stringify(params)\n  });\n} // 获取用户上次登录IP和时间和近七日的访问记录\n\nexport function getTimeAndIp(params) {\n  return request({\n    method: 'POST',\n    url: '/api/util/getTimeAndIp.do',\n    //url:'http://10.30.100.110:8088/api/util/getTimeAndIp.do',\n    data: _JSON$stringify(params)\n  });\n} // 获取用户上次登录IP和时间和近七日的访问记录\n\nexport function getAllData() {\n  return request({\n    method: 'POST',\n    url: '/api/util/getAllData.do',\n    //url:'http://10.30.100.110:8088/api/util/getAllData.do',\n    data: requestParam()\n  });\n} // 对Date的扩展，将 Date 转化为指定格式的String\n// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，\n// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)\n// (new Date()).Format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423\n// (new Date()).Format(\"yyyy-M-d h:m:s.S\")      ==> 2006-7-2 8:9:4.18\n\nDate.prototype.Format = function (fmt) {\n  var o = {\n    \"M+\": this.getMonth() + 1,\n    //月份\n    \"d+\": this.getDate(),\n    //日\n    \"h+\": this.getHours(),\n    //小时\n    \"m+\": this.getMinutes(),\n    //分\n    \"s+\": this.getSeconds(),\n    //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3),\n    //季度\n    \"S\": this.getMilliseconds() //毫秒\n\n  };\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n  }\n\n  return fmt;\n};\n\nexport function formatTimeToStr(times, pattern) {\n  var d = new Date(times).Format(\"yyyy-MM-dd hh:mm:ss\");\n\n  if (pattern) {\n    d = new Date(times).Format(pattern);\n  }\n\n  return d.toLocaleString();\n}",{"version":3,"sources":["E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\user\\userUtil.js"],"names":["request","requestURL","requestParam","getData","params","method","url","data","updateUser","deleteUser","addUser","getRecord","getTimeAndIp","getAllData","Date","prototype","Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","formatTimeToStr","times","pattern","d","toLocaleString"],"mappings":"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","sourcesContent":["import request from '../utils/request'\r\nimport requestURL from '../utils/requestUrl'\r\nimport requestParam from '../utils/requestParam'\r\n//get 查 、post 增加、delete删除、put修改\r\n\r\n// 获取用户列表\r\nexport function getData(params) {\r\n  return request({\r\n    method: 'post',\r\n    url: '/api/user/UserList.do',\r\n    //url:'http://10.30.100.110:8088/api/user/UserList.do',\r\n   // data: requestParam(params, 'post', false, 'json')\r\n   data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n//修改用户\r\nexport function updateUser(params) {\r\n  return request({\r\n    method: 'put',\r\n    url: '/api/user/User.do',\r\n    //url:'http://10.30.100.110:8088/api/user/User.do',\r\n   // data: requestParam(params, 'post', false, 'json')\r\n   data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n//删除用户\r\nexport function deleteUser(params) {\r\n  return request({\r\n    method: 'delete',\r\n    url: '/api/user/User.do',\r\n    // url:'http://10.30.100.110:8088/api/user/User.do',\r\n   // data: requestParam(params, 'post', false, 'json')\r\n   data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n//增加用户\r\nexport function addUser(params) {\r\n  return request({\r\n    method: 'post',\r\n    url: '/api/user/User.do',\r\n   //url:'http://10.30.100.110:8088/api/user/User.do',\r\n   // data: requestParam(params, 'post', false, 'json')\r\n   data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n// 获取用户列表\r\nexport function getRecord(params) {\r\n  return request({\r\n    method: 'post',\r\n    url: '/api/util/RecordList.do',\r\n    //url:'http://10.30.100.110:8088/api/util/RecordList.do',\r\n    data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n// 获取用户上次登录IP和时间和近七日的访问记录\r\nexport function getTimeAndIp(params) {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/api/util/getTimeAndIp.do',\r\n    //url:'http://10.30.100.110:8088/api/util/getTimeAndIp.do',\r\n    data:JSON.stringify(params)\r\n  })\r\n}\r\n\r\n// 获取用户上次登录IP和时间和近七日的访问记录\r\nexport function getAllData() {\r\n  return request({\r\n    method: 'POST',\r\n    url: '/api/util/getAllData.do',\r\n    //url:'http://10.30.100.110:8088/api/util/getAllData.do',\r\n    data:requestParam()\r\n  })\r\n}\r\n\r\n// 对Date的扩展，将 Date 转化为指定格式的String\r\n// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，\r\n// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)\r\n// (new Date()).Format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423\r\n// (new Date()).Format(\"yyyy-M-d h:m:s.S\")      ==> 2006-7-2 8:9:4.18\r\nDate.prototype.Format = function (fmt) {\r\n  var o = {\r\n      \"M+\": this.getMonth() + 1,                 //月份\r\n      \"d+\": this.getDate(),                    //日\r\n      \"h+\": this.getHours(),                   //小时\r\n      \"m+\": this.getMinutes(),                 //分\r\n      \"s+\": this.getSeconds(),                 //秒\r\n      \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n      \"S\": this.getMilliseconds()             //毫秒\r\n  };\r\n  if (/(y+)/.test(fmt))\r\n      fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n  for (var k in o)\r\n      if (new RegExp(\"(\" + k + \")\").test(fmt))\r\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n  return fmt;\r\n}   \r\n\r\nexport function formatTimeToStr(times, pattern) {\r\n  var d = new Date(times).Format(\"yyyy-MM-dd hh:mm:ss\");\r\n  if (pattern) {\r\n      d = new Date(times).Format(pattern);\r\n  }\r\n  return d.toLocaleString();\r\n}\r\n"]}]}