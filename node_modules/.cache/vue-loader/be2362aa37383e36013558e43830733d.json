{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\power\\PowerByRatio.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\power\\PowerByRatio.vue","mtime":1564470505857},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport API from \"@/api\";\r\nimport Vue from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      navselected:\"\",\r\n      beginTime: \"\",\r\n      endTime: \"\",\r\n      powerType: \"ZxygZ\",\r\n      Source: \"所有数据来源\",\r\n      //表格当前页数据\r\n      tableData: [],\r\n      //多选数组\r\n      multipleSelection: [],\r\n      //搜索条件\r\n      criteria: \"\",\r\n      //下拉菜单选项\r\n      select: \"\",\r\n      //默认每页数据量\r\n      pagesize: 50000000,\r\n      //默认高亮行数据id\r\n      highlightId: -1,\r\n      //当前页码\r\n      currentPage: 1,\r\n      //查询的页码\r\n      start: 1,\r\n      //默认数据总数\r\n      totalCount: 0,\r\n      formLabelWidth: \"120px\",\r\n      list: \"\",\r\n      key: \"\",\r\n      EStationName:\"\",\r\n      spanArr:[],//合并电表\r\n      spanArr1:[],//合并部门\r\n      position:0,//在data里面定义\r\n      position1:0,//在data里面定义\r\n    };\r\n  },\r\n  created() {\r\n    this.loadMenu();\r\n  },\r\n  methods: {\r\n    //获取所选节点\r\n    selectMenu: function(key, keyPath, name) {\r\n      this.EStationName = keyPath[1].split(\"/\")[1];\r\n      if(keyPath.length<=2){\r\n        this.key = \"\";\r\n      }else{\r\n        this.key = keyPath[2].split(\"/\")[1];\r\n      }\r\n      console.log(key+\"---\"+keyPath+'---'+name);\r\n    },\r\n    handleOpen: function(key, keyPath, name) {\r\n      this.EStationName = key.split(\"/\")[1];\r\n      this.key = \"\";\r\n      console.log(this.EStationName);\r\n      console.log(\"open----\"+key+\",,,,\"+keyPath+',,,,,'+name);\r\n      this.navselected=\"/\";\r\n      console.log(this.navselected);\r\n    },\r\n    handleClose: function(key, keyPath, name) {\r\n      this.EStationName = key.split(\"/\")[1];\r\n      this.key = \"\";\r\n      console.log(this.EStationName);\r\n      this.navselected=\"/\";\r\n      console.log(\"close----\"+key+\",,,,\"+keyPath+',,,,,'+name);\r\n      console.log(this.navselected);\r\n    },\r\n\r\n    //加载树状图\r\n    loadMenu: function() {\r\n      API.powerUtil\r\n        .getMenu()\r\n        .then(({ data }) => {\r\n          console.log(data.data);\r\n          if (data.status == 0) {\r\n            this.list = data.data;\r\n          } else {\r\n            //this.$Message.error(data.msg);\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n    },\r\n    //从服务器读取数据\r\n    getPowerData: function() {\r\n       if(this.beginTime==\"\"){\r\n        this.$message(\"请选择开始时间！\");\r\n      }else if(this.endTime==\"\"){\r\n        this.$message(\"请选择结束时间！\");\r\n      }else if(this.Source==\"\"){\r\n        this.$message(\"请选择数据来源！\");\r\n      }else if(this.powerType==\"\"){\r\n        this.$message(\"请选择功率类型！\");\r\n      }else{\r\n      let params = {\r\n        estationName:this.EStationName,\r\n        emeterName: this.key,\r\n        beginTime: this.beginTime,\r\n        endTime: this.endTime,\r\n        source: this.Source,\r\n        powerType: this.powerType,\r\n        pageNum: this.currentPage,\r\n        pageSize: this.pagesize\r\n      };\r\n      API.powerUtil\r\n        .getPowerByRatio(params)\r\n        .then(({ data }) => {\r\n          console.log(data.data);\r\n          if (data.status == 0) {\r\n            if(data.data.tableData==null){\r\n              this.tableData = null;\r\n              this.totalCount = 0;\r\n            }else{\r\n            this.tableData = data.data.tableData.list;\r\n            this.totalCount = data.data.tableData.total;\r\n            this.rowspan();\r\n            }\r\n            \r\n          } else {\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n      }\r\n    },\r\n\r\n    //多选响应\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n\r\n    //点击行响应\r\n    handleclick: function(row, event, column) {\r\n      this.highlightId = row.id;\r\n    },\r\n\r\n    //搜索\r\n    search: function() {\r\n      console.log(this.select);\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n    add: function() {\r\n      this.addFormVisible = true;\r\n    },\r\n    exportPowerTotal() {\r\n      if(this.EStationName==null || this.EStationName ==\"\"){\r\n         this.$message(\"请选择电表！\");\r\n      }else if(this.beginTime==\"\"){\r\n        this.$message(\"请选择开始时间！\");\r\n      }else if(this.endTime==\"\"){\r\n        this.$message(\"请选择结束时间！\");\r\n      }else if(this.powerType==\"\"){\r\n        this.$message(\"请选择功率类型！\");\r\n      }else{\r\n          //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\r\n         window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\r\n      }\r\n      \r\n     // this.$message(\"待开发\");\r\n    },\r\n    exportAllPowerTotal() {\r\n      if(this.beginTime==\"\"){\r\n        this.$message(\"请选择开始时间！\");\r\n      }else if(this.endTime==\"\"){\r\n        this.$message(\"请选择结束时间！\");\r\n      }else if(this.powerType==\"\"){\r\n        this.$message(\"请选择功率类型！\");\r\n      }else{\r\n        //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\r\n        window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\r\n      }\r\n    },\r\n\r\n    //改变当前点击的行的class，高亮当前行\r\n    tableRowClassName: function(row, index) {\r\n      if (row.id == this.highlightId) {\r\n        return \"info-row\";\r\n      }\r\n    },\r\n\r\n    //每页显示数据量变更\r\n    handleSizeChange: function(val) {\r\n      this.pagesize = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n\r\n    //页码变更\r\n    handleCurrentChange: function(val) {\r\n      this.currentPage = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n     rowspan:function() {\r\n        this.spanArr = [];//在data里面定义\r\n        this.position = 0; //在data里面定义\r\n        this.tableData.forEach((item,index) => {\r\n          if( index === 0){\r\n            this.spanArr.push(1);\r\n            this.spanArr1.push(1);\r\n            this.position = 0;\r\n            this.position1 = 0;\r\n            //item.sequence=index+1;//设置序号\r\n          }else{\r\n            if(this.tableData[index].EMeterID === this.tableData[index-1].EMeterID ){\r\n              this.spanArr[this.position] += 1;//连续有几行项目名名称相同\r\n              this.spanArr.push(0); // 名称相同后往数组里面加一项0\r\n              //当项目名称相同时，设置当前序号和前一个相同\r\n             // this.tableData1[index].sequence = this.tableData1[index-1].sequence;\r\n            if(this.tableData[index].EDepartmentName === this.tableData[index-1].EDepartmentName ){\r\n              this.spanArr1[this.position1] += 1;//连续有几行项目名名称相同\r\n              this.spanArr1.push(0); // 名称相同后往数组里面加一项0\r\n            }else{\r\n              this.spanArr1.push(1);\r\n              this.position1 = index;\r\n            }\r\n            }else{\r\n              this.spanArr.push(1);\r\n              this.spanArr1.push(1);\r\n              this.position = index;\r\n              this.position1 = index;\r\n              //当项目名称不同时，将当前序号设置为前一个序号+1\r\n              //this.tableData1[index].sequence = this.tableData1[index-1].sequence+1;\r\n            }\r\n          }\r\n        })\r\n      },\r\n\r\n\r\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {  //表格合并行\r\n      console.log(this.spanArr);\r\n        if(columnIndex === 0){  //序号列也进行合并(第一列)\r\n          //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\r\n          //例如:[1,1,2,0,2,0]\r\n          //1  代表的没有连续的相同的\r\n          //2  代表连续的两个相同\r\n          //0  代表是和上一条内容相同\r\n          const _row = this.spanArr[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n          return {\r\n            rowspan: _row, //行\r\n            colspan: _col  //列\r\n          }\r\n\r\n        }\r\n        if(columnIndex === 1){ //项目列也进行合并(第二列)\r\n          const _row = this.spanArr[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n          return {\r\n            rowspan: _row,\r\n            colspan: _col\r\n          }\r\n        }\r\n        if(columnIndex === 2){ //项目列也进行合并(第二列)\r\n          const _row = this.spanArr1[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n          return {\r\n            rowspan: _row,\r\n            colspan: _col\r\n          }\r\n        }\r\n        if(columnIndex === 3){ //项目列也进行合并(第二列)\r\n          const _row = this.spanArr1[rowIndex];\r\n          const _col = _row>0 ? 1 : 0;\r\n          return {\r\n            rowspan: _row,\r\n            colspan: _col\r\n          }\r\n        }\r\n      },\r\n  }\r\n};\r\n",null]}