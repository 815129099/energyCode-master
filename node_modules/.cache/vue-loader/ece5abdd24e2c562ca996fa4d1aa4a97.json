{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue","mtime":1563757932601},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import {mapGetters} from 'vuex'\nimport API from '@/api';\n  export default {\n    data() {\n      return {\n        totalCount: 0, //分页组件--数据总条数\n        list: [],//表格的数据\n        listLoading: false,//数据加载等待动画\n        listQuery: {\n          pageNum: 1,//页码\n          pageRow: 50,//每页条数\n        },\n        roles: [],//角色列表\n        dialogStatus: 'create',\n        dialogFormVisible: false,\n        textMap: {\n          update: '编辑',\n          create: '新建用户'\n        },\n        tempUser: {\n          username: '',\n          password: '',\n          nickname: '',\n          roleId: '',\n          userId: '',\n          phone:'',\n          email:''\n        },\n        rules: {\n                    username: [\n                        { required: true, message: '请填写工号', trigger: 'blur' },\n                        { min: 7,max: 7, message: '请填写7个字符的工号', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tnickname: [\n                        { required: true, message: '请填写姓名', trigger: 'blur' },\n                        { min: 2,max: 4, message: '请填写2-4个字符的姓名', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tpassword: [\n                        { required: true, message: '请填写密码', trigger: 'blur' },\n                        { min: 6,max: 10, message: '请填写6-10个字符的密码', trigger: 'blur' }\n                    ],\n          roleId: [\n                        { required: true, message: '请选择角色', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tphone: [\n                          { \n                             validator: (rule,value,callback) => {\n                                let vdt = API.validate.VDATA(value,{\"required\" : { msg : \"请输入手机号\"}, \"mphone\" : {msg:\"请输入有效的手机号\"}})\n                               if (!vdt.result) {\n                                    callback(new Error(vdt.msg))\n                                }else{\n                                    callback();\n                                }\n                           },\n                             trigger: 'blur' \n                           }\n\t\t\t\t\t],\n\t\t\t\t\temail: [\n                          { \n                             validator: (rule,value,callback) => {\n                                let vdt = API.validate.VDATA(value,{\"required\" : { msg : \"请输入邮箱\"}, \"email\" : {msg:\"请输入有效的邮箱\"}})\n                               if (!vdt.result) {\n                                    callback(new Error(vdt.msg))\n                                }else{\n                                    callback();\n                                }\n                           },\n                             trigger: 'blur' \n                           }\n\t\t\t\t\t],\n                }\n      }\n    },\n    created() {\n      this.getList();\n      if (this.hasPerm('user:add') || this.hasPerm('user:update')) {\n        this.getAllRoles();\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'userId'\n      ])\n    },\n    methods: {\n      getAllRoles() {\n        this.api({\n          url: \"/api/user/getAllRoles\",\n          method: \"get\"\n        }).then(data => {\n          this.roles = data.list;\n        })\n      },\n      getList() {\n        //查询列表\n        this.listLoading = true;\n        this.api({\n          url: \"/api/user/list\",\n          method: \"get\",\n          params: this.listQuery\n        }).then(data => {\n          this.listLoading = false;\n          this.list = data.list;\n          this.totalCount = data.totalCount;\n        })\n      },\n      handleSizeChange(val) {\n        //改变每页数量\n        this.listQuery.pageRow = val\n        this.handleFilter();\n      },\n      handleCurrentChange(val) {\n        //改变页码\n        this.listQuery.pageNum = val\n        this.getList();\n      },\n      handleFilter() {\n        //查询事件\n        this.listQuery.pageNum = 1\n        this.getList()\n      },\n      getIndex($index) {\n        //表格序号\n        return (this.listQuery.pageNum - 1) * this.listQuery.pageRow + $index + 1\n      },\n      showCreate() {\n        //显示新增对话框\n        this.tempUser.username = \"\";\n        this.tempUser.password = \"\";\n        this.tempUser.nickname = \"\";\n        this.tempUser.roleId = \"\";\n        this.tempUser.userId = \"\";\n        this.dialogStatus = \"create\"\n        this.dialogFormVisible = true\n      },\n      showUpdate($index) {\n        let user = this.list[$index];\n        this.tempUser.username = user.username;\n        this.tempUser.nickname = user.nickname;\n        this.tempUser.roleId = user.roleId;\n        this.tempUser.userId = user.userId;\n        this.tempUser.deleteStatus = '1';\n        this.tempUser.password = '';\n        this.dialogStatus = \"update\"\n        this.dialogFormVisible = true\n      },\n      createUser(tempUser) {\n         this.$refs[tempUser].validate((valid) => {\n            if (valid) {              \n              //添加新用户\n        this.api({\n          url: \"/api/user/addUser\",\n          method: \"post\",\n          data: this.tempUser\n        }).then(() => {\n          this.getList();\n          this.dialogFormVisible = false\n        })\n            } else {\n                        return false;\n                }\n                }); \n      },\n\n      updateUser() {\n        //修改用户信息\n        let _vue = this;\n        this.api({\n          url: \"/api/user/updateUser\",\n          method: \"post\",\n          data: this.tempUser\n        }).then(() => {\n          let msg = \"修改成功\";\n          this.dialogFormVisible = false\n          if (this.userId === this.tempUser.userId) {\n            msg = '修改成功,部分信息重新登录后生效'\n          }\n          this.$message({\n            message: msg,\n            type: 'success',\n            duration: 1 * 1000,\n            onClose: () => {\n              _vue.getList();\n            }\n          })\n        })\n      },\n      removeUser($index) {\n        let _vue = this;\n        this.$confirm('确定删除此用户?', '提示', {\n          confirmButtonText: '确定',\n          showCancelButton: false,\n          type: 'warning'\n        }).then(() => {\n          let user = _vue.list[$index];\n          user.deleteStatus = '2';\n          _vue.api({\n            url: \"/api/user/updateUser\",\n            method: \"post\",\n            data: user\n          }).then(() => {\n            _vue.getList()\n          }).catch(() => {\n            _vue.$message.error(\"删除失败\")\n          })\n        })\n      },\n    }\n  }\n",null]}