{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Charge.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Charge.vue","mtime":1559119599905},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport API from \"@/api\";\r\nimport Vue from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //表格当前页数据\r\n      tableData: [],\r\n      //多选数组\r\n      multipleSelection: [],\r\n      //搜索条件\r\n      criteria: \"\",\r\n      //下拉菜单选项\r\n      select: \"\",\r\n      //默认每页数据量\r\n      pagesize: 10,\r\n      //默认高亮行数据id\r\n      highlightId: -1,\r\n      //当前页码\r\n      currentPage: 1,\r\n      //查询的页码\r\n      start: 1,\r\n      //默认数据总数\r\n      totalCount: 1000,\r\n      addUserForm: {\r\n        PeakTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n        ],\r\n        FlatTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n        ],\r\n        RavineTimes: [\r\n          {\r\n            value: \"\"\r\n          }\r\n\t\t],\r\n\t\tjPeakCharge:'',\r\n\t\ttPeakCharge:'',\r\n\t\thPeakCharge:'',\r\n\t\tjFlatCharge:'',\r\n\t\ttFlatCharge:'',\r\n\t\thFlatCharge:'',\r\n        hRavineCharge: '',\r\n        jRavineCharge: '',\r\n        tRavineCharge: '',\r\n        status: \"0\"\r\n      },\r\n      dialogFormVisible: false,\r\n      addFormVisible: false,\r\n      formLabelWidth: \"120px\"\r\n    };\r\n  },\r\n  created() {\r\n    this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n  },\r\n  methods: {\r\n    //从服务器读取数据\r\n    loadData: function(criteria, pageNum, pageSize) {\r\n      let params = {\r\n        parameter: criteria,\r\n        pageNum: pageNum,\r\n        pageSize: pageSize\r\n      };\r\n      API.chargeUtil\r\n        .ChargeList(params)\r\n        .then(({ data }) => {\r\n          console.log(data);\r\n          if (data.status == 0) {\r\n            this.tableData = data.data.userData;\r\n            this.totalCount = data.data.number;\r\n          } else {\r\n            //this.$Message.error(data.msg);\r\n            this.$message(\"请求失败！\");\r\n          }\r\n        })\r\n        .catch(data => {\r\n          this.$message(\"请求失败ww！\");\r\n          console.log(data);\r\n        });\r\n    },\r\n\r\n    //添加\r\n    addSubmitForm(addUserForm) {\r\n      var peakTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.PeakTimes.length; i++) {\r\n        peakTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.PeakTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.PeakTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(peakTime);\r\n      var flatTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.FlatTimes.length; i++) {\r\n        flatTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.FlatTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.FlatTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(flatTime);\r\n      var ravineTime = \"\";\r\n      for (var i = 0; i < this.addUserForm.RavineTimes.length; i++) {\r\n        ravineTime +=\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.RavineTimes[i].value[0],\r\n            \"hh:mm\"\r\n          ) +\r\n          \"-\" +\r\n          API.userUtil.formatTimeToStr(\r\n            this.addUserForm.RavineTimes[i].value[1],\r\n            \"hh:mm\"\r\n          ) +\r\n          \",\";\r\n      }\r\n      console.log(ravineTime);\r\n      let params = {\r\n        peakTime: peakTime,\r\n\t\tflatTime: flatTime,\r\n\t\travineTime: ravineTime,\r\n\t\tjPeakCharge: this.addUserForm.jPeakCharge,\r\n\t\ttPeakCharge:this.addUserForm.tPeakCharge,\r\n\t\thPeakCharge:this.addUserForm.hPeakCharge,\r\n\t\tjFlatCharge:this.addUserForm.jFlatCharge,\r\n\t\ttFlatCharge:this.addUserForm.tFlatCharge,\r\n\t\thFlatCharge:this.addUserForm.hFlatCharge,\r\n        hRavineCharge: this.addUserForm.hRavineCharge,\r\n        jRavineCharge: this.addUserForm.jRavineCharge,\r\n        tRavineCharge: this.addUserForm.tRavineCharge,\r\n        status : this.addUserForm.status\r\n      };\r\n      this.$refs[addUserForm].validate(valid => {\r\n\t\t  console.log(this.addUserForm.status);\r\n        if (valid) {\r\n          API.chargeUtil\r\n            .addCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.addFormVisible = false;\r\n                this.$message(\"添加成功!\");\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message(\"请求失败！\");\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n              console.log(data);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //添加峰时刻\r\n    addPeak() {\r\n      this.addUserForm.PeakTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removePeak(item) {\r\n      var index = this.addUserForm.PeakTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.PeakTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //添加平时刻\r\n    addFlat() {\r\n      this.addUserForm.FlatTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removeFlat(item) {\r\n      var index = this.addUserForm.FlatTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.FlatTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //添加谷时刻\r\n    addRavine() {\r\n      this.addUserForm.RavineTimes.push({\r\n        value: \"\",\r\n        key: Date.now()\r\n      });\r\n    },\r\n    removeRavine(item) {\r\n      var index = this.addUserForm.RavineTimes.indexOf(item);\r\n      if (index !== -1) {\r\n        this.addUserForm.RavineTimes.splice(index, 1);\r\n      }\r\n    },\r\n    //多选响应\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n\r\n    //点击行响应\r\n    handleclick: function(row, event, column) {\r\n      this.highlightId = row.id;\r\n    },\r\n\r\n    //编辑\r\n    handleEdit: function(index, row) {\r\n        let params = { id: row.id };\r\n      this.$confirm(\r\n        \"是否将本条设为默认?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }\r\n      )\r\n        .then(() => {\r\n          API.chargeUtil\r\n            .editCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.$message({ type: \"success\", message: \"修改成功!\" });\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message({ type: \"info\", message: \"修改失败\" });\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"修改失败！\");\r\n            });\r\n          this.$message({ type: \"success\", message: \"修改成功!\" });\r\n        })\r\n        .catch(() => {\r\n          this.$message({ type: \"info\", message: \"已取消修改\" });\r\n        });\r\n    },\r\n\r\n    //修改\r\n    editSubmitForm(editUserForm) {\r\n      let params = {\r\n        geNumber: this.editUserForm.geNumber,\r\n        userState: this.editUserForm.userState\r\n      };\r\n      this.$refs[editUserForm].validate(valid => {\r\n        if (valid) {\r\n          API.userUtil\r\n            .updateUser(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.dialogFormVisible = false;\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message(\"请求失败！\");\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n              console.log(data);\r\n            });\r\n        } else {\r\n          this.$message.error(\"请求失败！\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    //单行删除\r\n    handleDelete: function(index, row) {\r\n      let params = { id: row.id };\r\n      this.$confirm(\r\n        \"此操作将永久删除“\" + row.id + \"”, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }\r\n      )\r\n        .then(() => {\r\n          API.chargeUtil\r\n            .deleteCharge(params)\r\n            .then(({ data }) => {\r\n              if (data.data == true) {\r\n                this.$message({ type: \"success\", message: \"删除成功!\" });\r\n                this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n              } else {\r\n                this.$message({ type: \"info\", message: \"删除失败\" });\r\n              }\r\n            })\r\n            .catch(data => {\r\n              this.$message(\"请求失败！\");\r\n            });\r\n          this.$message({ type: \"success\", message: \"删除成功!\" });\r\n        })\r\n        .catch(() => {\r\n          this.$message({ type: \"info\", message: \"已取消删除\" });\r\n        });\r\n    },\r\n\r\n    //搜索\r\n    search: function() {\r\n      console.log(this.select);\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n    add: function() {\r\n      this.addFormVisible = true;\r\n    },\r\n    exportUser() {\r\n      window.location.href = \"http://localhost:8088/api/exportUser.do\";\r\n    },\r\n    /*\r\n\t\t        //多项删除\r\n\t\t        deletenames: function(){\r\n\t\t        \tif(this.multipleSelection.length==0)\r\n\t\t        \t\treturn;\r\n\t\t        \tvar array = [];\r\n\t\t        \tthis.multipleSelection.forEach((item) = > {\r\n\t\t        \t\tarray.push(item.id);\r\n\t\t\t        })\r\n\t\t\t\t\tthis.$http.post('../delete',{\"array\":array},{emulateJSON: true}).then(function(res){\r\n\t\t\t\t\t\tthis.loadData(this.criteria, this.currentPage, this.pagesize);\r\n\t\t            },function(){\r\n\t\t                console.log('failed');\r\n\t\t            });\r\n\t\t        },\r\n\t\t      */\r\n    //改变当前点击的行的class，高亮当前行\r\n    tableRowClassName: function(row, index) {\r\n      if (row.id == this.highlightId) {\r\n        return \"info-row\";\r\n      }\r\n    },\r\n\r\n    //每页显示数据量变更\r\n    handleSizeChange: function(val) {\r\n      this.pagesize = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    },\r\n\r\n    //页码变更\r\n    handleCurrentChange: function(val) {\r\n      this.currentPage = val;\r\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\r\n    }\r\n  }\r\n};\r\n",null]}