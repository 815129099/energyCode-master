{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\role.vue","mtime":1563503996015},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      list: [], //表格的数据\n      allPermission: [],\n      listLoading: false, //数据加载等待动画\n      dialogStatus: \"create\",\n      dialogFormVisible: false,\n      textMap: {\n        update: \"编辑\",\n        create: \"新建角色\"\n      },\n      tempRole: {\n        roleName: \"\",\n        roleId: \"\",\n        permissions: []\n      },\n      adminName: \"管理员\"\n    };\n  },\n  created() {\n    this.getList();\n    this.getAllPermisson();\n  },\n  methods: {\n    getAllPermisson() {\n      //查询所有权限\n      this.api({\n        url: \"/api/user/listAllPermission\",\n        method: \"get\"\n      }).then(data => {\n        this.allPermission = data.list;\n      });\n    },\n    getList() {\n      //查询列表\n      this.listLoading = true;\n      this.api({\n        url: \"/api/user/listRole\",\n        method: \"get\"\n      }).then(data => {\n        this.listLoading = false;\n        this.list = data.list;\n      });\n    },\n    getIndex($index) {\n      //表格序号\n      return $index + 1;\n    },\n    showCreate() {\n      //显示新增对话框\n      this.tempRole.roleName = \"\";\n      this.tempRole.roleId = \"\";\n      this.tempRole.permissions = [];\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    showUpdate($index) {\n      console.log($index);\n      console.log(this.list);\n      let role = this.list[$index];\n      console.log(role);\n      this.tempRole.roleName = role.roleName;\n      this.tempRole.roleId = role.roleId;\n      this.tempRole.permissions = [];\n      for (let i = 0; i < role.menus.length; i++) {\n        let perm = role.menus[i].permissions;\n        for (let j = 0; j < perm.length; j++) {\n          this.tempRole.permissions.push(perm[j].permissionId);\n        }\n      }\n      console.log(this.tempRole);\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n    },\n    createRole() {\n      if (!this.checkRoleNameUnique()) {\n        return;\n      }\n      if (!this.checkPermissionNum()) {\n        return;\n      }\n      //添加新角色\n      this.api({\n        url: \"/api/user/addRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(() => {\n        this.getList();\n        this.dialogFormVisible = false;\n      });\n    },\n    updateRole() {\n      if (!this.checkRoleNameUnique(this.tempRole.roleId)) {\n        return;\n      }\n      if (!this.checkPermissionNum()) {\n        return;\n      }\n      //修改角色\n      this.api({\n        url: \"/api/user/updateRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(() => {\n        this.getList();\n        this.dialogFormVisible = false;\n      });\n    },\n    checkPermissionNum() {\n      //校验至少有一种权限\n      if (this.tempRole.permissions.length === 0) {\n        this.$message.error(\"请至少选择一种权限\");\n        return false;\n      }\n      return true;\n    },\n    checkRoleNameUnique(roleId) {\n      //校验名称重复\n      let roleName = this.tempRole.roleName;\n      if (!roleName) {\n        this.$message.error(\"请填写角色名称\");\n        return false;\n      }\n      let roles = this.list;\n      let result = true;\n      for (let j = 0; j < roles.length; j++) {\n        if (\n          roles[j].roleName === roleName &&\n          (!roleId || roles[j].roleId !== roleId)\n        ) {\n          this.$message.error(\"角色名称已存在\");\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    removeRole($index) {\n      let _vue = this;\n      this.$confirm(\"确定删除此角色?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        showCancelButton: false,\n        type: \"warning\"\n      }).then(() => {\n        let role = _vue.list[$index];\n        _vue\n          .api({\n            url: \"/api/user/deleteRole\",\n            method: \"post\",\n            data: {\n              roleId: role.roleId\n            }\n          })\n          .then(() => {\n            _vue.getList();\n          })\n          .catch(e => {});\n      });\n    },\n    isMenuNone(_index) {\n      //判断本级菜单内的权限是否一个都没选\n      let menu = this.allPermission[_index].permissions;\n      let result = true;\n      for (let j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) > -1) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    isMenuAll(_index) {\n      //判断本级菜单内的权限是否全选了\n      let menu = this.allPermission[_index].permissions;\n      let result = true;\n      for (let j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) < 0) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    checkAll(_index) {\n      //点击菜单   相当于全选按钮\n      let v = this;\n      if (v.isMenuAll(_index)) {\n        //如果已经全选了,则全部取消\n        v.noPerm(_index);\n      } else {\n        //如果尚未全选,则全选\n        v.allPerm(_index);\n      }\n    },\n    allPerm(_index) {\n      //全部选中\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        this.addUnique(menu[j].id, this.tempRole.permissions);\n      }\n    },\n    noPerm(_index) {\n      //全部取消选中\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        let idIndex = this.tempRole.permissions.indexOf(menu[j].id);\n        if (idIndex > -1) {\n          this.tempRole.permissions.splice(idIndex, 1);\n        }\n      }\n    },\n    addUnique(val, arr) {\n      //数组内防重复地添加元素\n      let _index = arr.indexOf(val);\n      if (_index < 0) {\n        arr.push(val);\n      }\n    },\n    checkRequired(_perm, _index) {\n      //本方法会在勾选状态改变之后触发\n      let permId = _perm.id;\n      if (this.tempRole.permissions.indexOf(permId) > -1) {\n        //选中事件\n        //如果之前未勾选本权限,现在勾选完之后,tempRole里就会包含本id\n        //那么就要将必选的权限勾上\n        this.makeReuqiredPermissionChecked(_index);\n      } else {\n        //取消选中事件\n        if (_perm.requiredPerm === 1) {\n          //如果是必勾权限,就把本菜单的权限全部移出\n          //(其实也可以提示用户本权限是菜单里的必选,请先取消勾选另外几个权限,交互太麻烦,此处就直接全部取消选中了)\n          this.noPerm(_index);\n        }\n      }\n    },\n    makeReuqiredPermissionChecked(_index) {\n      //将本菜单必选的权限勾上\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        let perm = menu[j];\n        if (perm.requiredPerm === 1) {\n          //找到本菜单的必选权限,将其勾上\n          this.addUnique(perm.id, this.tempRole.permissions);\n        }\n      }\n    }\n  }\n};\n",null]}