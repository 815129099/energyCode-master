{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\energyCode-master\\src\\components\\page\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\components\\page\\User.vue","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport API from '@/api';\nimport Vue from 'vue';\nexport default {\n  data() {\n    return {\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //搜索条件\n      criteria: '',\n      //下拉菜单选项\n      select: '',\n      //默认每页数据量\n      pagesize: 10,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 1000,\n      roles: [],//角色列表\n      editUserForm: {\n        geNumber: '',\n        userState: '',\n        roleId:'',\n        geName:''\n      },\n      addUserForm: {\n        geNumber: '',\n        geName: '',\n        userState: '',\n        roleId: '',\n        phone: '',\n        email: '',\n        password: ''\n      },\n      dialogFormVisible: false,\n      addFormVisible: false,\n      formLabelWidth: '120px',\n      rules: {\n        geNumber: [\n          { required: true, message: '请填写工号', trigger: 'blur' },\n          { min: 7, max: 7, message: '请填写7个字符的工号', trigger: 'blur' }\n        ],\n        geName: [\n          { required: true, message: '请填写姓名', trigger: 'blur' },\n          { min: 2, max: 4, message: '请填写2-4个字符的姓名', trigger: 'blur' }\n        ],\n        roleId: [\n          { required: true, message: '请选择角色', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请填写密码', trigger: 'blur' },\n          { min: 6, max: 10, message: '请填写6-10个字符的密码', trigger: 'blur' }\n        ],\n        userState: [\n          { required: true, message: '请选择状态', trigger: 'blur' }\n        ],\n        phone: [\n          {\n            validator: (rule, value, callback) => {\n              let vdt = API.validate.VDATA(value, { \"required\": { msg: \"请输入手机号\" }, \"mphone\": { msg: \"请输入有效的手机号\" } })\n              if (!vdt.result) {\n                callback(new Error(vdt.msg))\n              } else {\n                callback();\n              }\n            },\n            trigger: 'blur'\n          }\n        ],\n        email: [\n          {\n            validator: (rule, value, callback) => {\n              let vdt = API.validate.VDATA(value, { \"required\": { msg: \"请输入邮箱\" }, \"email\": { msg: \"请输入有效的邮箱\" } })\n              if (!vdt.result) {\n                callback(new Error(vdt.msg))\n              } else {\n                callback();\n              }\n            },\n            trigger: 'blur'\n          }\n        ],\n      }\n    }\n  },\n  created() {\n    this.loadData(this.criteria, this.currentPage, this.pagesize);\n    if (this.hasPerm('user:add') || this.hasPerm('user:update')) {\n      this.getAllRoles();\n    }\n  },\n  methods: {\n    //从服务器读取数据\n    loadData: function (criteria, pageNum, pageSize) {\n      let params = {\n        'parameter': criteria,\n        'pageNum': pageNum,\n        'pageSize': pageSize\n      };\n      API.userUtil.getData(params).then(({ data }) => {\n        console.log(data);\n        if (data.status == 0) {\n          this.tableData = data.data.userData;\n          this.totalCount = data.data.number;\n        } else {\n          //this.$Message.error(data.msg);\n          this.$message(\"请求失败！\");\n        }\n      }).catch((data) => {\n        this.$message(\"请求失败ww！\");\n        console.log(data);\n      });\n    },\n    getAllRoles() {\n      this.api({\n        url: \"/api/user/getAllRoles\",\n        method: \"get\"\n      }).then(data => {\n        this.roles = data.list;\n      })\n    },\n    //多选响应\n    handleSelectionChange: function (val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function (row, event, column) {\n      this.highlightId = row.id;\n    },\n\n    //编辑\n    handleEdit: function (index, row) {\n      this.editUserForm.geNumber = row.geNumber;\n      this.editUserForm.userState = row.userState;\n      this.editUserForm.geName = row.geName;\n      this.dialogFormVisible = true;\n    },\n\n    //修改\n    editSubmitForm(editUserForm) {\n      let params = {\n        'geNumber': this.editUserForm.geNumber,\n        'userState': this.editUserForm.userState,\n        'geName': this.editUserForm.geName,\n        'roleId': this.editUserForm.roleId\n      };\n      this.$refs[editUserForm].validate((valid) => {\n        if (valid) {\n          API.userUtil.updateUser(params).then(({ data }) => {\n            if (data.data == true) {\n              this.dialogFormVisible = false;\n              this.loadData(this.criteria, this.currentPage, this.pagesize);\n              //this.editUserForm.resetFields();\n              this.$message(\"修改成功！\");\n              this.$refs['editUserForm'].resetFields();\n            } else {\n              this.$message(\"请求失败！\");\n              this.$refs['editUserForm'].resetFields();\n            }\n          }).catch((data) => {\n            this.$message(\"请求失败！\");\n            this.$refs['editUserForm'].resetFields();\n            console.log(data);\n          });\n        } else {\n          this.$message.error(\"请求失败！\");\n          this.$refs['editUserForm'].resetFields();\n          return false;\n        }\n      });\n    },\n\n    //添加用户\n    addSubmitForm(addUserForm) {\n      let params = {\n        'geNumber': this.addUserForm.geNumber,\n        'geName': this.addUserForm.geName,\n        'userState': this.addUserForm.userState,\n        'roleId': this.addUserForm.roleId,\n        'phone': this.addUserForm.phone,\n        'email': this.addUserForm.email,\n        'password': this.addUserForm.password\n      };\n\n      this.$refs[addUserForm].validate((valid) => {\n        if (valid) {\n          API.userUtil.addUser(params).then(({ data }) => {\n            if (data.data == true) {\n              this.addFormVisible = false;\n              this.$message(\"添加成功!\");\n              this.$refs['addUserForm'].resetFields();\n              this.loadData(this.criteria, this.currentPage, this.pagesize);\n            } else {\n              this.$message(data.data);\n              this.$refs['addUserForm'].resetFields();\n            }\n          }).catch((data) => {\n            this.$message(data.data);\n            this.$refs['addUserForm'].resetFields();\n            console.log(data);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n\n    //单行删除\n    handleDelete: function (index, row) {\n      let params = { 'geNumber': row.geNumber };\n      this.$confirm('此操作将永久删除“' + row.geNumber + '”, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        API.userUtil.deleteUser(params).then(({ data }) => {\n          if (data.data == true) {\n            this.$message({ type: 'success', message: '删除成功!' });\n            this.loadData(this.criteria, this.currentPage, this.pagesize);\n          } else {\n            this.$message({ type: 'info', message: '删除失败' });\n          }\n        }).catch((data) => {\n          this.$message(\"请求失败！\");\n        });\n        this.$message({ type: 'success', message: '删除成功!' });\n      }).catch(() => {\n        this.$message({ type: 'info', message: '已取消删除' });\n      })\n    },\n\n    //搜索\n    search: function () {\n      console.log(this.select);\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    add: function () {\n      this.addFormVisible = true;\n    },\n    exportUser() {\n      window.location.href = \"http://localhost:8088/api/exportUser.do\";\n    },\n    /*\n        //多项删除\n        deletenames: function(){\n          if(this.multipleSelection.length==0)\n            return;\n          var array = [];\n          this.multipleSelection.forEach((item) = > {\n            array.push(item.id);\n          })\n      this.$http.post('../delete',{\"array\":array},{emulateJSON: true}).then(function(res){\n        this.loadData(this.criteria, this.currentPage, this.pagesize);\n            },function(){\n                console.log('failed');\n            });\n        },\n      */\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function (row, index) {\n      if (row.id == this.highlightId) {\n        return 'info-row';\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function (val) {\n      this.pagesize = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n\n    //页码变更\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n\n  },\n\n}\n",null]}