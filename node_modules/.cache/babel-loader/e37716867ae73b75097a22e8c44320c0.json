{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\utils\\api.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\utils\\api.js","mtime":1563871982248},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui'; //import {getToken} from '@/api/utils/auth'\n\nimport store from '../../store'; // 创建axios实例\n\nvar service = axios.create({\n  //baseURL: process.env.BASE_URL, // api的base_url\n  timeout: 15000 // 请求超时时间2\n\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.error(error); // for debug\n\n  _Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n  console.log(res);\n\n  if (res.status == '1000') {\n    return res;\n  }\n\n  if (res.status == '0') {\n    return res.info;\n  } else if (res.status == \"20011\") {\n    Message({\n      showClose: true,\n      message: res.msg,\n      type: 'error',\n      duration: 500,\n      onClose: function onClose() {\n        store.dispatch('FedLogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      }\n    });\n    return _Promise.reject(\"未登录\");\n  } else {\n    Message({\n      message: res.msg,\n      type: 'error',\n      duration: 3 * 1000\n    });\n    return _Promise.reject(res);\n  }\n}, function (error) {\n  console.error('err' + error); // for debug\n\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 3 * 1000\n  });\n  return _Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\api\\utils\\api.js"],"names":["axios","Message","MessageBox","store","service","create","timeout","interceptors","request","use","config","error","console","reject","response","res","data","log","status","info","showClose","message","msg","type","duration","onClose","dispatch","then","location","reload"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,YAAlC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC3B;AACAC,EAAAA,OAAO,EAAE,KAFkB,CAEK;;AAFL,CAAb,CAAhB,C,CAIA;;AACAF,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC,SAAOA,MAAP;AACD,CAFD,EAEG,UAAAC,KAAK,EAAI;AACV;AACAC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,EAFU,CAEW;;AACrB,WAAQE,MAAR,CAAeF,KAAf;AACD,CAND,E,CAOA;;AACAP,OAAO,CAACG,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CACE,UAAAK,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACAJ,EAAAA,OAAO,CAACK,GAAR,CAAYF,GAAZ;;AACA,MAAIA,GAAG,CAACG,MAAJ,IAAc,MAAlB,EAA0B;AACxB,WAAOH,GAAP;AACD;;AACD,MAAIA,GAAG,CAACG,MAAJ,IAAc,GAAlB,EAAuB;AACrB,WAAOH,GAAG,CAACI,IAAX;AACD,GAFD,MAEO,IAAIJ,GAAG,CAACG,MAAJ,IAAc,OAAlB,EAA2B;AAChCjB,IAAAA,OAAO,CAAC;AACNmB,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,OAAO,EAAEN,GAAG,CAACO,GAFP;AAGNC,MAAAA,IAAI,EAAE,OAHA;AAINC,MAAAA,QAAQ,EAAE,GAJJ;AAKNC,MAAAA,OAAO,EAAE,mBAAM;AACbtB,QAAAA,KAAK,CAACuB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCC,UAAAA,QAAQ,CAACC,MAAT,GADqC,CACpB;AAClB,SAFD;AAGD;AATK,KAAD,CAAP;AAWA,WAAO,SAAQhB,MAAR,CAAe,KAAf,CAAP;AACD,GAbM,MAaA;AACLZ,IAAAA,OAAO,CAAC;AACNoB,MAAAA,OAAO,EAAEN,GAAG,CAACO,GADP;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAD,CAAP;AAKA,WAAO,SAAQX,MAAR,CAAeE,GAAf,CAAP;AACD;AACF,CA9BH,EA+BE,UAAAJ,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACD,KAAR,CAAc,QAAQA,KAAtB,EADO,CACqB;;AAC5BV,EAAAA,OAAO,CAAC;AACNoB,IAAAA,OAAO,EAAEV,KAAK,CAACU,OADT;AAENE,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAO,SAAQX,MAAR,CAAeF,KAAf,CAAP;AACD,CAvCH;AAyCA,eAAeP,OAAf","sourcesContent":["import axios from 'axios'\nimport {Message, MessageBox} from 'element-ui'\n\n//import {getToken} from '@/api/utils/auth'\nimport store from '../../store'\n// 创建axios实例\nconst service = axios.create({\n  //baseURL: process.env.BASE_URL, // api的base_url\n  timeout: 15000                  // 请求超时时间2\n})\n// request拦截器\nservice.interceptors.request.use(config => {\n  return config\n}, error => {\n  // Do something with request error\n  console.error(error) // for debug\n  Promise.reject(error)\n})\n// respone拦截器\nservice.interceptors.response.use(\n  response => {\n    const res = response.data;\n    console.log(res);\n    if (res.status == '1000') {\n      return res;\n    }\n    if (res.status == '0') {\n      return res.info;\n    } else if (res.status == \"20011\") {\n      Message({\n        showClose: true,\n        message: res.msg,\n        type: 'error',\n        duration: 500,\n        onClose: () => {\n          store.dispatch('FedLogOut').then(() => {\n            location.reload()// 为了重新实例化vue-router对象 避免bug\n          })\n        }\n      });\n      return Promise.reject(\"未登录\")\n    } else {\n      Message({\n        message: res.msg,\n        type: 'error',\n        duration: 3 * 1000\n      })\n      return Promise.reject(res)\n    }\n  },\n  error => {\n    console.error('err' + error)// for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 3 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\nexport default service\n\n"]}]}