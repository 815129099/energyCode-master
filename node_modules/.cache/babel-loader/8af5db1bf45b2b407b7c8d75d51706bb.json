{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\store\\modules\\permission.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\store\\modules\\permission.js","mtime":1563420931954},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n// store/permission.js\nimport { asyncRouterMap, constantRouterMap, menuLists } from '@/router';\n/**\r\n * 根据路由判断用户是否拥有此菜单\r\n * @param menus\r\n * @param route\r\n */\n\nfunction hasPermission(menus, route) {\n  if (route.menu) {\n    /*\r\n    * 如果这个路由有menu属性,就需要判断用户是否拥有此menu权限\r\n    */\n    return menus.indexOf(route.menu) > -1;\n  } else {\n    return true;\n  }\n}\n/**\r\n * 根据菜单判断用户是否拥有此菜单\r\n * @param menus\r\n * @param route\r\n */\n\n\nfunction hasPermission1(menus, m) {\n  if (m.index) {\n    /*\r\n    * 如果这个菜单有index属性,就需要判断用户是否拥有此menu权限\r\n    */\n    return menus.indexOf(m.index) > -1;\n  } else {\n    return true;\n  }\n}\n/**\r\n * 递归过滤异步路由表，返回符合用户菜单权限的路由表\r\n * @param asyncRouterMap\r\n * @param menus\r\n */\n\n\nfunction filterAsyncRouter(asyncRouterMap, menus) {\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    //filter,js语法里数组的过滤筛选方法\n    if (hasPermission(menus, route)) {\n      if (route.children && route.children.length) {\n        //如果这个路由下面还有下一级的话,就递归调用\n        route.children = filterAsyncRouter(route.children, menus); //如果过滤一圈后,没有子元素了,这个父级菜单就也不显示了\n\n        return route.children && route.children.length;\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n/**\r\n * 递归过滤异步菜单栏，返回符合用户菜单权限的菜单栏\r\n * @param asyncRouterMap\r\n * @param menus\r\n */\n\n\nfunction filterMenuList(menuLists, menus) {\n  var menuList = menuLists.filter(function (m) {\n    //filter,js语法里数组的过滤筛选方法\n    if (hasPermission1(menus, m)) {\n      if (m.children && m.children.length) {\n        //如果这个路由下面还有下一级的话,就递归调用\n        m.children = filterMenuList(m.children, menus); //如果过滤一圈后,没有子元素了,这个父级菜单就也不显示了\n\n        return m.children && m.children.length;\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return menuList;\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    //本用户所有的路由,包括了固定的路由和下面的addRouters\n    addRouters: [],\n    //本用户的角色赋予的新增的动态路由\n    menuList: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers); //将固定路由和新增路由进行合并, 成为本用户最终的全部路由信息\n    },\n    SET_MENUS: function SET_MENUS(state, menuList) {\n      state.menuList = menuList;\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, userPermission) {\n      var commit = _ref.commit;\n      //生成路由\n      return new _Promise(function (resolve) {\n        //roles是后台传过来的角色数组,比如['管理员','文章']\n        var role = userPermission.roleName;\n        var menus = userPermission.menuList; //声明 该角色可用的路由\n\n        var accessedRouters;\n        var menuList;\n\n        if (role === '管理员') {\n          //如果角色里包含'管理员',那么所有的路由都可以用\n          //其实管理员也拥有全部菜单,这里主要是利用角色判断,节省加载时间\n          accessedRouters = asyncRouterMap;\n          menuList = menuLists;\n        } else {\n          //否则需要通过以下方法来筛选出本角色可用的路由\n          accessedRouters = filterAsyncRouter(asyncRouterMap, menus);\n          menuList = filterMenuList(menuLists, menus);\n        } //执行设置路由的方法\n\n\n        commit('SET_ROUTERS', accessedRouters);\n        commit('SET_MENUS', menuList);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",null]}