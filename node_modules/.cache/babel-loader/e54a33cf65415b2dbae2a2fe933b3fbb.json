{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\role.vue","mtime":1563503996015},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //表格的数据\n      allPermission: [],\n      listLoading: false,\n      //数据加载等待动画\n      dialogStatus: \"create\",\n      dialogFormVisible: false,\n      textMap: {\n        update: \"编辑\",\n        create: \"新建角色\"\n      },\n      tempRole: {\n        roleName: \"\",\n        roleId: \"\",\n        permissions: []\n      },\n      adminName: \"管理员\"\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.getAllPermisson();\n  },\n  methods: {\n    getAllPermisson: function getAllPermisson() {\n      var _this = this;\n\n      //查询所有权限\n      this.api({\n        url: \"/api/user/listAllPermission\",\n        method: \"get\"\n      }).then(function (data) {\n        _this.allPermission = data.list;\n      });\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      //查询列表\n      this.listLoading = true;\n      this.api({\n        url: \"/api/user/listRole\",\n        method: \"get\"\n      }).then(function (data) {\n        _this2.listLoading = false;\n        _this2.list = data.list;\n      });\n    },\n    getIndex: function getIndex($index) {\n      //表格序号\n      return $index + 1;\n    },\n    showCreate: function showCreate() {\n      //显示新增对话框\n      this.tempRole.roleName = \"\";\n      this.tempRole.roleId = \"\";\n      this.tempRole.permissions = [];\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    showUpdate: function showUpdate($index) {\n      console.log($index);\n      console.log(this.list);\n      var role = this.list[$index];\n      console.log(role);\n      this.tempRole.roleName = role.roleName;\n      this.tempRole.roleId = role.roleId;\n      this.tempRole.permissions = [];\n\n      for (var i = 0; i < role.menus.length; i++) {\n        var perm = role.menus[i].permissions;\n\n        for (var j = 0; j < perm.length; j++) {\n          this.tempRole.permissions.push(perm[j].permissionId);\n        }\n      }\n\n      console.log(this.tempRole);\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n    },\n    createRole: function createRole() {\n      var _this3 = this;\n\n      if (!this.checkRoleNameUnique()) {\n        return;\n      }\n\n      if (!this.checkPermissionNum()) {\n        return;\n      } //添加新角色\n\n\n      this.api({\n        url: \"/api/user/addRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(function () {\n        _this3.getList();\n\n        _this3.dialogFormVisible = false;\n      });\n    },\n    updateRole: function updateRole() {\n      var _this4 = this;\n\n      if (!this.checkRoleNameUnique(this.tempRole.roleId)) {\n        return;\n      }\n\n      if (!this.checkPermissionNum()) {\n        return;\n      } //修改角色\n\n\n      this.api({\n        url: \"/api/user/updateRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(function () {\n        _this4.getList();\n\n        _this4.dialogFormVisible = false;\n      });\n    },\n    checkPermissionNum: function checkPermissionNum() {\n      //校验至少有一种权限\n      if (this.tempRole.permissions.length === 0) {\n        this.$message.error(\"请至少选择一种权限\");\n        return false;\n      }\n\n      return true;\n    },\n    checkRoleNameUnique: function checkRoleNameUnique(roleId) {\n      //校验名称重复\n      var roleName = this.tempRole.roleName;\n\n      if (!roleName) {\n        this.$message.error(\"请填写角色名称\");\n        return false;\n      }\n\n      var roles = this.list;\n      var result = true;\n\n      for (var j = 0; j < roles.length; j++) {\n        if (roles[j].roleName === roleName && (!roleId || roles[j].roleId !== roleId)) {\n          this.$message.error(\"角色名称已存在\");\n          result = false;\n          break;\n        }\n      }\n\n      return result;\n    },\n    removeRole: function removeRole($index) {\n      var _vue = this;\n\n      this.$confirm(\"确定删除此角色?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        showCancelButton: false,\n        type: \"warning\"\n      }).then(function () {\n        var role = _vue.list[$index];\n\n        _vue.api({\n          url: \"/api/user/deleteRole\",\n          method: \"post\",\n          data: {\n            roleId: role.roleId\n          }\n        }).then(function () {\n          _vue.getList();\n        }).catch(function (e) {});\n      });\n    },\n    isMenuNone: function isMenuNone(_index) {\n      //判断本级菜单内的权限是否一个都没选\n      var menu = this.allPermission[_index].permissions;\n      var result = true;\n\n      for (var j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) > -1) {\n          result = false;\n          break;\n        }\n      }\n\n      return result;\n    },\n    isMenuAll: function isMenuAll(_index) {\n      //判断本级菜单内的权限是否全选了\n      var menu = this.allPermission[_index].permissions;\n      var result = true;\n\n      for (var j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) < 0) {\n          result = false;\n          break;\n        }\n      }\n\n      return result;\n    },\n    checkAll: function checkAll(_index) {\n      //点击菜单   相当于全选按钮\n      var v = this;\n\n      if (v.isMenuAll(_index)) {\n        //如果已经全选了,则全部取消\n        v.noPerm(_index);\n      } else {\n        //如果尚未全选,则全选\n        v.allPerm(_index);\n      }\n    },\n    allPerm: function allPerm(_index) {\n      //全部选中\n      var menu = this.allPermission[_index].permissions;\n\n      for (var j = 0; j < menu.length; j++) {\n        this.addUnique(menu[j].id, this.tempRole.permissions);\n      }\n    },\n    noPerm: function noPerm(_index) {\n      //全部取消选中\n      var menu = this.allPermission[_index].permissions;\n\n      for (var j = 0; j < menu.length; j++) {\n        var idIndex = this.tempRole.permissions.indexOf(menu[j].id);\n\n        if (idIndex > -1) {\n          this.tempRole.permissions.splice(idIndex, 1);\n        }\n      }\n    },\n    addUnique: function addUnique(val, arr) {\n      //数组内防重复地添加元素\n      var _index = arr.indexOf(val);\n\n      if (_index < 0) {\n        arr.push(val);\n      }\n    },\n    checkRequired: function checkRequired(_perm, _index) {\n      //本方法会在勾选状态改变之后触发\n      var permId = _perm.id;\n\n      if (this.tempRole.permissions.indexOf(permId) > -1) {\n        //选中事件\n        //如果之前未勾选本权限,现在勾选完之后,tempRole里就会包含本id\n        //那么就要将必选的权限勾上\n        this.makeReuqiredPermissionChecked(_index);\n      } else {\n        //取消选中事件\n        if (_perm.requiredPerm === 1) {\n          //如果是必勾权限,就把本菜单的权限全部移出\n          //(其实也可以提示用户本权限是菜单里的必选,请先取消勾选另外几个权限,交互太麻烦,此处就直接全部取消选中了)\n          this.noPerm(_index);\n        }\n      }\n    },\n    makeReuqiredPermissionChecked: function makeReuqiredPermissionChecked(_index) {\n      //将本菜单必选的权限勾上\n      var menu = this.allPermission[_index].permissions;\n\n      for (var j = 0; j < menu.length; j++) {\n        var perm = menu[j];\n\n        if (perm.requiredPerm === 1) {\n          //找到本菜单的必选权限,将其勾上\n          this.addUnique(perm.id, this.tempRole.permissions);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form>\n        <el-form-item>\n          <el-button type=\"success\" icon=\"plus\" v-if=\"hasPerm('user:add')\" @click=\"showCreate\">添加角色</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table\n      :data=\"list\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"拼命加载中\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"序号\" width=\"80\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"角色\" prop=\"roleName\" width=\"150\"></el-table-column>\n      <el-table-column align=\"center\" label=\"用户\">\n        <template slot-scope=\"scope\">\n          <div v-for=\"user in scope.row.users\">\n            <div v-text=\"user.nickname\" style=\"display: inline-block;vertical-align: middle;\"></div>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"菜单&权限\" width=\"420\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.roleName==adminName\" type=\"success\">全部</el-tag>\n          <div v-else>\n            <div v-for=\"menu in scope.row.menus\" style=\"text-align: left\">\n              <span style=\"width: 100px;display: inline-block;text-align: right \">{{menu.menuName}}</span>\n              <el-tag\n                v-for=\"perm in menu.permissions\"\n                :key=\"perm.permissionName\"\n                v-text=\"perm.permissionName\"\n                style=\"margin-right: 3px;\"\n                type=\"primary\"\n              ></el-tag>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column\n        align=\"center\"\n        label=\"管理\"\n        width=\"220\"\n        v-if=\"hasPerm('role:update') ||hasPerm('role:delete') \"\n      >\n        <template slot-scope=\"scope\">\n          <div v-if=\"scope.row.roleName!='管理员'\">\n            <el-button\n              type=\"primary\"\n              icon=\"edit\"\n              @click=\"showUpdate(scope.$index)\"\n              v-if=\"hasPerm('role:update')\"\n            >修改</el-button>\n            <el-button\n              v-if=\" scope.row.users && scope.row.users.length===0 && hasPerm('role:delete')\"\n              type=\"danger\"\n              icon=\"delete\"\n              @click=\"removeRole(scope.$index)\"\n            >删除</el-button>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        class=\"small-space\"\n        :model=\"tempRole\"\n        label-position=\"left\"\n        label-width=\"100px\"\n        style=\"width: 600px; margin-left:50px;\"\n      >\n        <el-form-item label=\"角色名称\" required>\n          <el-input type=\"text\" v-model=\"tempRole.roleName\" style=\"width: 250px;\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"菜单&权限\" required>\n          <div v-for=\" (menu,_index) in allPermission\" :key=\"menu.menuName\">\n            <span style=\"width: 100px;display: inline-block;\">\n              <el-button\n                :type=\"isMenuNone(_index)?'':(isMenuAll(_index)?'success':'primary')\"\n                size=\"mini\"\n                style=\"width:80px;\"\n                @click=\"checkAll(_index)\"\n              >{{menu.menuName}}</el-button>\n            </span>\n            <div style=\"display: inline-block;margin-left:20px;\">\n              <el-checkbox-group v-model=\"tempRole.permissions\">\n                <el-checkbox\n                  v-for=\"perm in menu.permissions\"\n                  :label=\"perm.id\"\n                  @change=\"checkRequired(perm,_index)\"\n                  :key=\"perm.id\"\n                >\n                  <span :class=\"{requiredPerm:perm.requiredPerm===1}\">{{perm.permissionName}}</span>\n                </el-checkbox>\n              </el-checkbox-group>\n            </div>\n          </div>\n          <p style=\"color:#848484;\">说明:红色权限为对应菜单内的必选权限</p>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"success\" @click=\"createRole\">创 建</el-button>\n        <el-button type=\"primary\" v-else @click=\"updateRole\">修 改</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      list: [], //表格的数据\n      allPermission: [],\n      listLoading: false, //数据加载等待动画\n      dialogStatus: \"create\",\n      dialogFormVisible: false,\n      textMap: {\n        update: \"编辑\",\n        create: \"新建角色\"\n      },\n      tempRole: {\n        roleName: \"\",\n        roleId: \"\",\n        permissions: []\n      },\n      adminName: \"管理员\"\n    };\n  },\n  created() {\n    this.getList();\n    this.getAllPermisson();\n  },\n  methods: {\n    getAllPermisson() {\n      //查询所有权限\n      this.api({\n        url: \"/api/user/listAllPermission\",\n        method: \"get\"\n      }).then(data => {\n        this.allPermission = data.list;\n      });\n    },\n    getList() {\n      //查询列表\n      this.listLoading = true;\n      this.api({\n        url: \"/api/user/listRole\",\n        method: \"get\"\n      }).then(data => {\n        this.listLoading = false;\n        this.list = data.list;\n      });\n    },\n    getIndex($index) {\n      //表格序号\n      return $index + 1;\n    },\n    showCreate() {\n      //显示新增对话框\n      this.tempRole.roleName = \"\";\n      this.tempRole.roleId = \"\";\n      this.tempRole.permissions = [];\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    showUpdate($index) {\n      console.log($index);\n      console.log(this.list);\n      let role = this.list[$index];\n      console.log(role);\n      this.tempRole.roleName = role.roleName;\n      this.tempRole.roleId = role.roleId;\n      this.tempRole.permissions = [];\n      for (let i = 0; i < role.menus.length; i++) {\n        let perm = role.menus[i].permissions;\n        for (let j = 0; j < perm.length; j++) {\n          this.tempRole.permissions.push(perm[j].permissionId);\n        }\n      }\n      console.log(this.tempRole);\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n    },\n    createRole() {\n      if (!this.checkRoleNameUnique()) {\n        return;\n      }\n      if (!this.checkPermissionNum()) {\n        return;\n      }\n      //添加新角色\n      this.api({\n        url: \"/api/user/addRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(() => {\n        this.getList();\n        this.dialogFormVisible = false;\n      });\n    },\n    updateRole() {\n      if (!this.checkRoleNameUnique(this.tempRole.roleId)) {\n        return;\n      }\n      if (!this.checkPermissionNum()) {\n        return;\n      }\n      //修改角色\n      this.api({\n        url: \"/api/user/updateRole\",\n        method: \"post\",\n        data: this.tempRole\n      }).then(() => {\n        this.getList();\n        this.dialogFormVisible = false;\n      });\n    },\n    checkPermissionNum() {\n      //校验至少有一种权限\n      if (this.tempRole.permissions.length === 0) {\n        this.$message.error(\"请至少选择一种权限\");\n        return false;\n      }\n      return true;\n    },\n    checkRoleNameUnique(roleId) {\n      //校验名称重复\n      let roleName = this.tempRole.roleName;\n      if (!roleName) {\n        this.$message.error(\"请填写角色名称\");\n        return false;\n      }\n      let roles = this.list;\n      let result = true;\n      for (let j = 0; j < roles.length; j++) {\n        if (\n          roles[j].roleName === roleName &&\n          (!roleId || roles[j].roleId !== roleId)\n        ) {\n          this.$message.error(\"角色名称已存在\");\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    removeRole($index) {\n      let _vue = this;\n      this.$confirm(\"确定删除此角色?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        showCancelButton: false,\n        type: \"warning\"\n      }).then(() => {\n        let role = _vue.list[$index];\n        _vue\n          .api({\n            url: \"/api/user/deleteRole\",\n            method: \"post\",\n            data: {\n              roleId: role.roleId\n            }\n          })\n          .then(() => {\n            _vue.getList();\n          })\n          .catch(e => {});\n      });\n    },\n    isMenuNone(_index) {\n      //判断本级菜单内的权限是否一个都没选\n      let menu = this.allPermission[_index].permissions;\n      let result = true;\n      for (let j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) > -1) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    isMenuAll(_index) {\n      //判断本级菜单内的权限是否全选了\n      let menu = this.allPermission[_index].permissions;\n      let result = true;\n      for (let j = 0; j < menu.length; j++) {\n        if (this.tempRole.permissions.indexOf(menu[j].id) < 0) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    checkAll(_index) {\n      //点击菜单   相当于全选按钮\n      let v = this;\n      if (v.isMenuAll(_index)) {\n        //如果已经全选了,则全部取消\n        v.noPerm(_index);\n      } else {\n        //如果尚未全选,则全选\n        v.allPerm(_index);\n      }\n    },\n    allPerm(_index) {\n      //全部选中\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        this.addUnique(menu[j].id, this.tempRole.permissions);\n      }\n    },\n    noPerm(_index) {\n      //全部取消选中\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        let idIndex = this.tempRole.permissions.indexOf(menu[j].id);\n        if (idIndex > -1) {\n          this.tempRole.permissions.splice(idIndex, 1);\n        }\n      }\n    },\n    addUnique(val, arr) {\n      //数组内防重复地添加元素\n      let _index = arr.indexOf(val);\n      if (_index < 0) {\n        arr.push(val);\n      }\n    },\n    checkRequired(_perm, _index) {\n      //本方法会在勾选状态改变之后触发\n      let permId = _perm.id;\n      if (this.tempRole.permissions.indexOf(permId) > -1) {\n        //选中事件\n        //如果之前未勾选本权限,现在勾选完之后,tempRole里就会包含本id\n        //那么就要将必选的权限勾上\n        this.makeReuqiredPermissionChecked(_index);\n      } else {\n        //取消选中事件\n        if (_perm.requiredPerm === 1) {\n          //如果是必勾权限,就把本菜单的权限全部移出\n          //(其实也可以提示用户本权限是菜单里的必选,请先取消勾选另外几个权限,交互太麻烦,此处就直接全部取消选中了)\n          this.noPerm(_index);\n        }\n      }\n    },\n    makeReuqiredPermissionChecked(_index) {\n      //将本菜单必选的权限勾上\n      let menu = this.allPermission[_index].permissions;\n      for (let j = 0; j < menu.length; j++) {\n        let perm = menu[j];\n        if (perm.requiredPerm === 1) {\n          //找到本菜单的必选权限,将其勾上\n          this.addUnique(perm.id, this.tempRole.permissions);\n        }\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n.requiredPerm {\n  color: #ff0e13;\n}\n</style>\n"],"sourceRoot":"src\\components\\user"}]}