{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\energyCode-master\\src\\utils\\index.js","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\utils\\index.js","mtime":1605425856000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606188053867},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/**\n * @param {Function} fn 防抖函数\n * @param {Number} delay 延迟时间\n */\nexport function debounce(fn, delay) {\n  var timer;\n  return function () {\n    var context = this;\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n/**\n * @param {date} time 需要转换的时间\n * @param {String} fmt 需要转换的格式 如 yyyy-MM-dd、yyyy-MM-dd HH:mm:ss\n */\n\nexport function formatTime(time, fmt) {\n  if (!time) return '';else {\n    var date = new Date(time);\n    var o = {\n      'M+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'H+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n      'q+': Math.floor((date.getMonth() + 3) / 3),\n      S: date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n\n    for (var k in o) {\n      if (new RegExp('(' + k + ')').test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n      }\n    }\n\n    return fmt;\n  }\n}",{"version":3,"sources":["D:\\code\\energyCode-master\\src\\utils\\index.js"],"names":["debounce","fn","delay","timer","context","args","arguments","clearTimeout","setTimeout","apply","formatTime","time","fmt","date","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":";;;AAAA;;;;AAIA,OAAO,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,KAAtB,EAA6B;AAClC,MAAIC,KAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,IAAI,GAAGC,SAAX;AACAC,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGK,UAAU,CAAC,YAAY;AAC7BP,MAAAA,EAAE,CAACQ,KAAH,CAASL,OAAT,EAAkBC,IAAlB;AACD,KAFiB,EAEfH,KAFe,CAAlB;AAGD,GAPD;AAQD;AAED;;;;;AAIA,OAAO,SAASQ,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AACpC,MAAI,CAACD,IAAL,EAAW,OAAO,EAAP,CAAX,KACK;AACH,QAAME,IAAI,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAb;AACA,QAAMI,CAAC,GAAG;AACR,YAAMF,IAAI,CAACG,QAAL,KAAkB,CADhB;AAER,YAAMH,IAAI,CAACI,OAAL,EAFE;AAGR,YAAMJ,IAAI,CAACK,QAAL,EAHE;AAIR,YAAML,IAAI,CAACM,UAAL,EAJE;AAKR,YAAMN,IAAI,CAACO,UAAL,EALE;AAMR,YAAMC,IAAI,CAACC,KAAL,CAAW,CAACT,IAAI,CAACG,QAAL,KAAkB,CAAnB,IAAwB,CAAnC,CANE;AAORO,MAAAA,CAAC,EAAEV,IAAI,CAACW,eAAL;AAPK,KAAV;AASA,QAAI,OAAOC,IAAP,CAAYb,GAAZ,CAAJ,EACEA,GAAG,GAAGA,GAAG,CAACc,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJ,CAACf,IAAI,CAACgB,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAFI,CAAN;;AAIF,SAAK,IAAMC,CAAX,IAAgBjB,CAAhB,EAAmB;AACjB,UAAI,IAAIY,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+Bb,GAA/B,CAAJ,EAAyC;AACvCA,QAAAA,GAAG,GAAGA,GAAG,CAACc,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJD,MAAM,CAACC,EAAP,CAAUG,MAAV,KAAqB,CAArB,GACIhB,CAAC,CAACiB,CAAD,CADL,GAEI,CAAC,OAAOjB,CAAC,CAACiB,CAAD,CAAT,EAAcF,MAAd,CAAqB,CAAC,KAAKf,CAAC,CAACiB,CAAD,CAAP,EAAYD,MAAjC,CAJA,CAAN;AAMD;AACF;;AACD,WAAOnB,GAAP;AACD;AACF","sourcesContent":["/**\n * @param {Function} fn 防抖函数\n * @param {Number} delay 延迟时间\n */\nexport function debounce(fn, delay) {\n  var timer;\n  return function () {\n    var context = this;\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n\n/**\n * @param {date} time 需要转换的时间\n * @param {String} fmt 需要转换的格式 如 yyyy-MM-dd、yyyy-MM-dd HH:mm:ss\n */\nexport function formatTime(time, fmt) {\n  if (!time) return '';\n  else {\n    const date = new Date(time);\n    const o = {\n      'M+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'H+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n      'q+': Math.floor((date.getMonth() + 3) / 3),\n      S: date.getMilliseconds(),\n    };\n    if (/(y+)/.test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        (date.getFullYear() + '').substr(4 - RegExp.$1.length)\n      );\n    for (const k in o) {\n      if (new RegExp('(' + k + ')').test(fmt)) {\n        fmt = fmt.replace(\n          RegExp.$1,\n          RegExp.$1.length === 1\n            ? o[k]\n            : ('00' + o[k]).substr(('' + o[k]).length)\n        );\n      }\n    }\n    return fmt;\n  }\n}\n"]}]}