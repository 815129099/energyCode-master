{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\components\\user\\user.vue","mtime":1563757932601},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport API from '@/api';\nexport default {\n  data: function data() {\n    return {\n      totalCount: 0,\n      //分页组件--数据总条数\n      list: [],\n      //表格的数据\n      listLoading: false,\n      //数据加载等待动画\n      listQuery: {\n        pageNum: 1,\n        //页码\n        pageRow: 50 //每页条数\n\n      },\n      roles: [],\n      //角色列表\n      dialogStatus: 'create',\n      dialogFormVisible: false,\n      textMap: {\n        update: '编辑',\n        create: '新建用户'\n      },\n      tempUser: {\n        username: '',\n        password: '',\n        nickname: '',\n        roleId: '',\n        userId: '',\n        phone: '',\n        email: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请填写工号',\n          trigger: 'blur'\n        }, {\n          min: 7,\n          max: 7,\n          message: '请填写7个字符的工号',\n          trigger: 'blur'\n        }],\n        nickname: [{\n          required: true,\n          message: '请填写姓名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 4,\n          message: '请填写2-4个字符的姓名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请填写密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 10,\n          message: '请填写6-10个字符的密码',\n          trigger: 'blur'\n        }],\n        roleId: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: function validator(rule, value, callback) {\n            var vdt = API.validate.VDATA(value, {\n              \"required\": {\n                msg: \"请输入手机号\"\n              },\n              \"mphone\": {\n                msg: \"请输入有效的手机号\"\n              }\n            });\n\n            if (!vdt.result) {\n              callback(new Error(vdt.msg));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: function validator(rule, value, callback) {\n            var vdt = API.validate.VDATA(value, {\n              \"required\": {\n                msg: \"请输入邮箱\"\n              },\n              \"email\": {\n                msg: \"请输入有效的邮箱\"\n              }\n            });\n\n            if (!vdt.result) {\n              callback(new Error(vdt.msg));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n\n    if (this.hasPerm('user:add') || this.hasPerm('user:update')) {\n      this.getAllRoles();\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['userId'])),\n  methods: {\n    getAllRoles: function getAllRoles() {\n      var _this = this;\n\n      this.api({\n        url: \"/api/user/getAllRoles\",\n        method: \"get\"\n      }).then(function (data) {\n        _this.roles = data.list;\n      });\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      //查询列表\n      this.listLoading = true;\n      this.api({\n        url: \"/api/user/list\",\n        method: \"get\",\n        params: this.listQuery\n      }).then(function (data) {\n        _this2.listLoading = false;\n        _this2.list = data.list;\n        _this2.totalCount = data.totalCount;\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      //改变每页数量\n      this.listQuery.pageRow = val;\n      this.handleFilter();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      //改变页码\n      this.listQuery.pageNum = val;\n      this.getList();\n    },\n    handleFilter: function handleFilter() {\n      //查询事件\n      this.listQuery.pageNum = 1;\n      this.getList();\n    },\n    getIndex: function getIndex($index) {\n      //表格序号\n      return (this.listQuery.pageNum - 1) * this.listQuery.pageRow + $index + 1;\n    },\n    showCreate: function showCreate() {\n      //显示新增对话框\n      this.tempUser.username = \"\";\n      this.tempUser.password = \"\";\n      this.tempUser.nickname = \"\";\n      this.tempUser.roleId = \"\";\n      this.tempUser.userId = \"\";\n      this.dialogStatus = \"create\";\n      this.dialogFormVisible = true;\n    },\n    showUpdate: function showUpdate($index) {\n      var user = this.list[$index];\n      this.tempUser.username = user.username;\n      this.tempUser.nickname = user.nickname;\n      this.tempUser.roleId = user.roleId;\n      this.tempUser.userId = user.userId;\n      this.tempUser.deleteStatus = '1';\n      this.tempUser.password = '';\n      this.dialogStatus = \"update\";\n      this.dialogFormVisible = true;\n    },\n    createUser: function createUser(tempUser) {\n      var _this3 = this;\n\n      this.$refs[tempUser].validate(function (valid) {\n        if (valid) {\n          //添加新用户\n          _this3.api({\n            url: \"/api/user/addUser\",\n            method: \"post\",\n            data: _this3.tempUser\n          }).then(function () {\n            _this3.getList();\n\n            _this3.dialogFormVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    updateUser: function updateUser() {\n      var _this4 = this;\n\n      //修改用户信息\n      var _vue = this;\n\n      this.api({\n        url: \"/api/user/updateUser\",\n        method: \"post\",\n        data: this.tempUser\n      }).then(function () {\n        var msg = \"修改成功\";\n        _this4.dialogFormVisible = false;\n\n        if (_this4.userId === _this4.tempUser.userId) {\n          msg = '修改成功,部分信息重新登录后生效';\n        }\n\n        _this4.$message({\n          message: msg,\n          type: 'success',\n          duration: 1 * 1000,\n          onClose: function onClose() {\n            _vue.getList();\n          }\n        });\n      });\n    },\n    removeUser: function removeUser($index) {\n      var _vue = this;\n\n      this.$confirm('确定删除此用户?', '提示', {\n        confirmButtonText: '确定',\n        showCancelButton: false,\n        type: 'warning'\n      }).then(function () {\n        var user = _vue.list[$index];\n        user.deleteStatus = '2';\n\n        _vue.api({\n          url: \"/api/user/updateUser\",\n          method: \"post\",\n          data: user\n        }).then(function () {\n          _vue.getList();\n        }).catch(function () {\n          _vue.$message.error(\"删除失败\");\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"plus\" v-if=\"hasPerm('user:add')\" @click=\"showCreate\">添加\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table :data=\"list\" v-loading.body=\"listLoading\" element-loading-text=\"拼命加载中\" border fit\n              highlight-current-row>\n      <el-table-column align=\"center\" label=\"序号\" width=\"80\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"> </span>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"昵称\" prop=\"nickname\" style=\"width: 60px;\"></el-table-column>\n      <el-table-column align=\"center\" label=\"用户名\" prop=\"username\" style=\"width: 60px;\"></el-table-column>\n      <el-table-column align=\"center\" label=\"角色\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag type=\"success\" v-text=\"scope.row.roleName\" v-if=\"scope.row.roleId===1\"></el-tag>\n          <el-tag type=\"primary\" v-text=\"scope.row.roleName\" v-else></el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"创建时间\" prop=\"createTime\" width=\"170\"></el-table-column>\n      <el-table-column align=\"center\" label=\"最近修改时间\" prop=\"updateTime\" width=\"170\"></el-table-column>\n      <el-table-column align=\"center\" label=\"管理\" width=\"220\" v-if=\"hasPerm('user:update')\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"edit\" @click=\"showUpdate(scope.$index)\">修改</el-button>\n          <el-button type=\"danger\" icon=\"delete\" v-if=\"scope.row.userId!=userId \"\n                     @click=\"removeUser(scope.$index)\">删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"listQuery.pageNum\"\n      :page-size=\"listQuery.pageRow\"\n      :total=\"totalCount\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      layout=\"total, sizes, prev, pager, next, jumper\">\n    </el-pagination>\n\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form class=\"small-space\" :model=\"tempUser\" :rules=\"rules\" ref=\"tempUser\" label-position=\"left\" label-width=\"80px\"\n               style='width: 300px; margin-left:50px;'>\n        <el-form-item label=\"用户名\" prop=\"username\" v-if=\"dialogStatus=='create'\">\n          <el-input type=\"text\" v-model=\"tempUser.username\">\n          </el-input>\n        </el-form-item>\n\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogStatus=='create'\" >\n          <el-input type=\"password\" v-model=\"tempUser.password\">\n          </el-input>\n        </el-form-item>\n\n        <el-form-item label=\"新密码\" v-else>\n          <el-input type=\"password\" v-model=\"tempUser.password\" placeholder=\"不填则表示不修改\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"角色\" prop=\"roleId\" >\n          <el-select v-model=\"tempUser.roleId\" placeholder=\"请选择\">\n            <el-option\n              v-for=\"item in roles\"\n              :key=\"item.roleId\"\n              :label=\"item.roleName\"\n              :value=\"item.roleId\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"昵称\" prop=\"nickname\" >\n          <el-input type=\"text\" v-model=\"tempUser.nickname\">\n          </el-input>\n        </el-form-item>\n\n         <el-form-item label=\"手机号\"  prop=\"phone\">\n                <el-input v-model=\"tempUser.phone\" auto-complete=\"off\" ></el-input>\n            </el-form-item>\n\n             <el-form-item label=\"邮箱\"  prop=\"email\">\n                <el-input v-model=\"tempUser.email\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            \n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"success\" @click=\"createUser('tempUser')\">创 建</el-button>\n        <el-button type=\"primary\" v-else @click=\"updateUser\">修 改</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\n  import {mapGetters} from 'vuex'\nimport API from '@/api';\n  export default {\n    data() {\n      return {\n        totalCount: 0, //分页组件--数据总条数\n        list: [],//表格的数据\n        listLoading: false,//数据加载等待动画\n        listQuery: {\n          pageNum: 1,//页码\n          pageRow: 50,//每页条数\n        },\n        roles: [],//角色列表\n        dialogStatus: 'create',\n        dialogFormVisible: false,\n        textMap: {\n          update: '编辑',\n          create: '新建用户'\n        },\n        tempUser: {\n          username: '',\n          password: '',\n          nickname: '',\n          roleId: '',\n          userId: '',\n          phone:'',\n          email:''\n        },\n        rules: {\n                    username: [\n                        { required: true, message: '请填写工号', trigger: 'blur' },\n                        { min: 7,max: 7, message: '请填写7个字符的工号', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tnickname: [\n                        { required: true, message: '请填写姓名', trigger: 'blur' },\n                        { min: 2,max: 4, message: '请填写2-4个字符的姓名', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tpassword: [\n                        { required: true, message: '请填写密码', trigger: 'blur' },\n                        { min: 6,max: 10, message: '请填写6-10个字符的密码', trigger: 'blur' }\n                    ],\n          roleId: [\n                        { required: true, message: '请选择角色', trigger: 'blur' }\n\t\t\t\t\t],\n\t\t\t\t\tphone: [\n                          { \n                             validator: (rule,value,callback) => {\n                                let vdt = API.validate.VDATA(value,{\"required\" : { msg : \"请输入手机号\"}, \"mphone\" : {msg:\"请输入有效的手机号\"}})\n                               if (!vdt.result) {\n                                    callback(new Error(vdt.msg))\n                                }else{\n                                    callback();\n                                }\n                           },\n                             trigger: 'blur' \n                           }\n\t\t\t\t\t],\n\t\t\t\t\temail: [\n                          { \n                             validator: (rule,value,callback) => {\n                                let vdt = API.validate.VDATA(value,{\"required\" : { msg : \"请输入邮箱\"}, \"email\" : {msg:\"请输入有效的邮箱\"}})\n                               if (!vdt.result) {\n                                    callback(new Error(vdt.msg))\n                                }else{\n                                    callback();\n                                }\n                           },\n                             trigger: 'blur' \n                           }\n\t\t\t\t\t],\n                }\n      }\n    },\n    created() {\n      this.getList();\n      if (this.hasPerm('user:add') || this.hasPerm('user:update')) {\n        this.getAllRoles();\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'userId'\n      ])\n    },\n    methods: {\n      getAllRoles() {\n        this.api({\n          url: \"/api/user/getAllRoles\",\n          method: \"get\"\n        }).then(data => {\n          this.roles = data.list;\n        })\n      },\n      getList() {\n        //查询列表\n        this.listLoading = true;\n        this.api({\n          url: \"/api/user/list\",\n          method: \"get\",\n          params: this.listQuery\n        }).then(data => {\n          this.listLoading = false;\n          this.list = data.list;\n          this.totalCount = data.totalCount;\n        })\n      },\n      handleSizeChange(val) {\n        //改变每页数量\n        this.listQuery.pageRow = val\n        this.handleFilter();\n      },\n      handleCurrentChange(val) {\n        //改变页码\n        this.listQuery.pageNum = val\n        this.getList();\n      },\n      handleFilter() {\n        //查询事件\n        this.listQuery.pageNum = 1\n        this.getList()\n      },\n      getIndex($index) {\n        //表格序号\n        return (this.listQuery.pageNum - 1) * this.listQuery.pageRow + $index + 1\n      },\n      showCreate() {\n        //显示新增对话框\n        this.tempUser.username = \"\";\n        this.tempUser.password = \"\";\n        this.tempUser.nickname = \"\";\n        this.tempUser.roleId = \"\";\n        this.tempUser.userId = \"\";\n        this.dialogStatus = \"create\"\n        this.dialogFormVisible = true\n      },\n      showUpdate($index) {\n        let user = this.list[$index];\n        this.tempUser.username = user.username;\n        this.tempUser.nickname = user.nickname;\n        this.tempUser.roleId = user.roleId;\n        this.tempUser.userId = user.userId;\n        this.tempUser.deleteStatus = '1';\n        this.tempUser.password = '';\n        this.dialogStatus = \"update\"\n        this.dialogFormVisible = true\n      },\n      createUser(tempUser) {\n         this.$refs[tempUser].validate((valid) => {\n            if (valid) {              \n              //添加新用户\n        this.api({\n          url: \"/api/user/addUser\",\n          method: \"post\",\n          data: this.tempUser\n        }).then(() => {\n          this.getList();\n          this.dialogFormVisible = false\n        })\n            } else {\n                        return false;\n                }\n                }); \n      },\n\n      updateUser() {\n        //修改用户信息\n        let _vue = this;\n        this.api({\n          url: \"/api/user/updateUser\",\n          method: \"post\",\n          data: this.tempUser\n        }).then(() => {\n          let msg = \"修改成功\";\n          this.dialogFormVisible = false\n          if (this.userId === this.tempUser.userId) {\n            msg = '修改成功,部分信息重新登录后生效'\n          }\n          this.$message({\n            message: msg,\n            type: 'success',\n            duration: 1 * 1000,\n            onClose: () => {\n              _vue.getList();\n            }\n          })\n        })\n      },\n      removeUser($index) {\n        let _vue = this;\n        this.$confirm('确定删除此用户?', '提示', {\n          confirmButtonText: '确定',\n          showCancelButton: false,\n          type: 'warning'\n        }).then(() => {\n          let user = _vue.list[$index];\n          user.deleteStatus = '2';\n          _vue.api({\n            url: \"/api/user/updateUser\",\n            method: \"post\",\n            data: user\n          }).then(() => {\n            _vue.getList()\n          }).catch(() => {\n            _vue.$message.error(\"删除失败\")\n          })\n        })\n      },\n    }\n  }\n</script>\n"],"sourceRoot":"src\\components\\user"}]}