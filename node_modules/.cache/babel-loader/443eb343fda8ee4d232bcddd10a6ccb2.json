{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\common\\chart\\ReactiveExample.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\common\\chart\\ReactiveExample.js","mtime":1557452785558},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Bar } from './BaseCharts';\nimport { reactiveData } from './mixins';\nexport default {\n  extends: Bar,\n  mixins: [reactiveData],\n  data: function data() {\n    return {\n      chartData: '',\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  created: function created() {\n    this.fillData();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.renderChart(this.chartData, this.options);\n    setInterval(function () {\n      _this.fillData();\n    }, 5000);\n  },\n  methods: {\n    fillData: function fillData() {\n      this.chartData = {\n        labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [{\n          label: 'Data One',\n          backgroundColor: '#f87979',\n          data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\n        }]\n      };\n    },\n    getRandomInt: function getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    }\n  }\n};",{"version":3,"sources":["E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\common\\chart\\ReactiveExample.js"],"names":["Bar","reactiveData","extends","mixins","data","chartData","options","responsive","maintainAspectRatio","created","fillData","mounted","renderChart","setInterval","methods","labels","getRandomInt","datasets","label","backgroundColor","Math","floor","random"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAEF,GADI;AAEbG,EAAAA,MAAM,EAAE,CAACF,YAAD,CAFK;AAGbG,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,mBAAmB,EAAE;AAFd;AAFE,KAAP;AAAA,GAHO;AAUbC,EAAAA,OAVa,qBAUF;AACT,SAAKC,QAAL;AACD,GAZY;AAcbC,EAAAA,OAda,qBAcF;AAAA;;AACT,SAAKC,WAAL,CAAiB,KAAKP,SAAtB,EAAiC,KAAKC,OAAtC;AAEAO,IAAAA,WAAW,CAAC,YAAM;AAChB,MAAA,KAAI,CAACH,QAAL;AACD,KAFU,EAER,IAFQ,CAAX;AAGD,GApBY;AAsBbI,EAAAA,OAAO,EAAE;AACPJ,IAAAA,QADO,sBACK;AACV,WAAKL,SAAL,GAAiB;AACfU,QAAAA,MAAM,EAAE,CAAC,YAAY,KAAKC,YAAL,EAAb,EAAkC,UAAlC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,KAAhE,EAAuE,MAAvE,EAA+E,MAA/E,EAAuF,QAAvF,EAAiG,WAAjG,EAA8G,SAA9G,EAAyH,UAAzH,EAAqI,UAArI,CADO;AAEfC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,UADT;AAEEC,UAAAA,eAAe,EAAE,SAFnB;AAGEf,UAAAA,IAAI,EAAE,CAAC,KAAKY,YAAL,EAAD,EAAsB,KAAKA,YAAL,EAAtB,EAA2C,KAAKA,YAAL,EAA3C,EAAgE,KAAKA,YAAL,EAAhE,EAAqF,KAAKA,YAAL,EAArF,EAA0G,KAAKA,YAAL,EAA1G,EAA+H,KAAKA,YAAL,EAA/H,EAAoJ,KAAKA,YAAL,EAApJ,EAAyK,KAAKA,YAAL,EAAzK,EAA8L,KAAKA,YAAL,EAA9L,EAAmN,KAAKA,YAAL,EAAnN,EAAwO,KAAKA,YAAL,EAAxO;AAHR,SADQ;AAFK,OAAjB;AAUD,KAZM;AAcPA,IAAAA,YAdO,0BAcS;AACd,aAAOI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAL,GAAS,CAA1B,CAAX,IAA2C,CAAlD;AACD;AAhBM;AAtBI,CAAf","sourcesContent":["import { Bar } from './BaseCharts'\r\nimport { reactiveData } from './mixins'\r\n\r\nexport default {\r\n  extends: Bar,\r\n  mixins: [reactiveData],\r\n  data: () => ({\r\n    chartData: '',\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n  }),\r\n  created () {\r\n    this.fillData()\r\n  },\r\n\r\n  mounted () {\r\n    this.renderChart(this.chartData, this.options)\r\n\r\n    setInterval(() => {\r\n      this.fillData()\r\n    }, 5000)\r\n  },\r\n\r\n  methods: {\r\n    fillData () {\r\n      this.chartData = {\r\n        labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        datasets: [\r\n          {\r\n            label: 'Data One',\r\n            backgroundColor: '#f87979',\r\n            data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\n    getRandomInt () {\r\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5\r\n    }\r\n  }\r\n}"]}]}