{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\src\\main.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\main.js","mtime":1557974223014},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'; // 默认主题\n// import '../static/css/theme-green/index.css';       // 浅绿色主题\n//import './assets/css/icon.css';\n\nimport './assets/icon/iconfont.css';\nimport './components/common/directives';\nimport \"babel-polyfill\";\nimport VueCookie from 'vue-cookie';\nimport store from './store';\nimport VCharts from 'v-charts';\n/*\r\nimport VeeValidate from 'vee-validate';\r\nimport zh_CN from 'vee-validate/dist/locale/zh_CN';\r\nimport VueI18n from 'vue-i18n';\r\nVue.use(VueI18n)\r\nconst i18n = new VueI18n({\r\n       locale: 'zh_CN',\r\n});\r\nconst config = {\r\n    errorBagName: 'errorBags', // change if property conflicts.\r\n    fieldsBagName: 'fieldBags',\r\n    delay: 0,    //多少ms之后进行校验\r\n    locale: 'zh_CN',\r\n    messages: null,   //代表自定义校验信息\r\n    strict: true,    //代表没有设置规则的表单不进行校验\r\n    i18n,\r\n       i18nRootKey: 'validation',\r\n       dictionary: {\r\n          zh_CN\r\n       }\r\n};\r\nVue.use(VeeValidate, config);*/\n\nVue.use(VueCookie);\nVue.use(VCharts);\nVue.config.productionTip = false;\nVue.use(ElementUI, {\n  size: 'small'\n});\nVue.prototype.$axios = axios; //使用钩子函数对路由进行权限跳转\n\nrouter.beforeEach(function (to, from, next) {\n  //const role = localStorage.getItem('ms_username');\n  var role = Vue.cookie.get('role');\n  /*\r\n  if(role){\r\n      console.log(router);\r\n      store.dispatch('GenerateRoutes',role).then(() => { // 生成可访问的路由表\r\n          router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\r\n           //next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n        });\r\n        \r\n        if(to.meta.role){\r\n            next();\r\n        }else if(!to.meta.role && to.path !== '/403'){\r\n            next('/403');\r\n        }else{\r\n            next();\r\n        }\r\n  }else if(!role && to.path !== '/login'){\r\n      console.log(\"跳转到login\");\r\n          next('/login');\r\n  }\r\n  */\n\n  if (!role && to.path !== '/login') {\n    console.log(\"跳转到login\");\n    next('/login');\n  } else if (to.meta.role) {\n    console.log(\"this is a role\"); // 如果是管理员权限则可进入，这里只是简单的模拟管理员权限而已\n\n    role === 'admin' ? next() : next('/403');\n  } else {\n    console.log(\"直接跳过\"); // 简单的判断IE10及以下不进入富文本编辑器，该组件不兼容\n\n    if (navigator.userAgent.indexOf('MSIE') > -1 && to.path === '/editor') {\n      Vue.prototype.$alert('vue-quill-editor组件不兼容IE10及以下浏览器，请使用更高版本的浏览器查看', '浏览器不兼容通知', {\n        confirmButtonText: '确定'\n      });\n    } else {\n      next();\n    }\n  }\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",null]}