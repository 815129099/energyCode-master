{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\store\\modules\\user.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\store\\modules\\user.js","mtime":1563933131193},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy-copy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy-copy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n//import {getInfo, login, logout} from '@/api/login'\nimport store from '../../store';\nimport router from '../../router'; //import API from '@/api';\n\nimport { default as api } from '../../api/utils/api';\nvar user = {\n  state: {\n    nickname: \"\",\n    userId: \"\",\n    avatar: 'https://www.gravatar.com/avatar/6560ed55e62396e40b34aac1e5041028',\n    role: '',\n    menus: [],\n    permissions: []\n  },\n  mutations: {\n    SET_USER: function SET_USER(state, userInfo) {\n      state.nickname = userInfo.nickname;\n      state.userId = userInfo.userId;\n      state.role = userInfo.roleName;\n      state.menus = userInfo.menuList;\n      state.permissions = userInfo.permissionList;\n    },\n    RESET_USER: function RESET_USER(state) {\n      state.nickname = \"\";\n      state.userId = \"\";\n      state.role = '';\n      state.menus = [];\n      state.permissions = [];\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref, loginForm) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      return new _Promise(function (resolve, reject) {\n        api({\n          url: \"/api/login/auth\",\n          method: \"post\",\n          data: loginForm\n        }).then(function (data) {\n          if (data.result === \"success\") {\n            //cookie中保存前端登录状态\n            localStorage.setItem(\"username\", loginForm.username);\n          }\n\n          resolve(data);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref2) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n      //resolve是对promise成功时候的回调，它把promise的状态修改为fullfiled，reject就是失败的时候的回调，\n      //他把promise的状态修改为rejected，这样我们在then中就能捕捉到，然后执行“失败”情况的回调。\n      return new _Promise(function (resolve, reject) {\n        api({\n          url: '/api/login/getInfo',\n          method: 'post'\n        }).then(function (data) {\n          //储存用户信息\n          commit('SET_USER', data.userPermission); //cookie保存登录状态,仅靠vuex保存的话,页面刷新就会丢失登录状态\n\n          localStorage.setItem(\"username\", data.userPermission.username);\n          localStorage.setItem(\"nickname\", data.userPermission.nickname);\n          localStorage.setItem(\"rolename\", data.userPermission.roleName); //生成路由\n\n          var userPermission = data.userPermission;\n          store.dispatch('GenerateRoutes', userPermission).then(function () {\n            //生成该用户的新路由json操作完毕之后,调用vue-router的动态新增路由方法,将新路由添加\n            router.addRoutes(store.getters.addRouters);\n          });\n          resolve(data);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    LogOut: function LogOut(_ref3) {\n      var commit = _ref3.commit;\n      return new _Promise(function (resolve) {\n        api({\n          url: \"/api/login/logout\",\n          method: \"post\"\n        }).then(function (data) {\n          commit('RESET_USER');\n          localStorage.removeItem(\"username\");\n          localStorage.removeItem(\"rolename\");\n          localStorage.removeItem(\"nickname\");\n          resolve(data);\n        }).catch(function () {\n          commit('RESET_USER');\n          localStorage.removeItem(\"username\");\n          localStorage.removeItem(\"rolename\");\n          localStorage.removeItem(\"nickname\");\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut: function FedLogOut(_ref4) {\n      var commit = _ref4.commit;\n      return new _Promise(function (resolve) {\n        commit('RESET_USER');\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"rolename\");\n        localStorage.removeItem(\"nickname\");\n        resolve();\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["E:\\code\\energy\\qiantai\\vue-energy-copy\\src\\store\\modules\\user.js"],"names":["store","router","default","api","user","state","nickname","userId","avatar","role","menus","permissions","mutations","SET_USER","userInfo","roleName","menuList","permissionList","RESET_USER","actions","Login","loginForm","commit","resolve","reject","url","method","data","then","result","localStorage","setItem","username","catch","err","GetInfo","userPermission","dispatch","addRoutes","getters","addRouters","error","LogOut","removeItem","FedLogOut"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,SAAQC,OAAO,IAAIC,GAAnB,QAA6B,qBAA7B;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,MAAM,EAAE,kEAHH;AAILC,IAAAA,IAAI,EAAE,EAJD;AAKLC,IAAAA,KAAK,EAAE,EALF;AAMLC,IAAAA,WAAW,EAAE;AANR,GADI;AASXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAACR,KAAD,EAAQS,QAAR,EAAqB;AAC7BT,MAAAA,KAAK,CAACC,QAAN,GAAiBQ,QAAQ,CAACR,QAA1B;AACAD,MAAAA,KAAK,CAACE,MAAN,GAAeO,QAAQ,CAACP,MAAxB;AACAF,MAAAA,KAAK,CAACI,IAAN,GAAaK,QAAQ,CAACC,QAAtB;AACAV,MAAAA,KAAK,CAACK,KAAN,GAAcI,QAAQ,CAACE,QAAvB;AACAX,MAAAA,KAAK,CAACM,WAAN,GAAoBG,QAAQ,CAACG,cAA7B;AACD,KAPQ;AAQTC,IAAAA,UAAU,EAAE,oBAACb,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;AACAD,MAAAA,KAAK,CAACE,MAAN,GAAe,EAAf;AACAF,MAAAA,KAAK,CAACI,IAAN,GAAa,EAAb;AACAJ,MAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;AACAL,MAAAA,KAAK,CAACM,WAAN,GAAoB,EAApB;AACD;AAdQ,GATA;AAyBXQ,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,KAFO,uBAEgBC,SAFhB,EAE2B;AAAA,UAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,UAAnBjB,KAAmB,QAAnBA,KAAmB;AAChC,aAAO,aAAY,UAACkB,OAAD,EAAUC,MAAV,EAAqB;AACtCrB,QAAAA,GAAG,CAAC;AACFsB,UAAAA,GAAG,EAAE,iBADH;AAEFC,UAAAA,MAAM,EAAE,MAFN;AAGFC,UAAAA,IAAI,EAAEN;AAHJ,SAAD,CAAH,CAIGO,IAJH,CAIQ,UAAAD,IAAI,EAAI;AACd,cAAIA,IAAI,CAACE,MAAL,KAAgB,SAApB,EAA+B;AAC7B;AACAC,YAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCV,SAAS,CAACW,QAA1C;AACD;;AACDT,UAAAA,OAAO,CAACI,IAAD,CAAP;AACD,SAVD,EAUGM,KAVH,CAUS,UAAAC,GAAG,EAAI;AACdV,UAAAA,MAAM,CAACU,GAAD,CAAN;AACD,SAZD;AAaD,OAdM,CAAP;AAeD,KAlBM;AAmBP;AACAC,IAAAA,OApBO,0BAoBkB;AAAA,UAAhBb,MAAgB,SAAhBA,MAAgB;AAAA,UAARjB,KAAQ,SAARA,KAAQ;AACtB;AACA;AAED,aAAO,aAAY,UAACkB,OAAD,EAAUC,MAAV,EAAqB;AACtCrB,QAAAA,GAAG,CAAC;AACFsB,UAAAA,GAAG,EAAE,oBADH;AAEFC,UAAAA,MAAM,EAAE;AAFN,SAAD,CAAH,CAGGE,IAHH,CAGQ,UAAAD,IAAI,EAAI;AACd;AACAL,UAAAA,MAAM,CAAC,UAAD,EAAaK,IAAI,CAACS,cAAlB,CAAN,CAFc,CAGd;;AACAN,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCJ,IAAI,CAACS,cAAL,CAAoBJ,QAApD;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCJ,IAAI,CAACS,cAAL,CAAoB9B,QAApD;AACAwB,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCJ,IAAI,CAACS,cAAL,CAAoBrB,QAApD,EANc,CAOd;;AACA,cAAIqB,cAAc,GAAGT,IAAI,CAACS,cAA1B;AACApC,UAAAA,KAAK,CAACqC,QAAN,CAAe,gBAAf,EAAiCD,cAAjC,EAAiDR,IAAjD,CAAsD,YAAM;AAC1D;AACA3B,YAAAA,MAAM,CAACqC,SAAP,CAAiBtC,KAAK,CAACuC,OAAN,CAAcC,UAA/B;AACD,WAHD;AAIAjB,UAAAA,OAAO,CAACI,IAAD,CAAP;AACD,SAjBD,EAiBGM,KAjBH,CAiBS,UAAAQ,KAAK,EAAI;AAChBjB,UAAAA,MAAM,CAACiB,KAAD,CAAN;AACD,SAnBD;AAoBD,OArBM,CAAP;AAsBD,KA9CM;AA+CP;AACAC,IAAAA,MAhDO,yBAgDU;AAAA,UAATpB,MAAS,SAATA,MAAS;AAGf,aAAO,aAAY,UAACC,OAAD,EAAa;AAC9BpB,QAAAA,GAAG,CAAC;AACFsB,UAAAA,GAAG,EAAE,mBADH;AAEFC,UAAAA,MAAM,EAAE;AAFN,SAAD,CAAH,CAGGE,IAHH,CAGQ,UAAAD,IAAI,EAAI;AACdL,UAAAA,MAAM,CAAC,YAAD,CAAN;AACAQ,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACApB,UAAAA,OAAO,CAACI,IAAD,CAAP;AACD,SATD,EASGM,KATH,CASS,YAAM;AACbX,UAAAA,MAAM,CAAC,YAAD,CAAN;AACAQ,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,UAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACD,SAdD;AAeD,OAhBM,CAAP;AAiBD,KApEM;AAqEP;AACAC,IAAAA,SAtEO,4BAsEa;AAAA,UAATtB,MAAS,SAATA,MAAS;AAClB,aAAO,aAAY,UAAAC,OAAO,EAAI;AAC5BD,QAAAA,MAAM,CAAC,YAAD,CAAN;AACAQ,QAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,QAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACAb,QAAAA,YAAY,CAACa,UAAb,CAAwB,UAAxB;AACApB,QAAAA,OAAO;AACR,OANM,CAAP;AAOD;AA9EM;AAzBE,CAAb;AA0GA,eAAenB,IAAf","sourcesContent":["//import {getInfo, login, logout} from '@/api/login'\nimport store from '../../store'\nimport router from '../../router'\n//import API from '@/api';\nimport {default as api} from '../../api/utils/api'\nconst user = {\n  state: {\n    nickname: \"\",\n    userId: \"\",\n    avatar: 'https://www.gravatar.com/avatar/6560ed55e62396e40b34aac1e5041028',\n    role: '',\n    menus: [],\n    permissions: []\n  },\n  mutations: {\n    SET_USER: (state, userInfo) => {\n      state.nickname = userInfo.nickname;\n      state.userId = userInfo.userId;\n      state.role = userInfo.roleName;\n      state.menus = userInfo.menuList;\n      state.permissions = userInfo.permissionList;\n    },\n    RESET_USER: (state) => {\n      state.nickname = \"\";\n      state.userId = \"\";\n      state.role = '';\n      state.menus = [];\n      state.permissions = [];\n    }\n  },\n  actions: {\n    // 登录\n    Login({commit, state}, loginForm) {\n      return new Promise((resolve, reject) => {\n        api({\n          url: \"/api/login/auth\",\n          method: \"post\",\n          data: loginForm\n        }).then(data => {\n          if (data.result === \"success\") {\n            //cookie中保存前端登录状态\n            localStorage.setItem(\"username\",loginForm.username);\n          }\n          resolve(data);\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    },\n    // 获取用户信息\n    GetInfo({commit, state}) {\n       //resolve是对promise成功时候的回调，它把promise的状态修改为fullfiled，reject就是失败的时候的回调，\n       //他把promise的状态修改为rejected，这样我们在then中就能捕捉到，然后执行“失败”情况的回调。\n       \n      return new Promise((resolve, reject) => {\n        api({\n          url: '/api/login/getInfo',\n          method: 'post'\n        }).then(data => {\n          //储存用户信息\n          commit('SET_USER', data.userPermission);\n          //cookie保存登录状态,仅靠vuex保存的话,页面刷新就会丢失登录状态\n          localStorage.setItem(\"username\",data.userPermission.username);\n          localStorage.setItem(\"nickname\",data.userPermission.nickname);\n          localStorage.setItem(\"rolename\",data.userPermission.roleName);\n          //生成路由\n          let userPermission = data.userPermission ;\n          store.dispatch('GenerateRoutes', userPermission).then(() => {\n            //生成该用户的新路由json操作完毕之后,调用vue-router的动态新增路由方法,将新路由添加\n            router.addRoutes(store.getters.addRouters)\n          })\n          resolve(data)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n    // 登出\n    LogOut({commit}) {\n\n\n      return new Promise((resolve) => {\n        api({\n          url: \"/api/login/logout\",\n          method: \"post\"\n        }).then(data => {\n          commit('RESET_USER')\n          localStorage.removeItem(\"username\");\n          localStorage.removeItem(\"rolename\");\n          localStorage.removeItem(\"nickname\");\n          resolve(data);\n        }).catch(() => {\n          commit('RESET_USER')\n          localStorage.removeItem(\"username\");\n          localStorage.removeItem(\"rolename\");\n          localStorage.removeItem(\"nickname\");\n        })\n      })\n    },\n    // 前端 登出\n    FedLogOut({commit}) {\n      return new Promise(resolve => {\n        commit('RESET_USER')\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"rolename\");\n        localStorage.removeItem(\"nickname\");\n        resolve()\n      })\n    }\n  }\n}\nexport default user\n"]}]}