{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\components\\page\\Chart.vue","mtime":1557455843478},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BarExample from '../common/chart/BarExample'\nimport LineExample from '../common/chart/LineExample'\nimport DoughnutExample from '../common/chart/DoughnutExample'\nimport PieExample from '../common/chart/PieExample'\nimport RadarExample from '../common/chart/RadarExample'\nimport PolarAreaExample from '../common/chart/PolarAreaExample'\nimport BubbleExample from '../common/chart/BubbleExample'\nimport ReactiveExample from '../common/chart/ReactiveExample'\nimport ReactivePropExample from '../common/chart/ReactivePropExample'\nimport ScatterExample from '../common/chart/ScatterExample'\nimport HorizontalBarExample from '../common/chart/HorizontalBarExample'\nimport CustomLine from '../common/chart/CustomExample'\nexport default {\n  components: {\n    BarExample,\n    LineExample,\n    DoughnutExample,\n    CustomLine,\n    PieExample,\n    RadarExample,\n    PolarAreaExample,\n    BubbleExample,\n    ReactiveExample,\n    ReactivePropExample,\n    ScatterExample,\n    HorizontalBarExample\n  },\n  data () {\n    return {\n      dataPoints: null,\n      height: 20\n    }\n  },\n  mounted () {\n    setInterval(() => {\n      this.fillData()\n    }, 2000)\n  },\n  methods: {\n    increaseHeight () {\n      this.height += 10\n    },\n    getRandomInt () {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5\n    },\n    fillData () {\n      this.dataPoints = {\n        labels: ['January' + this.getRandomInt(), 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [\n          {\n            label: 'Data One',\n            backgroundColor: '#f87979',\n            data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    myStyles () {\n      return {\n        height: `${this.height}px`,\n        position: 'relative'\n      }\n    }\n  }\n}\n",null]}