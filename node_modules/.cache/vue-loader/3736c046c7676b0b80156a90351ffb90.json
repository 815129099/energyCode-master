{"remainingRequest":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\energyCode-master\\src\\components\\power\\PowerByRatio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\energyCode-master\\src\\components\\power\\PowerByRatio.vue","mtime":1605581907603},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564553326000},{"path":"D:\\code\\energyCode-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1564553326000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport API from \"@/api\";\nimport Vue from \"vue\";\nexport default {\n  data() {\n    return {\n      navselected:\"\",\n      beginTime: \"\",\n      endTime: \"\",\n      powerType: \"ZxygZ\",\n      Source: \"所有数据来源\",\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //搜索条件\n      criteria: \"\",\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 50000000,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 0,\n      formLabelWidth: \"120px\",\n      list: \"\",\n      key: \"\",\n      EStationName:\"\",\n      spanArr:[],//合并电表\n      spanArr1:[],//合并部门\n      position:0,//在data里面定义\n      position1:0,//在data里面定义\n    };\n  },\n  created() {\n    this.loadMenu();\n  },\n  methods: {\n    //获取所选节点\n    selectMenu: function(key, keyPath, name) {\n      this.EStationName = keyPath[1].split(\"/\")[1];\n      if(keyPath.length<=2){\n        this.key = \"\";\n      }else{\n        this.key = keyPath[2].split(\"/\")[1];\n      }\n      console.log(key+\"---\"+keyPath+'---'+name);\n    },\n    handleOpen: function(key, keyPath, name) {\n      this.EStationName = key.split(\"/\")[1];\n      this.key = \"\";\n      console.log(this.EStationName);\n      console.log(\"open----\"+key+\",,,,\"+keyPath+',,,,,'+name);\n      this.navselected=\"/\";\n      console.log(this.navselected);\n    },\n    handleClose: function(key, keyPath, name) {\n      this.EStationName = key.split(\"/\")[1];\n      this.key = \"\";\n      console.log(this.EStationName);\n      this.navselected=\"/\";\n      console.log(\"close----\"+key+\",,,,\"+keyPath+',,,,,'+name);\n      console.log(this.navselected);\n    },\n\n    //加载树状图\n    loadMenu: function() {\n      API.powerUtil\n        .getMenu()\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            this.list = data.data;\n          } else {\n            //this.$Message.error(data.msg);\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n    //从服务器读取数据\n    getPowerData: function() {\n       if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.Source==\"\"){\n        this.$message(\"请选择数据来源！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n      let params = {\n        estationName:this.EStationName,\n        emeterName: this.key,\n        beginTime: this.beginTime,\n        endTime: this.endTime,\n        source: this.Source,\n        powerType: this.powerType,\n        pageNum: this.currentPage,\n        pageSize: this.pagesize\n      };\n      API.powerUtil\n        .getPowerByRatio(params)\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            if(data.data.tableData==null){\n              this.tableData = null;\n              this.totalCount = 0;\n            }else{\n            this.tableData = data.data.tableData.list;\n            this.totalCount = data.data.tableData.total;\n            this.rowspan();\n            }\n            \n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n      }\n    },\n\n    //多选响应\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function(row, event, column) {\n      this.highlightId = row.id;\n    },\n\n    //搜索\n    search: function() {\n      console.log(this.select);\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    add: function() {\n      this.addFormVisible = true;\n    },\n    exportPowerTotal() {\n      if(this.EStationName==null || this.EStationName ==\"\"){\n         this.$message(\"请选择电表！\");\n      }else if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n          //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n         window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n      }\n      \n     // this.$message(\"待开发\");\n    },\n    exportAllPowerTotal() {\n      if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n        //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n        window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n      }\n    },\n\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function(val) {\n      this.pagesize = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n\n    //页码变更\n    handleCurrentChange: function(val) {\n      this.currentPage = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n     rowspan:function() {\n        this.spanArr = [];//在data里面定义\n        this.position = 0; //在data里面定义\n        this.tableData.forEach((item,index) => {\n          if( index === 0){\n            this.spanArr.push(1);\n            this.spanArr1.push(1);\n            this.position = 0;\n            this.position1 = 0;\n            //item.sequence=index+1;//设置序号\n          }else{\n            if(this.tableData[index].EMeterID === this.tableData[index-1].EMeterID ){\n              this.spanArr[this.position] += 1;//连续有几行项目名名称相同\n              this.spanArr.push(0); // 名称相同后往数组里面加一项0\n              //当项目名称相同时，设置当前序号和前一个相同\n             // this.tableData1[index].sequence = this.tableData1[index-1].sequence;\n            if(this.tableData[index].EDepartmentName === this.tableData[index-1].EDepartmentName ){\n              this.spanArr1[this.position1] += 1;//连续有几行项目名名称相同\n              this.spanArr1.push(0); // 名称相同后往数组里面加一项0\n            }else{\n              this.spanArr1.push(1);\n              this.position1 = index;\n            }\n            }else{\n              this.spanArr.push(1);\n              this.spanArr1.push(1);\n              this.position = index;\n              this.position1 = index;\n              //当项目名称不同时，将当前序号设置为前一个序号+1\n              //this.tableData1[index].sequence = this.tableData1[index-1].sequence+1;\n            }\n          }\n        })\n      },\n\n\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {  //表格合并行\n      console.log(this.spanArr);\n        if(columnIndex === 0){  //序号列也进行合并(第一列)\n          //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\n          //例如:[1,1,2,0,2,0]\n          //1  代表的没有连续的相同的\n          //2  代表连续的两个相同\n          //0  代表是和上一条内容相同\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row, //行\n            colspan: _col  //列\n          }\n\n        }\n        if(columnIndex === 1){ //项目列也进行合并(第二列)\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n        if(columnIndex === 2){ //项目列也进行合并(第二列)\n          const _row = this.spanArr1[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n        if(columnIndex === 3){ //项目列也进行合并(第二列)\n          const _row = this.spanArr1[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n      },\n  }\n};\n",{"version":3,"sources":["PowerByRatio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PowerByRatio.vue","sourceRoot":"src\\components\\power","sourcesContent":["<template>\n  <el-container style=\"height: 100%; border: 1px solid #eee\">\n    <!--左侧菜单开始-->\n    <el-aside width=\"220px\" style=\"background-color: rgb(179, 192, 209)\">\n      <el-menu\n      :default-active=\"navselected\"\n        :active=\"navselected\"\n        background-color=\"#B3C0D1\"\n        text-color=\"#333\"\n        active-text-color=\"#ffffff\"\n        :unique-opened=\"true\"\n        @open=\"handleOpen\"\n        @close=\"handleClose\"\n        @select=\"selectMenu\"\n      >\n        <!-- 一级菜单 -->\n        <template v-for=\"item in list\">\n          <el-submenu\n            v-if=\"item.children && item.children.length\"\n            :index=\"item.path\"\n            :key=\"item.path\"\n          >\n            <template slot=\"title\">\n              <i :class=\"item.icon\"></i>\n              <span>{{item.name}}</span>\n            </template>\n\n            <!-- 二级菜单 -->\n            <template v-for=\"itemChild in item.children\">\n              <el-submenu\n                v-if=\"itemChild.children && itemChild.children.length\"\n                :index=\"itemChild.path\"\n                :key=\"itemChild.path\"\n              >\n                <template slot=\"title\">\n                  <i :class=\"itemChild.icon\"></i>\n                  <span>{{itemChild.name}}</span>\n                </template>\n\n                <!-- 三级菜单 -->\n                <el-menu-item\n                  v-for=\"itemChild_Child in itemChild.children\"\n                  :index=\"itemChild_Child .path\"\n                  :key=\"itemChild_Child.path\"\n                >\n                  <i :class=\"itemChild_Child.icon\"></i>\n                  <span slot=\"title\">{{itemChild_Child.name}}</span>\n                </el-menu-item>\n              </el-submenu>\n\n              <el-menu-item v-else :index=\"itemChild.path\" :key=\"itemChild.path\">\n                <i :class=\"itemChild.icon\"></i>\n                <span slot=\"title\">{{itemChild.name}}</span>\n              </el-menu-item>\n            </template>\n          </el-submenu>\n\n          <el-menu-item v-else :index=\"item.path\" :key=\"item.path\">\n            <i :class=\"item.icon\"></i>\n            <span slot=\"title\">{{item.name}}</span>\n          </el-menu-item>\n        </template>\n      </el-menu>\n    </el-aside>\n    <!--左侧菜单结束-->\n\n    <el-container>\n      <!--表头开始-->\n      <el-header style=\"font-size: 12px\">\n        <el-row :gutter=\"0\">\n          <el-col :span=\"4\">\n            <div class=\"block\">\n              <span class=\"demonstration\"></span>\n              <el-date-picker v-model=\"beginTime\" type=\"datetime\" placeholder=\"开始日期时间\"></el-date-picker>\n            </div>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"block\">\n              <span class=\"demonstration\"></span>\n              <el-date-picker v-model=\"endTime\" type=\"datetime\" placeholder=\"结束日期时间\"></el-date-picker>\n            </div>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-select v-model=\"powerType\" placeholder=\"功率类型\">\n              <el-option label=\"正向有功总\" value=\"ZxygZ\"></el-option>\n              <el-option label=\"反向有功总\" value=\"FxygZ\"></el-option>\n              <el-option label=\"正向无功总\" value=\"ZxwgZ\"></el-option>\n              <el-option label=\"反向无功总\" value=\"FxwgZ\"></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-select v-model=\"Source\" placeholder=\"数据来源\">\n              <el-option label=\"所有数据来源\" value=\"所有数据来源\"></el-option>\n              <el-option label=\"采集\" value=\"采集\"></el-option>\n              <el-option label=\"手工输入\" value=\"手工输入\"></el-option>\n              <el-option label=\"批量导入\" value=\"批量导入\"></el-option>\n              <el-option label=\"录入的表底度\" value=\"录入的表底度\"></el-option>\n              <el-option label=\"负荷曲线数\" value=\"负荷曲线数\"></el-option>\n              <el-option label=\"电表冻结值\" value=\"电表冻结值\"></el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-button type=\"info\" icon=\"el-icon-search\" @click=\"getPowerData\" plain>查询</el-button>\n           <el-button type=\"info\" icon=\"el-icon-upload2\" v-if=\"hasPerm('powerType:export')\" @click=\"exportPowerTotal\" plain>导出</el-button> \n           <el-button type=\"info\" icon=\"el-icon-upload2\" v-if=\"hasPerm('powerType:exportAll')\" @click=\"exportAllPowerTotal\" plain>全部导出</el-button> \n          </el-col>\n        </el-row>\n      </el-header>\n      <!--表头结束-->\n\n      <!--表格开始-->\n      <el-main>\n        <div style=\"margin-top:0px\">\n          <el-table\n            ref=\"testTable\"\n            :data=\"tableData\"\n            style=\"width:100%\"\n            border\n            :default-sort=\"{prop: 'id', order: 'ascending'}\"\n            @selection-change=\"handleSelectionChange\"\n            :span-method=\"objectSpanMethod\"\n            @row-click=\"handleclick\"\n            :row-class-name=\"tableRowClassName\"\n          >\n            <!--<el-table-column type=\"index\" align=\"center\" width=\"40\" label=\"序号\" sortable></el-table-column>-->\n            <el-table-column prop=\"EMeterID\" label=\"ID\" width=\"80\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"EMeterName\" label=\"计量点名称\" align=\"center\" sortable show-overflow-tooltip></el-table-column>\n            <el-table-column prop=\"EDepartmentName\" label=\"部门\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"EDepartmentRatio\" label=\"部门比例\" width=\"80\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"CostCenterName\" label=\"成本中心\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"CostCenterRatio\" label=\"成本中心比例\" width=\"80\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"powerTotal\" label=\"正向功总（kWh\" align=\"center\" sortable></el-table-column>\n           <!-- <el-table-column prop=\"num\" label=\"倍率\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"difValue\" label=\"读数差\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"beginNumber\" label=\"起始表底读数\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"endNumber\" label=\"结束表底读数\" align=\"center\" sortable></el-table-column>-->\n            <el-table-column prop=\"beginTime\" label=\"起始表底抄表时间\" align=\"center\" sortable></el-table-column>\n            <el-table-column prop=\"endTime\" label=\"结束表底抄表时间\" align=\"center\" sortable></el-table-column>\n          </el-table>\n\n          <div align=\"center\">\n            <el-pagination\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"currentPage\"\n              :page-sizes=\"[300,600, 900, 1200]\"\n              :page-size=\"pagesize\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"totalCount\"\n            ></el-pagination>\n          </div>\n        </div>\n      </el-main>\n      <!--表头结束-->\n    </el-container>\n  </el-container>\n</template>\n<style>\n.el-header {\n  background-color: rgb(179, 192, 209);\n  color: #333;\n  line-height: 60px;\n}\n\n.el-aside {\n  color: #333;\n  background-color: #b3c0d1;\n}\n</style>\n\n<script>\nimport API from \"@/api\";\nimport Vue from \"vue\";\nexport default {\n  data() {\n    return {\n      navselected:\"\",\n      beginTime: \"\",\n      endTime: \"\",\n      powerType: \"ZxygZ\",\n      Source: \"所有数据来源\",\n      //表格当前页数据\n      tableData: [],\n      //多选数组\n      multipleSelection: [],\n      //搜索条件\n      criteria: \"\",\n      //下拉菜单选项\n      select: \"\",\n      //默认每页数据量\n      pagesize: 50000000,\n      //默认高亮行数据id\n      highlightId: -1,\n      //当前页码\n      currentPage: 1,\n      //查询的页码\n      start: 1,\n      //默认数据总数\n      totalCount: 0,\n      formLabelWidth: \"120px\",\n      list: \"\",\n      key: \"\",\n      EStationName:\"\",\n      spanArr:[],//合并电表\n      spanArr1:[],//合并部门\n      position:0,//在data里面定义\n      position1:0,//在data里面定义\n    };\n  },\n  created() {\n    this.loadMenu();\n  },\n  methods: {\n    //获取所选节点\n    selectMenu: function(key, keyPath, name) {\n      this.EStationName = keyPath[1].split(\"/\")[1];\n      if(keyPath.length<=2){\n        this.key = \"\";\n      }else{\n        this.key = keyPath[2].split(\"/\")[1];\n      }\n      console.log(key+\"---\"+keyPath+'---'+name);\n    },\n    handleOpen: function(key, keyPath, name) {\n      this.EStationName = key.split(\"/\")[1];\n      this.key = \"\";\n      console.log(this.EStationName);\n      console.log(\"open----\"+key+\",,,,\"+keyPath+',,,,,'+name);\n      this.navselected=\"/\";\n      console.log(this.navselected);\n    },\n    handleClose: function(key, keyPath, name) {\n      this.EStationName = key.split(\"/\")[1];\n      this.key = \"\";\n      console.log(this.EStationName);\n      this.navselected=\"/\";\n      console.log(\"close----\"+key+\",,,,\"+keyPath+',,,,,'+name);\n      console.log(this.navselected);\n    },\n\n    //加载树状图\n    loadMenu: function() {\n      API.powerUtil\n        .getMenu()\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            this.list = data.data;\n          } else {\n            //this.$Message.error(data.msg);\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n    },\n    //从服务器读取数据\n    getPowerData: function() {\n       if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.Source==\"\"){\n        this.$message(\"请选择数据来源！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n      let params = {\n        estationName:this.EStationName,\n        emeterName: this.key,\n        beginTime: this.beginTime,\n        endTime: this.endTime,\n        source: this.Source,\n        powerType: this.powerType,\n        pageNum: this.currentPage,\n        pageSize: this.pagesize\n      };\n      API.powerUtil\n        .getPowerByRatio(params)\n        .then(({ data }) => {\n          console.log(data.data);\n          if (data.status == 0) {\n            if(data.data.tableData==null){\n              this.tableData = null;\n              this.totalCount = 0;\n            }else{\n            this.tableData = data.data.tableData.list;\n            this.totalCount = data.data.tableData.total;\n            this.rowspan();\n            }\n            \n          } else {\n            this.$message(\"请求失败！\");\n          }\n        })\n        .catch(data => {\n          this.$message(\"请求失败ww！\");\n          console.log(data);\n        });\n      }\n    },\n\n    //多选响应\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val;\n    },\n\n    //点击行响应\n    handleclick: function(row, event, column) {\n      this.highlightId = row.id;\n    },\n\n    //搜索\n    search: function() {\n      console.log(this.select);\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n    add: function() {\n      this.addFormVisible = true;\n    },\n    exportPowerTotal() {\n      if(this.EStationName==null || this.EStationName ==\"\"){\n         this.$message(\"请选择电表！\");\n      }else if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n          //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n         window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?estationName=\" + this.EStationName+\"&emeterName=\"+this.key+\"&beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n      }\n      \n     // this.$message(\"待开发\");\n    },\n    exportAllPowerTotal() {\n      if(this.beginTime==\"\"){\n        this.$message(\"请选择开始时间！\");\n      }else if(this.endTime==\"\"){\n        this.$message(\"请选择结束时间！\");\n      }else if(this.powerType==\"\"){\n        this.$message(\"请选择功率类型！\");\n      }else{\n        //window.location.href = \"http://localhost:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n        window.location.href = \"http://10.30.100.110:8088/api/power/exportPowerByRatio.do?beginTime=\"+this.beginTime+\"&endTime=\"+this.endTime+\"&powerType=\"+this.powerType;\n      }\n    },\n\n    //改变当前点击的行的class，高亮当前行\n    tableRowClassName: function(row, index) {\n      if (row.id == this.highlightId) {\n        return \"info-row\";\n      }\n    },\n\n    //每页显示数据量变更\n    handleSizeChange: function(val) {\n      this.pagesize = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n\n    //页码变更\n    handleCurrentChange: function(val) {\n      this.currentPage = val;\n      this.loadData(this.criteria, this.currentPage, this.pagesize);\n    },\n     rowspan:function() {\n        this.spanArr = [];//在data里面定义\n        this.position = 0; //在data里面定义\n        this.tableData.forEach((item,index) => {\n          if( index === 0){\n            this.spanArr.push(1);\n            this.spanArr1.push(1);\n            this.position = 0;\n            this.position1 = 0;\n            //item.sequence=index+1;//设置序号\n          }else{\n            if(this.tableData[index].EMeterID === this.tableData[index-1].EMeterID ){\n              this.spanArr[this.position] += 1;//连续有几行项目名名称相同\n              this.spanArr.push(0); // 名称相同后往数组里面加一项0\n              //当项目名称相同时，设置当前序号和前一个相同\n             // this.tableData1[index].sequence = this.tableData1[index-1].sequence;\n            if(this.tableData[index].EDepartmentName === this.tableData[index-1].EDepartmentName ){\n              this.spanArr1[this.position1] += 1;//连续有几行项目名名称相同\n              this.spanArr1.push(0); // 名称相同后往数组里面加一项0\n            }else{\n              this.spanArr1.push(1);\n              this.position1 = index;\n            }\n            }else{\n              this.spanArr.push(1);\n              this.spanArr1.push(1);\n              this.position = index;\n              this.position1 = index;\n              //当项目名称不同时，将当前序号设置为前一个序号+1\n              //this.tableData1[index].sequence = this.tableData1[index-1].sequence+1;\n            }\n          }\n        })\n      },\n\n\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {  //表格合并行\n      console.log(this.spanArr);\n        if(columnIndex === 0){  //序号列也进行合并(第一列)\n          //this.spanArr这个数组里面存的是table里面连续的有几条数据相同\n          //例如:[1,1,2,0,2,0]\n          //1  代表的没有连续的相同的\n          //2  代表连续的两个相同\n          //0  代表是和上一条内容相同\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row, //行\n            colspan: _col  //列\n          }\n\n        }\n        if(columnIndex === 1){ //项目列也进行合并(第二列)\n          const _row = this.spanArr[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n        if(columnIndex === 2){ //项目列也进行合并(第二列)\n          const _row = this.spanArr1[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n        if(columnIndex === 3){ //项目列也进行合并(第二列)\n          const _row = this.spanArr1[rowIndex];\n          const _col = _row>0 ? 1 : 0;\n          return {\n            rowspan: _row,\n            colspan: _col\n          }\n        }\n      },\n  }\n};\n</script>\n\n<style scoped>\n.el-select .el-input {\n  width: 110px;\n}\n\n.el-table .info-row {\n  background: #c9e5f5;\n}\n\n#top {\n  background: #20a0ff;\n  padding: 5px;\n  overflow: hidden;\n}\n</style>\n"]}]}