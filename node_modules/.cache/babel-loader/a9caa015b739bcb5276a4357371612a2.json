{"remainingRequest":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js!E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\energy\\qiantai\\vue-energy\\src\\api\\login\\permission.js","dependencies":[{"path":"E:\\code\\energy\\qiantai\\vue-energy\\src\\api\\login\\permission.js","mtime":1555554717472},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\energy\\qiantai\\vue-energy\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"E:\\\\code\\\\energy\\\\qiantai\\\\vue-energy\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n// store/permission.js\nimport { asyncRouterMap, constantRouterMap } from '@/router';\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.role) {\n    return roles.some(function (role) {\n      return route.meta.role.indexOf(role) >= 0;\n    });\n  } else {\n    return true;\n  }\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve) {\n        var roles = data;\n        var accessedRouters = asyncRouterMap.filter(function (v) {\n          if (roles.indexOf('admin') >= 0) return true;\n\n          if (hasPermission(roles, v)) {\n            if (v.children && v.children.length > 0) {\n              v.children = v.children.filter(function (child) {\n                if (hasPermission(roles, child)) {\n                  return child;\n                }\n\n                return false;\n              });\n              return v;\n            } else {\n              return v;\n            }\n          }\n\n          return false;\n        });\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",null]}